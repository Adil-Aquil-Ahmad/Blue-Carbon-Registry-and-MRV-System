{"id":"41806679bd17f266e84bb0a6bab6b96c","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/BlueCarbonRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/*\r\n BlueCarbonRegistry.sol\r\n - BlueCarbonRegistry: manages projects, evidence anchoring, verification, and issues NFTs (receipts)\r\n - CarbonToken: an ERC20 token representing fungible carbon credits\r\n - AccessControl: role-based verifier/issuer management\r\n*/\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract CarbonToken is ERC20, ERC20Burnable, AccessControl {\r\n    bytes32 public constant ISSUER_ROLE = keccak256(\"ISSUER_ROLE\");\r\n\r\n    constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) {\r\n        // grant deployer admin role\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external onlyRole(ISSUER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n\r\n/**\r\n * @title BlueCarbonRegistry\r\n * @notice Registry for blue carbon restoration projects, MRV evidence anchoring,\r\n *         verifier/admin roles, NFT receipts, and issuance of fungible carbon tokens.\r\n */\r\ncontract BlueCarbonRegistry is ERC721URIStorage, AccessControl, Ownable {\r\n    bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\");\r\n\r\n    CarbonToken public carbonToken; // Address of ERC20 token for credits\r\n\r\n    uint256 public totalProjects;\r\n    uint256 private _nextEvidenceId;\r\n    uint256 private _nextReceiptTokenId;\r\n    \r\n    \r\n    struct Project {\r\n        string name;\r\n        string location; // can be human-readable or geojson string\r\n        uint256 area; // in hectares (or m^2 as you prefer)\r\n        address owner; // NGO / community wallet\r\n        string metadataURI; // IPFS metadata for the project\r\n        bool exists;\r\n        uint256 totalIssuedCredits; // total fungible credits issued (in token smallest unit)\r\n    }\r\n\r\n    struct Evidence {\r\n        uint256 projectId;\r\n        bytes32 evidenceHash; // SHA-256 hash of evidence file(s)\r\n        string evidenceURI; // IPFS CID or metadata URI\r\n        address uploader;\r\n        bool verified;\r\n        uint256 timestamp;\r\n        uint256 receiptTokenId; // NFT receipt minted after verification (0 if none)\r\n    }\r\n\r\n    // storage\r\n    mapping(uint256 => Project) public projects; // projectId => Project\r\n    mapping(uint256 => Evidence) public evidences; // evidenceId => Evidence\r\n\r\n    // events\r\n    event ProjectRegistered(uint256 indexed projectId, address indexed owner, string name, string metadataURI);\r\n    event EvidenceUploaded(uint256 indexed evidenceId, uint256 indexed projectId, bytes32 evidenceHash, string evidenceURI, address uploader);\r\n    event EvidenceVerified(uint256 indexed evidenceId, uint256 indexed projectId, address verifier, uint256 receiptTokenId);\r\n    event CreditsMinted(uint256 indexed projectId, address indexed to, uint256 amount);\r\n    event ReceiptMinted(uint256 indexed tokenId, uint256 indexed evidenceId, address indexed to);\r\n    event ReceiptRetired(uint256 indexed tokenId, address indexed owner);\r\n\r\n    // constructor\r\n    constructor(address admin) ERC721(\"BlueCarbonReceipt\", \"BCR\") Ownable(admin) {\r\n        // set admin roles and ownership\r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(VERIFIER_ROLE, admin);\r\n\r\n        // set owner to admin\r\n        transferOwnership(admin);\r\n    }\r\n\r\n    // -------------------------\r\n    // ADMIN & ROLE MANAGEMENT\r\n    // -------------------------\r\n\r\n    function setCarbonToken(address tokenAddress) external onlyOwner {\r\n        require(tokenAddress != address(0), \"Invalid token address\");\r\n        carbonToken = CarbonToken(tokenAddress);\r\n    }\r\n\r\n    function addVerifier(address verifier) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        grantRole(VERIFIER_ROLE, verifier);\r\n    }\r\n\r\n    function removeVerifier(address verifier) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        revokeRole(VERIFIER_ROLE, verifier);\r\n    }\r\n\r\n    // -------------------------\r\n    // PROJECT LIFECYCLE\r\n    // -------------------------\r\n\r\n    /**\r\n     * @notice Register a new restoration project\r\n     * @param name Project name\r\n     * @param location Human readable location or geojson\r\n     * @param area Area measure (units documented by off-chain)\r\n     * @param ownerAddr Wallet address that will receive credits\r\n     * @param metadataURI IPFS metadata URI describing the project\r\n     * @return projectId newly assigned id\r\n     */\r\n    function registerProject(\r\n        string memory name,\r\n        string memory location,\r\n        uint256 area,\r\n        address ownerAddr,\r\n        string memory metadataURI\r\n    ) external onlyOwner returns (uint256 projectId) {\r\n        require(ownerAddr != address(0), \"Owner address required\");\r\n        projectId = totalProjects + 1;\r\n        projects[projectId] = Project({\r\n            name: name,\r\n            location: location,\r\n            area: area,\r\n            owner: ownerAddr,\r\n            metadataURI: metadataURI,\r\n            exists: true,\r\n            totalIssuedCredits: 0\r\n        });\r\n        totalProjects = projectId;\r\n\r\n        emit ProjectRegistered(projectId, ownerAddr, name, metadataURI);\r\n    }\r\n\r\n    function updateProjectMetadata(uint256 projectId, string memory metadataURI) external {\r\n        require(projects[projectId].exists, \"Project not found\");\r\n        require(msg.sender == owner() || msg.sender == projects[projectId].owner, \"Only owner or project owner\");\r\n        projects[projectId].metadataURI = metadataURI;\r\n    }\r\n\r\n    // -------------------------\r\n    // EVIDENCE / MRV\r\n    // -------------------------\r\n\r\n    /**\r\n     * @notice Upload an evidence anchor (off-chain file hashed + stored in IPFS)\r\n     * @param projectId project the evidence belongs to\r\n     * @param evidenceHash SHA-256 (or chosen) hash of the evidence payload\r\n     * @param evidenceURI IPFS CID or URI for details\r\n     * @return evidenceId\r\n     */\r\n    function uploadEvidence(\r\n        uint256 projectId,\r\n        bytes32 evidenceHash,\r\n        string memory evidenceURI\r\n    ) external returns (uint256 evidenceId) {\r\n        require(projects[projectId].exists, \"Project not found\");\r\n        evidenceId = ++_nextEvidenceId;\r\n        evidences[evidenceId] = Evidence({\r\n            projectId: projectId,\r\n            evidenceHash: evidenceHash,\r\n            evidenceURI: evidenceURI,\r\n            uploader: msg.sender,\r\n            verified: false,\r\n            timestamp: block.timestamp,\r\n            receiptTokenId: 0\r\n        });\r\n\r\n        emit EvidenceUploaded(evidenceId, projectId, evidenceHash, evidenceURI, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice Verifier approves evidence -> optional mint receipt NFT and/or mint fungible credits\r\n     * @param evidenceId evidence to verify\r\n     * @param mintReceipt whether to mint an NFT receipt for the evidence (true = mint)\r\n     * @param receiptTokenURI tokenURI for the NFT receipt if minted\r\n     * @param mintFungibleAmount amount of ERC20 token to mint to project owner (in token base units)\r\n     */\r\n    function verifyEvidenceAndIssue(\r\n        uint256 evidenceId,\r\n        bool mintReceipt,\r\n        string memory receiptTokenURI,\r\n        uint256 mintFungibleAmount\r\n    ) external onlyRole(VERIFIER_ROLE) returns (uint256 receiptTokenId) {\r\n        Evidence storage ev = evidences[evidenceId];\r\n        require(ev.timestamp != 0, \"Evidence not found\");\r\n        require(!ev.verified, \"Already verified\");\r\n\r\n        ev.verified = true;\r\n\r\n        // Mint receipt NFT if requested\r\n        if (mintReceipt) {\r\n            _nextReceiptTokenId++;\r\n            receiptTokenId = _nextReceiptTokenId;\r\n            _safeMint(ev.uploader, receiptTokenId); // mint to uploader (could be project owner or uploader)\r\n            if (bytes(receiptTokenURI).length > 0) {\r\n                _setTokenURI(receiptTokenId, receiptTokenURI);\r\n            }\r\n            ev.receiptTokenId = receiptTokenId;\r\n            emit ReceiptMinted(receiptTokenId, evidenceId, ev.uploader);\r\n        }\r\n\r\n        // Mint fungible credits if requested and CarbonToken is set\r\n        if (mintFungibleAmount > 0) {\r\n            require(address(carbonToken) != address(0), \"Carbon token not set\");\r\n            address projectOwner = projects[ev.projectId].owner;\r\n            // The registry must hold ISSUER_ROLE on the CarbonToken contract for this to succeed\r\n            carbonToken.mint(projectOwner, mintFungibleAmount);\r\n            projects[ev.projectId].totalIssuedCredits += mintFungibleAmount;\r\n            emit CreditsMinted(ev.projectId, projectOwner, mintFungibleAmount);\r\n        }\r\n\r\n        emit EvidenceVerified(evidenceId, ev.projectId, msg.sender, ev.receiptTokenId);\r\n    }\r\n\r\n    // -------------------------\r\n    // NFT & CREDIT UTILITIES\r\n    // -------------------------\r\n\r\n    /// Wrapper to transfer a receipt NFT (standard ERC721 transfer allowed too)\r\n    function transferReceipt(address to, uint256 tokenId) external {\r\n        require(ownerOf(tokenId) == msg.sender, \"Not token owner\");\r\n        safeTransferFrom(msg.sender, to, tokenId);\r\n        emit ReceiptMinted(tokenId, 0, to); // note: emit a mint-like event for transfer (or remove if not desired)\r\n    }\r\n\r\n    /// Retire (burn) a receipt NFT\r\n    function retireReceipt(uint256 tokenId) external {\r\n        require(ownerOf(tokenId) == msg.sender, \"Not token owner\");\r\n        _burn(tokenId);\r\n        emit ReceiptRetired(tokenId, msg.sender);\r\n    }\r\n\r\n    /// Admin / owner can withdraw accidentally sent ERC20 tokens (safety)\r\n    function rescueERC20(address tokenAddr, address to, uint256 amount) external onlyOwner {\r\n        IERC20(tokenAddr).transfer(to, amount);\r\n    }\r\n\r\n    // -------------------------\r\n    // READ HELPERS\r\n    // -------------------------\r\n\r\n    function getProject(uint256 projectId) external view returns (\r\n        string memory name,\r\n        string memory location,\r\n        uint256 area,\r\n        address ownerAddr,\r\n        string memory metadataURI,\r\n        bool exists,\r\n        uint256 totalIssued\r\n    ) {\r\n        Project memory p = projects[projectId];\r\n        return (p.name, p.location, p.area, p.owner, p.metadataURI, p.exists, p.totalIssuedCredits);\r\n    }\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721URIStorage, AccessControl)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function getEvidence(uint256 evidenceId) external view returns (\r\n        uint256 projectId,\r\n        bytes32 evidenceHash,\r\n        string memory evidenceURI,\r\n        address uploader,\r\n        bool verified,\r\n        uint256 timestamp,\r\n        uint256 receiptTokenId\r\n    ) {\r\n        Evidence memory e = evidences[evidenceId];\r\n        return (e.projectId, e.evidenceHash, e.evidenceURI, e.uploader, e.verified, e.timestamp, e.receiptTokenId);\r\n    }\r\n\r\n    // -------------------------\r\n    // Misc\r\n    // -------------------------\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[2716],"ERC165":[4194],"IAccessControl":[379],"IERC165":[4206]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":2717,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":4195,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,4194,4206,379,2716],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4193],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2716],"Ownable":[527]},"id":528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":528,"sourceUnit":2717,"src":"128:45:2","symbolAliases":[{"foreign":{"id":382,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":385,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"692:7:2"},"id":386,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":527,"linearizedBaseContracts":[527,2716],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":388,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":527,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":393,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":393,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":398,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":398,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":404,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":404,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":404,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":429,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":423,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":416,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":422,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":426,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":430,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":430,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":527,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":436,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":438,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":444,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":527,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":461,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":460,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":527,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":478,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":527,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":505,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":499,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":498,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":502,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":501,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":506,"implemented":true,"kind":"function","modifiers":[{"id":484,"kind":"modifierInvocation","modifierName":{"id":483,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":506,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":527,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"id":514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":516,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":521,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":526,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":527,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":528,"src":"663:2438:2","usedErrors":[393,398],"usedEvents":[404]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4206]},"id":532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":529,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":532,"sourceUnit":4207,"src":"133:59:3","symbolAliases":[{"foreign":{"id":530,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4206],"IERC4906":[555],"IERC721":[2435]},"id":556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":533,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":532,"src":"133:38:4","symbolAliases":[{"foreign":{"id":534,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":560,"src":"172:38:4","symbolAliases":[{"foreign":{"id":536,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"180:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":539,"name":"IERC165","nameLocations":["279:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4206,"src":"279:7:4"},"id":540,"nodeType":"InheritanceSpecifier","src":"279:7:4"},{"baseName":{"id":541,"name":"IERC721","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2435,"src":"288:7:4"},"id":542,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"212:45:4","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":555,"linearizedBaseContracts":[555,2435,4206],"name":"IERC4906","nameLocation":"267:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"302:201:4","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":547,"name":"MetadataUpdate","nameLocation":"514:14:4","nodeType":"EventDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:4","nodeType":"VariableDeclaration","scope":547,"src":"529:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:4"},"src":"508:39:4"},{"anonymous":false,"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"553:212:4","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":554,"name":"BatchMetadataUpdate","nameLocation":"776:19:4","nodeType":"EventDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:4","nodeType":"VariableDeclaration","scope":554,"src":"796:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:4","nodeType":"VariableDeclaration","scope":554,"src":"818:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:4"},"src":"770:68:4"}],"scope":556,"src":"257:583:4","usedErrors":[],"usedEvents":[547,554,2334,2343,2352]}],"src":"107:734:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[2435]},"id":560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":557,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":560,"sourceUnit":2436,"src":"132:52:5","symbolAliases":[{"foreign":{"id":558,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[696],"IERC20Errors":[601],"IERC721Errors":[649]},"id":697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":561,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":601,"linearizedBaseContracts":[601],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":571,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":571,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":571,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":571,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":576,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":576,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":581,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":581,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":590,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":590,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":590,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":590,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":595,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":595,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":600,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":600,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":697,"src":"280:1764:6","usedErrors":[571,576,581,590,595,600],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":649,"linearizedBaseContracts":[649],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":607,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":607,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":612,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":612,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":621,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":621,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":621,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":621,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":626,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":626,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":631,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":631,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":638,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":638,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":638,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":643,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":643,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":648,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":648,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":697,"src":"2190:2092:6","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":696,"linearizedBaseContracts":[696],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":661,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":661,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":661,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":661,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":661,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":666,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":666,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":671,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":671,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":678,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":678,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":678,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":683,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":683,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":688,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":688,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":695,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":695,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":695,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":697,"src":"4430:2107:6","usedErrors":[661,666,671,678,683,688,695],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2716],"ERC20":[1211],"IERC20":[1289],"IERC20Errors":[601],"IERC20Metadata":[1361]},"id":1212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1212,"sourceUnit":1290,"src":"131:36:7","symbolAliases":[{"foreign":{"id":699,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1212,"sourceUnit":1362,"src":"168:63:7","symbolAliases":[{"foreign":{"id":701,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1212,"sourceUnit":2717,"src":"232:48:7","symbolAliases":[{"foreign":{"id":703,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1212,"sourceUnit":697,"src":"281:65:7","symbolAliases":[{"foreign":{"id":705,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":708,"name":"Context","nameLocations":["1133:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"1133:7:7"},"id":709,"nodeType":"InheritanceSpecifier","src":"1133:7:7"},{"baseName":{"id":710,"name":"IERC20","nameLocations":["1142:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1289,"src":"1142:6:7"},"id":711,"nodeType":"InheritanceSpecifier","src":"1142:6:7"},{"baseName":{"id":712,"name":"IERC20Metadata","nameLocations":["1150:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"1150:14:7"},"id":713,"nodeType":"InheritanceSpecifier","src":"1150:14:7"},{"baseName":{"id":714,"name":"IERC20Errors","nameLocations":["1166:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"1166:12:7"},"id":715,"nodeType":"InheritanceSpecifier","src":"1166:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"348:757:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1211,"linearizedBaseContracts":[1211,601,1361,1289,2716],"name":"ERC20","nameLocation":"1124:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":719,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:7","nodeType":"VariableDeclaration","scope":1211,"src":"1185:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":718,"keyName":"account","keyNameLocation":"1201:7:7","keyType":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":725,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:7","nodeType":"VariableDeclaration","scope":1211,"src":"1245:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":724,"keyName":"account","keyNameLocation":"1261:7:7","keyType":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":723,"keyName":"spender","keyNameLocation":"1288:7:7","keyType":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":727,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:7","nodeType":"VariableDeclaration","scope":1211,"src":"1335:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":729,"mutability":"mutable","name":"_name","nameLocation":"1385:5:7","nodeType":"VariableDeclaration","scope":1211,"src":"1370:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":731,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:7","nodeType":"VariableDeclaration","scope":1211,"src":"1396:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":747,"nodeType":"Block","src":"1638:57:7","statements":[{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":739,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":740,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"1656:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":742,"nodeType":"ExpressionStatement","src":"1648:13:7"},{"expression":{"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":743,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"1671:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":744,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1681:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":746,"nodeType":"ExpressionStatement","src":"1671:17:7"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1425:152:7","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":748,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"name_","nameLocation":"1608:5:7","nodeType":"VariableDeclaration","scope":748,"src":"1594:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":733,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:7","nodeType":"VariableDeclaration","scope":748,"src":"1615:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":735,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:7"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"1638:0:7"},"scope":1211,"src":"1582:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1348],"body":{"id":756,"nodeType":"Block","src":"1820:29:7","statements":[{"expression":{"id":754,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1837:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":753,"id":755,"nodeType":"Return","src":"1830:12:7"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"1701:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":757,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:7","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"1773:2:7"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"1805:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":751,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:7"},"scope":1211,"src":"1760:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1354],"body":{"id":765,"nodeType":"Block","src":"2024:31:7","statements":[{"expression":{"id":763,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2041:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":762,"id":764,"nodeType":"Return","src":"2034:14:7"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"1855:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":766,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:7","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"1977:2:7"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"2009:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":760,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:7"},"scope":1211,"src":"1962:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1360],"body":{"id":774,"nodeType":"Block","src":"2744:26:7","statements":[{"expression":{"hexValue":"3138","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":771,"id":773,"nodeType":"Return","src":"2754:9:7"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"2061:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:7","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"2705:2:7"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"2737:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":769,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:7"},"scope":1211,"src":"2688:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1238],"body":{"id":783,"nodeType":"Block","src":"2864:36:7","statements":[{"expression":{"id":781,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2881:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"2874:19:7"}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"2776:22:7","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":784,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:7","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"2823:2:7"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"2855:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:7"},"scope":1211,"src":"2803:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1246],"body":{"id":796,"nodeType":"Block","src":"3007:42:7","statements":[{"expression":{"baseExpression":{"id":792,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3024:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":794,"indexExpression":{"id":793,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"3034:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":791,"id":795,"nodeType":"Return","src":"3017:25:7"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"2906:22:7","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":797,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:7","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"account","nameLocation":"2960:7:7","nodeType":"VariableDeclaration","scope":797,"src":"2952:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:7"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":797,"src":"2998:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:7"},"scope":1211,"src":"2933:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1256],"body":{"id":820,"nodeType":"Block","src":"3319:103:7","statements":[{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"3337:5:7","nodeType":"VariableDeclaration","scope":820,"src":"3329:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":811,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":809,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3345:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:7"},{"expression":{"arguments":[{"id":813,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"3377:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"3384:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":812,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"3367:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"3367:27:7"},{"expression":{"hexValue":"74727565","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":806,"id":819,"nodeType":"Return","src":"3404:11:7"}]},"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"3055:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":821,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:7","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"to","nameLocation":"3270:2:7","nodeType":"VariableDeclaration","scope":821,"src":"3262:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"value","nameLocation":"3282:5:7","nodeType":"VariableDeclaration","scope":821,"src":"3274:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:7"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"3313:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":804,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:7"},"scope":1211,"src":"3244:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1266],"body":{"id":837,"nodeType":"Block","src":"3544:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":831,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3561:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":833,"indexExpression":{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"3573:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":835,"indexExpression":{"id":834,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3580:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":830,"id":836,"nodeType":"Return","src":"3554:34:7"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"3428:22:7","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":838,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:7","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"owner","nameLocation":"3482:5:7","nodeType":"VariableDeclaration","scope":838,"src":"3474:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"spender","nameLocation":"3497:7:7","nodeType":"VariableDeclaration","scope":838,"src":"3489:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:7"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"3535:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:7"},"scope":1211,"src":"3455:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1276],"body":{"id":861,"nodeType":"Block","src":"3981:107:7","statements":[{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"owner","nameLocation":"3999:5:7","nodeType":"VariableDeclaration","scope":861,"src":"3991:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":852,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":850,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"4007:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:7"},{"expression":{"arguments":[{"id":854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4038:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4045:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"4054:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":853,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1102,1162],"referencedDeclaration":1102,"src":"4029:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"4029:31:7"},{"expression":{"hexValue":"74727565","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":847,"id":860,"nodeType":"Return","src":"4070:11:7"}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"3601:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":862,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:7","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"spender","nameLocation":"3927:7:7","nodeType":"VariableDeclaration","scope":862,"src":"3919:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"value","nameLocation":"3944:5:7","nodeType":"VariableDeclaration","scope":862,"src":"3936:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:7"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"3975:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":845,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:7"},"scope":1211,"src":"3902:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1288],"body":{"id":893,"nodeType":"Block","src":"4773:151:7","statements":[{"assignments":[875],"declarations":[{"constant":false,"id":875,"mutability":"mutable","name":"spender","nameLocation":"4791:7:7","nodeType":"VariableDeclaration","scope":893,"src":"4783:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":878,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":876,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"4801:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:7"},{"expression":{"arguments":[{"id":880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"4839:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"4845:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4854:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":879,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4823:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"4823:37:7"},{"expression":{"arguments":[{"id":886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"4880:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"4886:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4890:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":885,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4870:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"4870:26:7"},{"expression":{"hexValue":"74727565","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":873,"id":892,"nodeType":"Return","src":"4906:11:7"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"4094:581:7","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":894,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:7","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"from","nameLocation":"4710:4:7","nodeType":"VariableDeclaration","scope":894,"src":"4702:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"to","nameLocation":"4724:2:7","nodeType":"VariableDeclaration","scope":894,"src":"4716:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"value","nameLocation":"4736:5:7","nodeType":"VariableDeclaration","scope":894,"src":"4728:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:7"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"4767:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":871,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:7"},"scope":1211,"src":"4680:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":940,"nodeType":"Block","src":"5366:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"5380:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:7","typeDescriptions":{}}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"5376:86:7","trueBody":{"id":917,"nodeType":"Block","src":"5400:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:7","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":910,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"5421:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":916,"nodeType":"RevertStatement","src":"5414:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"5475:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:7","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"IfStatement","src":"5471:86:7","trueBody":{"id":932,"nodeType":"Block","src":"5493:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:7","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"5514:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":931,"nodeType":"RevertStatement","src":"5507:39:7"}]}},{"expression":{"arguments":[{"id":935,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"5574:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"5580:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5584:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"5566:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"5566:24:7"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"4930:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:7","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"from","nameLocation":"5324:4:7","nodeType":"VariableDeclaration","scope":941,"src":"5316:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"to","nameLocation":"5338:2:7","nodeType":"VariableDeclaration","scope":941,"src":"5330:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"value","nameLocation":"5350:5:7","nodeType":"VariableDeclaration","scope":941,"src":"5342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:7"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[],"src":"5366:0:7"},"scope":1211,"src":"5297:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"5987:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6001:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:7","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":988,"nodeType":"Block","src":"6175:362:7","statements":[{"assignments":[963],"declarations":[{"constant":false,"id":963,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:7","nodeType":"VariableDeclaration","scope":988,"src":"6189:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":967,"initialValue":{"baseExpression":{"id":964,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6211:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":966,"indexExpression":{"id":965,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6221:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6244:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6258:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"6240:115:7","trueBody":{"id":977,"nodeType":"Block","src":"6265:90:7","statements":[{"errorCall":{"arguments":[{"id":972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6315:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6321:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6334:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":971,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6290:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":976,"nodeType":"RevertStatement","src":"6283:57:7"}]}},{"id":987,"nodeType":"UncheckedBlock","src":"6368:159:7","statements":[{"expression":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":979,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6475:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":981,"indexExpression":{"id":980,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6485:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6493:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6507:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":986,"nodeType":"ExpressionStatement","src":"6475:37:7"}]}]},"id":989,"nodeType":"IfStatement","src":"5997:540:7","trueBody":{"id":961,"nodeType":"Block","src":"6021:148:7","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6137:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6153:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":960,"nodeType":"ExpressionStatement","src":"6137:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6551:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:7","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1009,"nodeType":"Block","src":"6766:206:7","statements":[{"id":1008,"nodeType":"UncheckedBlock","src":"6780:182:7","statements":[{"expression":{"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1002,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6925:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1004,"indexExpression":{"id":1003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6935:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6942:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1007,"nodeType":"ExpressionStatement","src":"6925:22:7"}]}]},"id":1010,"nodeType":"IfStatement","src":"6547:425:7","trueBody":{"id":1001,"nodeType":"Block","src":"6569:191:7","statements":[{"id":1000,"nodeType":"UncheckedBlock","src":"6583:167:7","statements":[{"expression":{"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":996,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6714:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6730:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":999,"nodeType":"ExpressionStatement","src":"6714:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1012,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6996:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"7002:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"7006:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1011,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"6987:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"EmitStatement","src":"6982:30:7"}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"5603:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:7","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"from","nameLocation":"5937:4:7","nodeType":"VariableDeclaration","scope":1018,"src":"5929:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"to","nameLocation":"5951:2:7","nodeType":"VariableDeclaration","scope":1018,"src":"5943:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"value","nameLocation":"5963:5:7","nodeType":"VariableDeclaration","scope":1018,"src":"5955:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:7"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"5987:0:7"},"scope":1211,"src":"5912:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"7418:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7432:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:7","typeDescriptions":{}}},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1040,"nodeType":"IfStatement","src":"7428:91:7","trueBody":{"id":1039,"nodeType":"Block","src":"7455:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:7","typeDescriptions":{}}},"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7476:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1038,"nodeType":"RevertStatement","src":"7469:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:7","typeDescriptions":{}}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7548:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"7557:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7528:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"7528:35:7"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"7025:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:7","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"account","nameLocation":"7385:7:7","nodeType":"VariableDeclaration","scope":1051,"src":"7377:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"7402:5:7","nodeType":"VariableDeclaration","scope":1051,"src":"7394:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:7"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"7418:0:7"},"scope":1211,"src":"7362:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1083,"nodeType":"Block","src":"7944:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7958:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:7","typeDescriptions":{}}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1073,"nodeType":"IfStatement","src":"7954:89:7","trueBody":{"id":1072,"nodeType":"Block","src":"7981:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:7","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1065,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"8002:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1071,"nodeType":"RevertStatement","src":"7995:37:7"}]}},{"expression":{"arguments":[{"id":1075,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8060:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:7","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"8081:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1074,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8052:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"8052:35:7"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"7576:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1084,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:7","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"account","nameLocation":"7911:7:7","nodeType":"VariableDeclaration","scope":1084,"src":"7903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"value","nameLocation":"7928:5:7","nodeType":"VariableDeclaration","scope":1084,"src":"7920:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:7"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"7944:0:7"},"scope":1211,"src":"7888:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"8704:54:7","statements":[{"expression":{"arguments":[{"id":1095,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8723:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"8730:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"8739:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1094,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1102,1162],"referencedDeclaration":1162,"src":"8714:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"ExpressionStatement","src":"8714:37:7"}]},"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"8100:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"owner","nameLocation":"8656:5:7","nodeType":"VariableDeclaration","scope":1102,"src":"8648:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"spender","nameLocation":"8671:7:7","nodeType":"VariableDeclaration","scope":1102,"src":"8663:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"value","nameLocation":"8688:5:7","nodeType":"VariableDeclaration","scope":1102,"src":"8680:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:7"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"8704:0:7"},"scope":1211,"src":"8630:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"9703:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"9717:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:7","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1128,"nodeType":"IfStatement","src":"9713:89:7","trueBody":{"id":1127,"nodeType":"Block","src":"9738:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:7","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1120,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9759:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1126,"nodeType":"RevertStatement","src":"9752:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"9815:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:7","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1143,"nodeType":"IfStatement","src":"9811:90:7","trueBody":{"id":1142,"nodeType":"Block","src":"9838:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:7","typeDescriptions":{}}},"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1135,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9859:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1141,"nodeType":"RevertStatement","src":"9852:38:7"}]}},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1144,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"9910:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1147,"indexExpression":{"id":1145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"9922:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1148,"indexExpression":{"id":1146,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"9929:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"9940:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"9910:35:7"},{"condition":{"id":1152,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"9959:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"nodeType":"IfStatement","src":"9955:76:7","trueBody":{"id":1159,"nodeType":"Block","src":"9970:61:7","statements":[{"eventCall":{"arguments":[{"id":1154,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"9998:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1155,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"10005:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"10014:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1153,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"9989:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1158,"nodeType":"EmitStatement","src":"9984:36:7"}]}}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"8764:836:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:7","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"owner","nameLocation":"9631:5:7","nodeType":"VariableDeclaration","scope":1162,"src":"9623:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"spender","nameLocation":"9646:7:7","nodeType":"VariableDeclaration","scope":1162,"src":"9638:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"value","nameLocation":"9663:5:7","nodeType":"VariableDeclaration","scope":1162,"src":"9655:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:7","nodeType":"VariableDeclaration","scope":1162,"src":"9670:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:7"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"9703:0:7"},"scope":1211,"src":"9605:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1209,"nodeType":"Block","src":"10408:387:7","statements":[{"assignments":[1173],"declarations":[{"constant":false,"id":1173,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:7","nodeType":"VariableDeclaration","scope":1209,"src":"10418:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1178,"initialValue":{"arguments":[{"id":1175,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10455:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"10462:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1174,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"10445:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"10484:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:7","memberName":"max","nodeType":"MemberAccess","src":"10503:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1208,"nodeType":"IfStatement","src":"10480:309:7","trueBody":{"id":1207,"nodeType":"Block","src":"10522:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"10540:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"10559:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"10536:130:7","trueBody":{"id":1195,"nodeType":"Block","src":"10566:100:7","statements":[{"errorCall":{"arguments":[{"id":1190,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"10618:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"10627:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"10645:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"10591:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1194,"nodeType":"RevertStatement","src":"10584:67:7"}]}},{"id":1206,"nodeType":"UncheckedBlock","src":"10679:100:7","statements":[{"expression":{"arguments":[{"id":1198,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10716:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"10723:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1200,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"10732:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"10751:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1197,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1102,1162],"referencedDeclaration":1162,"src":"10707:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"10707:57:7"}]}]}}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"10043:271:7","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:7","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"10352:5:7","nodeType":"VariableDeclaration","scope":1210,"src":"10344:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"spender","nameLocation":"10367:7:7","nodeType":"VariableDeclaration","scope":1210,"src":"10359:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"value","nameLocation":"10384:5:7","nodeType":"VariableDeclaration","scope":1210,"src":"10376:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:7"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"10408:0:7"},"scope":1211,"src":"10319:476:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1212,"src":"1106:9691:7","usedErrors":[571,576,581,590,595,600],"usedEvents":[1223,1232]}],"src":"105:10693:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1289]},"id":1290,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1213,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"133:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1289,"linearizedBaseContracts":[1289],"name":"IERC20","nameLocation":"215:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"228:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1223,"name":"Transfer","nameLocation":"397:8:8","nodeType":"EventDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:8","nodeType":"VariableDeclaration","scope":1223,"src":"406:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:8","nodeType":"VariableDeclaration","scope":1223,"src":"428:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:8","nodeType":"VariableDeclaration","scope":1223,"src":"448:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:8"},"src":"391:72:8"},{"anonymous":false,"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"469:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1232,"name":"Approval","nameLocation":"628:8:8","nodeType":"EventDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:8","nodeType":"VariableDeclaration","scope":1232,"src":"637:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:8","nodeType":"VariableDeclaration","scope":1232,"src":"660:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:8","nodeType":"VariableDeclaration","scope":1232,"src":"685:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:8"},"src":"622:78:8"},{"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"706:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1238,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:8","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[],"src":"796:2:8"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1238,"src":"822:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:8"},"scope":1289,"src":"776:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"837:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1246,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:8","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"account","nameLocation":"940:7:8","nodeType":"VariableDeclaration","scope":1246,"src":"932:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:8"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"972:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:8"},"scope":1289,"src":"913:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"987:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1256,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"to","nameLocation":"1231:2:8","nodeType":"VariableDeclaration","scope":1256,"src":"1223:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"value","nameLocation":"1243:5:8","nodeType":"VariableDeclaration","scope":1256,"src":"1235:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:8"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"1268:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1253,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:8"},"scope":1289,"src":"1205:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"1280:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1266,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:8","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"owner","nameLocation":"1576:5:8","nodeType":"VariableDeclaration","scope":1266,"src":"1568:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"spender","nameLocation":"1591:7:8","nodeType":"VariableDeclaration","scope":1266,"src":"1583:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:8"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"1623:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:8"},"scope":1289,"src":"1549:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"1638:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1276,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:8","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"spender","nameLocation":"2335:7:8","nodeType":"VariableDeclaration","scope":1276,"src":"2327:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"value","nameLocation":"2352:5:8","nodeType":"VariableDeclaration","scope":1276,"src":"2344:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:8"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"2377:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1273,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:8"},"scope":1289,"src":"2310:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"2389:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1288,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"from","nameLocation":"2721:4:8","nodeType":"VariableDeclaration","scope":1288,"src":"2713:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"to","nameLocation":"2735:2:8","nodeType":"VariableDeclaration","scope":1288,"src":"2727:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"2747:5:8","nodeType":"VariableDeclaration","scope":1288,"src":"2739:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"2772:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:8"},"scope":1289,"src":"2691:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1290,"src":"205:2575:8","usedErrors":[],"usedEvents":[1223,1232]}],"src":"106:2675:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2716],"ERC20":[1211],"ERC20Burnable":[1335]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1291,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1212,"src":"150:35:9","symbolAliases":[{"foreign":{"id":1292,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"158:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2717,"src":"186:51:9","symbolAliases":[{"foreign":{"id":1294,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"194:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1297,"name":"Context","nameLocations":["483:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"483:7:9"},"id":1298,"nodeType":"InheritanceSpecifier","src":"483:7:9"},{"baseName":{"id":1299,"name":"ERC20","nameLocations":["492:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"492:5:9"},"id":1300,"nodeType":"InheritanceSpecifier","src":"492:5:9"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"239:208:9","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335,1211,601,1361,1289,2716],"name":"ERC20Burnable","nameLocation":"466:13:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1312,"nodeType":"Block","src":"662:43:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"678:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"692:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"672:26:9"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"504:109:9","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:9","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"640:5:9","nodeType":"VariableDeclaration","scope":1313,"src":"632:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:9"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"662:0:9"},"scope":1335,"src":"618:87:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1333,"nodeType":"Block","src":"1086:93:9","statements":[{"expression":{"arguments":[{"id":1322,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"1112:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1323,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"1121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1135:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1321,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1096:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1327,"nodeType":"ExpressionStatement","src":"1096:45:9"},{"expression":{"arguments":[{"id":1329,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"1157:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1166:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1328,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"1151:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"1151:21:9"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"711:305:9","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:9","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"account","nameLocation":"1047:7:9","nodeType":"VariableDeclaration","scope":1334,"src":"1039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"value","nameLocation":"1064:5:9","nodeType":"VariableDeclaration","scope":1334,"src":"1056:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:9"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"1086:0:9"},"scope":1335,"src":"1021:158:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1336,"src":"448:733:9","usedErrors":[571,576,581,590,595,600],"usedEvents":[1223,1232]}],"src":"124:1058:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1289],"IERC20Metadata":[1361]},"id":1362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1362,"sourceUnit":1290,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1338,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1341,"name":"IERC20","nameLocations":["306:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1289,"src":"306:6:10"},"id":1342,"nodeType":"InheritanceSpecifier","src":"306:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"190:87:10","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1361,"linearizedBaseContracts":[1361,1289],"name":"IERC20Metadata","nameLocation":"288:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"319:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:10","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"391:2:10"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"417:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1345,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:10"},"scope":1361,"src":"378:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"438:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1354,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:10","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"514:2:10"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"540:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1351,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:10"},"scope":1361,"src":"499:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"561:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:10","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"648:2:10"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1360,"src":"674:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1357,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:10"},"scope":1361,"src":"631:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1362,"src":"278:405:10","usedErrors":[],"usedEvents":[1223,1232]}],"src":"125:559:10"},"id":10},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2716],"ERC165":[4194],"ERC721":[2318],"ERC721Utils":[2686],"IERC165":[4206],"IERC721":[2435],"IERC721Errors":[649],"IERC721Metadata":[2609],"Strings":[4170]},"id":2319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1363,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":2436,"src":"133:38:11","symbolAliases":[{"foreign":{"id":1364,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"141:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":2610,"src":"172:65:11","symbolAliases":[{"foreign":{"id":1366,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"180:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":2687,"src":"238:52:11","symbolAliases":[{"foreign":{"id":1368,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"246:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":2717,"src":"291:48:11","symbolAliases":[{"foreign":{"id":1370,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"299:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":4171,"src":"340:48:11","symbolAliases":[{"foreign":{"id":1372,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"348:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":4195,"src":"389:69:11","symbolAliases":[{"foreign":{"id":1374,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"397:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1375,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"406:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2319,"sourceUnit":697,"src":"459:66:11","symbolAliases":[{"foreign":{"id":1377,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"467:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1380,"name":"Context","nameLocations":["803:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"803:7:11"},"id":1381,"nodeType":"InheritanceSpecifier","src":"803:7:11"},{"baseName":{"id":1382,"name":"ERC165","nameLocations":["812:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"812:6:11"},"id":1383,"nodeType":"InheritanceSpecifier","src":"812:6:11"},{"baseName":{"id":1384,"name":"IERC721","nameLocations":["820:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2435,"src":"820:7:11"},"id":1385,"nodeType":"InheritanceSpecifier","src":"820:7:11"},{"baseName":{"id":1386,"name":"IERC721Metadata","nameLocations":["829:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2609,"src":"829:15:11"},"id":1387,"nodeType":"InheritanceSpecifier","src":"829:15:11"},{"baseName":{"id":1388,"name":"IERC721Errors","nameLocations":["846:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"846:13:11"},"id":1389,"nodeType":"InheritanceSpecifier","src":"846:13:11"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"527:247:11","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2318,"linearizedBaseContracts":[2318,649,2609,2435,4194,4206,2716],"name":"ERC721","nameLocation":"793:6:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1392,"libraryName":{"id":1390,"name":"Strings","nameLocations":["872:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"872:7:11"},"nodeType":"UsingForDirective","src":"866:26:11","typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1394,"mutability":"mutable","name":"_name","nameLocation":"931:5:11","nodeType":"VariableDeclaration","scope":2318,"src":"916:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1393,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1396,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:11","nodeType":"VariableDeclaration","scope":2318,"src":"963:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1395,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1400,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:11","nodeType":"VariableDeclaration","scope":2318,"src":"992:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1399,"keyName":"tokenId","keyNameLocation":"1008:7:11","keyType":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1404,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:11","nodeType":"VariableDeclaration","scope":2318,"src":"1050:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1403,"keyName":"owner","keyNameLocation":"1066:5:11","keyType":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1408,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:11","nodeType":"VariableDeclaration","scope":2318,"src":"1108:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1407,"keyName":"tokenId","keyNameLocation":"1124:7:11","keyType":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1414,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:11","nodeType":"VariableDeclaration","scope":2318,"src":"1174:86:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1413,"keyName":"owner","keyNameLocation":"1190:5:11","keyType":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1412,"keyName":"operator","keyNameLocation":"1215:8:11","keyType":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1411,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1430,"nodeType":"Block","src":"1436:57:11","statements":[{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1422,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1446:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1423,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1454:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1425,"nodeType":"ExpressionStatement","src":"1446:13:11"},{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1469:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1427,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1479:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1429,"nodeType":"ExpressionStatement","src":"1469:17:11"}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"1267:108:11","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1431,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"name_","nameLocation":"1406:5:11","nodeType":"VariableDeclaration","scope":1431,"src":"1392:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1416,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:11","nodeType":"VariableDeclaration","scope":1431,"src":"1413:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1418,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:11"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"1436:0:11"},"scope":2318,"src":"1380:113:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4193,4205],"body":{"id":1461,"nodeType":"Block","src":"1635:192:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1664:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1444,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"1684:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2435_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2435_$","typeString":"type(contract IERC721)"}],"id":1443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2435","typeString":"type(contract IERC721)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1720:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1450,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1740:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2609_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2609_$","typeString":"type(contract IERC721Metadata)"}],"id":1449,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2609","typeString":"type(contract IERC721Metadata)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1457,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1808:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1455,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2318_$","typeString":"type(contract super ERC721)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"1784:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1441,"id":1460,"nodeType":"Return","src":"1645:175:11"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"1499:23:11","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1462,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:11","nodeType":"FunctionDefinition","overrides":{"id":1438,"nodeType":"OverrideSpecifier","overrides":[{"id":1436,"name":"ERC165","nameLocations":["1603:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"1603:6:11"},{"id":1437,"name":"IERC165","nameLocations":["1611:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4206,"src":"1611:7:11"}],"src":"1594:25:11"},"parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:11","nodeType":"VariableDeclaration","scope":1462,"src":"1554:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1433,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:11"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1462,"src":"1629:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:11"},"scope":2318,"src":"1527:300:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2360],"body":{"id":1489,"nodeType":"Block","src":"1933:136:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1947:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:11","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"IfStatement","src":"1943:87:11","trueBody":{"id":1483,"nodeType":"Block","src":"1968:62:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:11","typeDescriptions":{}}},"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1476,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1989:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1482,"nodeType":"RevertStatement","src":"1982:37:11"}]}},{"expression":{"baseExpression":{"id":1485,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"2046:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1487,"indexExpression":{"id":1486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2056:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1469,"id":1488,"nodeType":"Return","src":"2039:23:11"}]},"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"1833:23:11","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:11","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"owner","nameLocation":"1888:5:11","nodeType":"VariableDeclaration","scope":1490,"src":"1880:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:11"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"1924:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:11"},"scope":2318,"src":"1861:208:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2368],"body":{"id":1502,"nodeType":"Block","src":"2175:46:11","statements":[{"expression":{"arguments":[{"id":1499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"2206:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1498,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2192:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1497,"id":1501,"nodeType":"Return","src":"2185:29:11"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"2075:23:11","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:11","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:11","nodeType":"VariableDeclaration","scope":1503,"src":"2120:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:11"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"2166:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:11"},"scope":2318,"src":"2103:118:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2594],"body":{"id":1511,"nodeType":"Block","src":"2323:29:11","statements":[{"expression":{"id":1509,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2340:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1508,"id":1510,"nodeType":"Return","src":"2333:12:11"}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"2227:31:11","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:11","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"2276:2:11"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"2308:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:11"},"scope":2318,"src":"2263:89:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2600],"body":{"id":1520,"nodeType":"Block","src":"2456:31:11","statements":[{"expression":{"id":1518,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2473:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1517,"id":1519,"nodeType":"Return","src":"2466:14:11"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"2358:31:11","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:11","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"2409:2:11"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"2441:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1515,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:11"},"scope":2318,"src":"2394:93:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2608],"body":{"id":1556,"nodeType":"Block","src":"2608:176:11","statements":[{"expression":{"arguments":[{"id":1530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2632:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1529,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2618:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1532,"nodeType":"ExpressionStatement","src":"2618:22:11"},{"assignments":[1534],"declarations":[{"constant":false,"id":1534,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:11","nodeType":"VariableDeclaration","scope":1556,"src":"2651:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1533,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1537,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1535,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"2675:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1540,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2708:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1538,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:11","typeDescriptions":{}}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:11","memberName":"length","nodeType":"MemberAccess","src":"2702:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:11","trueExpression":{"arguments":[{"id":1548,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2744:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2753:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"2753:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1545,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:11","typeDescriptions":{}}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1528,"id":1555,"nodeType":"Return","src":"2695:82:11"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"2493:31:11","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:11","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:11","nodeType":"VariableDeclaration","scope":1557,"src":"2547:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:11"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"2593:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1526,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:11"},"scope":2318,"src":"2529:255:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1565,"nodeType":"Block","src":"3092:26:11","statements":[{"expression":{"hexValue":"","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1562,"id":1564,"nodeType":"Return","src":"3102:9:11"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"2790:231:11","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:11","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"3043:2:11"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"3077:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1560,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:11"},"scope":2318,"src":"3026:92:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2408],"body":{"id":1581,"nodeType":"Block","src":"3213:52:11","statements":[{"expression":{"arguments":[{"id":1575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3232:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1577,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3245:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1574,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2185,2251],"referencedDeclaration":2185,"src":"3223:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"3223:35:11"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"3124:23:11","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:11","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"to","nameLocation":"3177:2:11","nodeType":"VariableDeclaration","scope":1582,"src":"3169:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:11","nodeType":"VariableDeclaration","scope":1582,"src":"3181:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:11"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"3213:0:11"},"scope":2318,"src":"3152:113:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2424],"body":{"id":1598,"nodeType":"Block","src":"3375:78:11","statements":[{"expression":{"arguments":[{"id":1591,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3399:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"3385:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1593,"nodeType":"ExpressionStatement","src":"3385:22:11"},{"expression":{"arguments":[{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3438:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1594,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3425:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1589,"id":1597,"nodeType":"Return","src":"3418:28:11"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"3271:23:11","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:11","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:11","nodeType":"VariableDeclaration","scope":1599,"src":"3320:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:11"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"3366:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:11"},"scope":2318,"src":"3299:154:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2416],"body":{"id":1614,"nodeType":"Block","src":"3562:69:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1608,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3591:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"3605:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"3615:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1607,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3572:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"3572:52:11"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"3459:23:11","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:11","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"operator","nameLocation":"3522:8:11","nodeType":"VariableDeclaration","scope":1615,"src":"3514:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"approved","nameLocation":"3537:8:11","nodeType":"VariableDeclaration","scope":1615,"src":"3532:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1603,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:11"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"3562:0:11"},"scope":2318,"src":"3487:144:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2434],"body":{"id":1631,"nodeType":"Block","src":"3759:59:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1625,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"3776:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1627,"indexExpression":{"id":1626,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"3795:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1629,"indexExpression":{"id":1628,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"3802:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1624,"id":1630,"nodeType":"Return","src":"3769:42:11"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"3637:23:11","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:11","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"owner","nameLocation":"3699:5:11","nodeType":"VariableDeclaration","scope":1632,"src":"3691:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"operator","nameLocation":"3714:8:11","nodeType":"VariableDeclaration","scope":1632,"src":"3706:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:11"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1632,"src":"3753:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:11"},"scope":2318,"src":"3665:153:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2400],"body":{"id":1677,"nodeType":"Block","src":"3932:498:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"3946:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:11","typeDescriptions":{}}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1656,"nodeType":"IfStatement","src":"3942:87:11","trueBody":{"id":1655,"nodeType":"Block","src":"3964:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:11","typeDescriptions":{}}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1648,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3985:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1654,"nodeType":"RevertStatement","src":"3978:40:11"}]}},{"assignments":[1658],"declarations":[{"constant":false,"id":1658,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:11","nodeType":"VariableDeclaration","scope":1677,"src":"4247:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1665,"initialValue":{"arguments":[{"id":1660,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4279:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"4292:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1659,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4271:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"4319:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4336:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1676,"nodeType":"IfStatement","src":"4315:109:11","trueBody":{"id":1675,"nodeType":"Block","src":"4342:82:11","statements":[{"errorCall":{"arguments":[{"id":1670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4384:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1672,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"4399:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1669,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4363:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1674,"nodeType":"RevertStatement","src":"4356:57:11"}]}}]},"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"3824:23:11","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:11","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"from","nameLocation":"3882:4:11","nodeType":"VariableDeclaration","scope":1678,"src":"3874:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"to","nameLocation":"3896:2:11","nodeType":"VariableDeclaration","scope":1678,"src":"3888:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:11","nodeType":"VariableDeclaration","scope":1678,"src":"3900:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:11"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"3932:0:11"},"scope":2318,"src":"3852:578:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2390],"body":{"id":1695,"nodeType":"Block","src":"4540:56:11","statements":[{"expression":{"arguments":[{"id":1689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"4567:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"4573:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"4577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1688,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1696,1726],"referencedDeclaration":1726,"src":"4550:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"ExpressionStatement","src":"4550:39:11"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"4436:23:11","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:11","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"from","nameLocation":"4498:4:11","nodeType":"VariableDeclaration","scope":1696,"src":"4490:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"to","nameLocation":"4512:2:11","nodeType":"VariableDeclaration","scope":1696,"src":"4504:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:11","nodeType":"VariableDeclaration","scope":1696,"src":"4516:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:11"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"4540:0:11"},"scope":2318,"src":"4464:132:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2380],"body":{"id":1725,"nodeType":"Block","src":"4733:130:11","statements":[{"expression":{"arguments":[{"id":1709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"4756:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"4762:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4766:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1708,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4743:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"4743:31:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1717,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"4818:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1719,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"4832:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"4838:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4851:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1714,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4784:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2686_$","typeString":"type(library ERC721Utils)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"4784:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"4784:72:11"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"4602:23:11","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:11","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"from","nameLocation":"4664:4:11","nodeType":"VariableDeclaration","scope":1726,"src":"4656:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"to","nameLocation":"4678:2:11","nodeType":"VariableDeclaration","scope":1726,"src":"4670:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:11","nodeType":"VariableDeclaration","scope":1726,"src":"4682:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"data","nameLocation":"4712:4:11","nodeType":"VariableDeclaration","scope":1726,"src":"4699:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1704,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:11"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[],"src":"4733:0:11"},"scope":2318,"src":"4630:233:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1738,"nodeType":"Block","src":"5453:40:11","statements":[{"expression":{"baseExpression":{"id":1734,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5470:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1736,"indexExpression":{"id":1735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5478:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1733,"id":1737,"nodeType":"Return","src":"5463:23:11"}]},"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"4869:504:11","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:11","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:11","nodeType":"VariableDeclaration","scope":1739,"src":"5396:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:11"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"5444:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:11"},"scope":2318,"src":"5378:115:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1751,"nodeType":"Block","src":"5688:48:11","statements":[{"expression":{"baseExpression":{"id":1747,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"5705:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1749,"indexExpression":{"id":1748,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5721:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1746,"id":1750,"nodeType":"Return","src":"5698:31:11"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"5499:105:11","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1752,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:11","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:11","nodeType":"VariableDeclaration","scope":1752,"src":"5631:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:11"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"5679:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:11"},"scope":2318,"src":"5609:127:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"6156:163:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"6185:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:11","typeDescriptions":{}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1770,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6223:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1771,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"6232:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6260:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"6267:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1773,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"6243:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"6292:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1778,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6279:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1781,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"6304:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1763,"id":1786,"nodeType":"Return","src":"6166:146:11"}]},"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"5742:300:11","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:11","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"owner","nameLocation":"6078:5:11","nodeType":"VariableDeclaration","scope":1788,"src":"6070:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"spender","nameLocation":"6093:7:11","nodeType":"VariableDeclaration","scope":1788,"src":"6085:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:11","nodeType":"VariableDeclaration","scope":1788,"src":"6102:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:11"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"6150:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1761,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:11"},"scope":2318,"src":"6047:272:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"6848:271:11","statements":[{"condition":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:11","subExpression":{"arguments":[{"id":1799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"6877:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"6884:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"6893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1798,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6863:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"nodeType":"IfStatement","src":"6858:255:11","trueBody":{"id":1822,"nodeType":"Block","src":"6903:210:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"6921:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:11","typeDescriptions":{}}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1820,"nodeType":"Block","src":"7019:84:11","statements":[{"errorCall":{"arguments":[{"id":1816,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"7071:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"7080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1815,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7044:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1819,"nodeType":"RevertStatement","src":"7037:51:11"}]},"id":1821,"nodeType":"IfStatement","src":"6917:186:11","trueBody":{"id":1814,"nodeType":"Block","src":"6942:71:11","statements":[{"errorCall":{"arguments":[{"id":1811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"6990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1810,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6967:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1813,"nodeType":"RevertStatement","src":"6960:38:11"}]}}]}}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"6325:421:11","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:11","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"owner","nameLocation":"6785:5:11","nodeType":"VariableDeclaration","scope":1825,"src":"6777:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"spender","nameLocation":"6800:7:11","nodeType":"VariableDeclaration","scope":1825,"src":"6792:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:11","nodeType":"VariableDeclaration","scope":1825,"src":"6809:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:11"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[],"src":"6848:0:11"},"scope":2318,"src":"6751:368:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1840,"nodeType":"Block","src":"7836:78:11","statements":[{"id":1839,"nodeType":"UncheckedBlock","src":"7846:62:11","statements":[{"expression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1833,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"7870:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1835,"indexExpression":{"id":1834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"7880:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"7892:5:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"7870:27:11"}]}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"7125:631:11","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:11","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"account","nameLocation":"7795:7:11","nodeType":"VariableDeclaration","scope":1841,"src":"7787:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"value","nameLocation":"7812:5:11","nodeType":"VariableDeclaration","scope":1841,"src":"7804:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1829,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:11"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"7836:0:11"},"scope":2318,"src":"7761:153:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"8602:700:11","statements":[{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"from","nameLocation":"8620:4:11","nodeType":"VariableDeclaration","scope":1930,"src":"8612:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1858,"initialValue":{"arguments":[{"id":1856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"8636:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1855,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"8627:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"8704:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:11","typeDescriptions":{}}},"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"8700:86:11","trueBody":{"id":1871,"nodeType":"Block","src":"8724:62:11","statements":[{"expression":{"arguments":[{"id":1866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"8755:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"8761:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"8767:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1865,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"8738:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"8738:37:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"8830:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:11","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1900,"nodeType":"IfStatement","src":"8826:256:11","trueBody":{"id":1899,"nodeType":"Block","src":"8850:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:11","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"8967:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:11","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1879,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2185,2251],"referencedDeclaration":2251,"src":"8946:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"8946:48:11"},{"id":1898,"nodeType":"UncheckedBlock","src":"9009:63:11","statements":[{"expression":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1892,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"9037:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1894,"indexExpression":{"id":1893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"9047:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1897,"nodeType":"ExpressionStatement","src":"9037:20:11"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"9096:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:11","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1915,"nodeType":"IfStatement","src":"9092:107:11","trueBody":{"id":1914,"nodeType":"Block","src":"9114:85:11","statements":[{"id":1913,"nodeType":"UncheckedBlock","src":"9128:61:11","statements":[{"expression":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1907,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"9156:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1909,"indexExpression":{"id":1908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"9166:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1912,"nodeType":"ExpressionStatement","src":"9156:18:11"}]}]}},{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1916,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"9209:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1918,"indexExpression":{"id":1917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"9217:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"9228:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1921,"nodeType":"ExpressionStatement","src":"9209:21:11"},{"eventCall":{"arguments":[{"id":1923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"9255:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"9261:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"9265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"9246:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"EmitStatement","src":"9241:32:11"},{"expression":{"id":1928,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"9291:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1852,"id":1929,"nodeType":"Return","src":"9284:11:11"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"7920:582:11","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:11","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"to","nameLocation":"8532:2:11","nodeType":"VariableDeclaration","scope":1931,"src":"8524:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:11","nodeType":"VariableDeclaration","scope":1931,"src":"8536:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"auth","nameLocation":"8561:4:11","nodeType":"VariableDeclaration","scope":1931,"src":"8553:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:11"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"8593:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:11"},"scope":2318,"src":"8507:795:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"9677:274:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"9691:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:11","typeDescriptions":{}}},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1953,"nodeType":"IfStatement","src":"9687:87:11","trueBody":{"id":1952,"nodeType":"Block","src":"9709:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:11","typeDescriptions":{}}},"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1945,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9730:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1951,"nodeType":"RevertStatement","src":"9723:40:11"}]}},{"assignments":[1955],"declarations":[{"constant":false,"id":1955,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:11","nodeType":"VariableDeclaration","scope":1980,"src":"9783:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1964,"initialValue":{"arguments":[{"id":1957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"9815:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1958,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"9819:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:11","typeDescriptions":{}}},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"9807:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9853:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:11","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1979,"nodeType":"IfStatement","src":"9849:96:11","trueBody":{"id":1978,"nodeType":"Block","src":"9882:63:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:11","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1971,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9903:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1977,"nodeType":"RevertStatement","src":"9896:38:11"}]}}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"9308:311:11","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:11","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"to","nameLocation":"9647:2:11","nodeType":"VariableDeclaration","scope":1981,"src":"9639:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:11","nodeType":"VariableDeclaration","scope":1981,"src":"9651:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"9677:0:11"},"scope":2318,"src":"9624:327:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1995,"nodeType":"Block","src":"10359:43:11","statements":[{"expression":{"arguments":[{"id":1990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"10379:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"10383:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1989,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1996,2026],"referencedDeclaration":2026,"src":"10369:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"10369:26:11"}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"9957:340:11","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:11","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"to","nameLocation":"10329:2:11","nodeType":"VariableDeclaration","scope":1996,"src":"10321:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:11","nodeType":"VariableDeclaration","scope":1996,"src":"10333:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:11"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"10359:0:11"},"scope":2318,"src":"10302:100:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"10707:123:11","statements":[{"expression":{"arguments":[{"id":2007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"10723:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"10727:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2006,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"10717:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"ExpressionStatement","src":"10717:18:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"10779:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:11","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"10805:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"10809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2022,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"10818:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2011,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"10745:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2686_$","typeString":"type(library ERC721Utils)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"10745:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2024,"nodeType":"ExpressionStatement","src":"10745:78:11"}]},"documentation":{"id":1997,"nodeType":"StructuredDocumentation","src":"10408:210:11","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:11","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"to","nameLocation":"10650:2:11","nodeType":"VariableDeclaration","scope":2026,"src":"10642:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:11","nodeType":"VariableDeclaration","scope":2026,"src":"10654:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"data","nameLocation":"10684:4:11","nodeType":"VariableDeclaration","scope":2026,"src":"10671:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:11"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[],"src":"10707:0:11"},"scope":2318,"src":"10623:207:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2058,"nodeType":"Block","src":"11197:186:11","statements":[{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:11","nodeType":"VariableDeclaration","scope":2058,"src":"11207:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2045,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:11","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"11251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:11","typeDescriptions":{}}},"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2034,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"11231:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"11285:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:11","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2057,"nodeType":"IfStatement","src":"11281:96:11","trueBody":{"id":2056,"nodeType":"Block","src":"11314:63:11","statements":[{"errorCall":{"arguments":[{"id":2053,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"11358:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"11335:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2055,"nodeType":"RevertStatement","src":"11328:38:11"}]}}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"10836:315:11","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:11","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:11","nodeType":"VariableDeclaration","scope":2059,"src":"11171:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:11"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"11197:0:11"},"scope":2318,"src":"11156:227:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2118,"nodeType":"Block","src":"11778:389:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"11792:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:11","typeDescriptions":{}}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2083,"nodeType":"IfStatement","src":"11788:87:11","trueBody":{"id":2082,"nodeType":"Block","src":"11810:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:11","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2075,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"11831:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2081,"nodeType":"RevertStatement","src":"11824:40:11"}]}},{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:11","nodeType":"VariableDeclaration","scope":2118,"src":"11884:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2094,"initialValue":{"arguments":[{"id":2087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"11916:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"11920:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:11","typeDescriptions":{}}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2086,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"11908:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"11954:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:11","typeDescriptions":{}}},"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12056:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2107,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"12073:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2116,"nodeType":"IfStatement","src":"12052:109:11","trueBody":{"id":2115,"nodeType":"Block","src":"12079:82:11","statements":[{"errorCall":{"arguments":[{"id":2110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"12121:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2111,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"12127:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2112,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12136:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2109,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12100:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2114,"nodeType":"RevertStatement","src":"12093:57:11"}]}},"id":2117,"nodeType":"IfStatement","src":"11950:211:11","trueBody":{"id":2105,"nodeType":"Block","src":"11983:63:11","statements":[{"errorCall":{"arguments":[{"id":2102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"12027:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2101,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"12004:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2104,"nodeType":"RevertStatement","src":"11997:38:11"}]}}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"11389:313:11","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:11","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"from","nameLocation":"11734:4:11","nodeType":"VariableDeclaration","scope":2119,"src":"11726:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"to","nameLocation":"11748:2:11","nodeType":"VariableDeclaration","scope":2119,"src":"11740:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:11","nodeType":"VariableDeclaration","scope":2119,"src":"11752:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:11"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[],"src":"11778:0:11"},"scope":2318,"src":"11707:460:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"13176:53:11","statements":[{"expression":{"arguments":[{"id":2130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"13200:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"13206:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"13210:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2129,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2137,2167],"referencedDeclaration":2167,"src":"13186:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"ExpressionStatement","src":"13186:36:11"}]},"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"12173:923:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:11","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"from","nameLocation":"13132:4:11","nodeType":"VariableDeclaration","scope":2137,"src":"13124:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"to","nameLocation":"13146:2:11","nodeType":"VariableDeclaration","scope":2137,"src":"13138:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:11","nodeType":"VariableDeclaration","scope":2137,"src":"13150:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:11"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"13176:0:11"},"scope":2318,"src":"13101:128:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2166,"nodeType":"Block","src":"13568:127:11","statements":[{"expression":{"arguments":[{"id":2150,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"13588:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2151,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"13594:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"13598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"13578:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"13578:28:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2158,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"13650:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2160,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"13664:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"13670:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2162,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"13674:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2163,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"13683:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2155,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"13616:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2686_$","typeString":"type(library ERC721Utils)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"13616:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2165,"nodeType":"ExpressionStatement","src":"13616:72:11"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"13235:226:11","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:11","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"from","nameLocation":"13497:4:11","nodeType":"VariableDeclaration","scope":2167,"src":"13489:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"to","nameLocation":"13511:2:11","nodeType":"VariableDeclaration","scope":2167,"src":"13503:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:11","nodeType":"VariableDeclaration","scope":2167,"src":"13515:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"data","nameLocation":"13545:4:11","nodeType":"VariableDeclaration","scope":2167,"src":"13532:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2145,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:11"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[],"src":"13568:0:11"},"scope":2318,"src":"13466:229:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"14208:50:11","statements":[{"expression":{"arguments":[{"id":2178,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"14227:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2179,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"14231:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2180,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"14240:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2177,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2185,2251],"referencedDeclaration":2251,"src":"14218:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"ExpressionStatement","src":"14218:33:11"}]},"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"13701:432:11","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:11","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"to","nameLocation":"14164:2:11","nodeType":"VariableDeclaration","scope":2185,"src":"14156:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:11","nodeType":"VariableDeclaration","scope":2185,"src":"14168:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"auth","nameLocation":"14193:4:11","nodeType":"VariableDeclaration","scope":2185,"src":"14185:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:11"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[],"src":"14208:0:11"},"scope":2318,"src":"14138:120:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"14534:568:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"14600:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"14613:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:11","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"nodeType":"IfStatement","src":"14596:460:11","trueBody":{"id":2242,"nodeType":"Block","src":"14633:423:11","statements":[{"assignments":[2206],"declarations":[{"constant":false,"id":2206,"mutability":"mutable","name":"owner","nameLocation":"14655:5:11","nodeType":"VariableDeclaration","scope":2242,"src":"14647:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[{"id":2208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"14677:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2207,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"14663:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2211,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"14813:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:11","typeDescriptions":{}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"14835:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2218,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"14844:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:11","subExpression":{"arguments":[{"id":2222,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"14870:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2223,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"14877:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2221,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"14853:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"14809:142:11","trueBody":{"id":2231,"nodeType":"Block","src":"14884:67:11","statements":[{"errorCall":{"arguments":[{"id":2228,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"14931:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2227,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14909:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2230,"nodeType":"RevertStatement","src":"14902:34:11"}]}},{"condition":{"id":2233,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"14969:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2241,"nodeType":"IfStatement","src":"14965:81:11","trueBody":{"id":2240,"nodeType":"Block","src":"14980:66:11","statements":[{"eventCall":{"arguments":[{"id":2235,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"15012:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"15019:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"15023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2234,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"15003:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2239,"nodeType":"EmitStatement","src":"14998:33:11"}]}}]}},{"expression":{"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2244,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"15066:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2246,"indexExpression":{"id":2245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"15082:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"15093:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2249,"nodeType":"ExpressionStatement","src":"15066:29:11"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"14264:171:11","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:11","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"to","nameLocation":"14466:2:11","nodeType":"VariableDeclaration","scope":2251,"src":"14458:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:11","nodeType":"VariableDeclaration","scope":2251,"src":"14470:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"auth","nameLocation":"14495:4:11","nodeType":"VariableDeclaration","scope":2251,"src":"14487:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:11","nodeType":"VariableDeclaration","scope":2251,"src":"14501:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2193,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:11"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[],"src":"14534:0:11"},"scope":2318,"src":"14440:662:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"15404:219:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"15418:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:11","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2272,"nodeType":"IfStatement","src":"15414:91:11","trueBody":{"id":2271,"nodeType":"Block","src":"15442:63:11","statements":[{"errorCall":{"arguments":[{"id":2268,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"15485:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2267,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"15463:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2270,"nodeType":"RevertStatement","src":"15456:38:11"}]}},{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2273,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"15514:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2276,"indexExpression":{"id":2274,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"15533:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2277,"indexExpression":{"id":2275,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"15540:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2278,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"15552:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2280,"nodeType":"ExpressionStatement","src":"15514:46:11"},{"eventCall":{"arguments":[{"id":2282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"15590:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"15597:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2284,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"15607:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2281,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15575:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"EmitStatement","src":"15570:46:11"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"15108:198:11","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:11","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"owner","nameLocation":"15347:5:11","nodeType":"VariableDeclaration","scope":2288,"src":"15339:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"operator","nameLocation":"15362:8:11","nodeType":"VariableDeclaration","scope":2288,"src":"15354:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"approved","nameLocation":"15377:8:11","nodeType":"VariableDeclaration","scope":2288,"src":"15372:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:11"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[],"src":"15404:0:11"},"scope":2318,"src":"15311:312:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"15930:169:11","statements":[{"assignments":[2297],"declarations":[{"constant":false,"id":2297,"mutability":"mutable","name":"owner","nameLocation":"15948:5:11","nodeType":"VariableDeclaration","scope":2316,"src":"15940:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2301,"initialValue":{"arguments":[{"id":2299,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"15965:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2298,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"15956:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"15987:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:11","typeDescriptions":{}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2313,"nodeType":"IfStatement","src":"15983:88:11","trueBody":{"id":2312,"nodeType":"Block","src":"16008:63:11","statements":[{"errorCall":{"arguments":[{"id":2309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"16052:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"16029:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2311,"nodeType":"RevertStatement","src":"16022:38:11"}]}},{"expression":{"id":2314,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"16087:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2295,"id":2315,"nodeType":"Return","src":"16080:12:11"}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"15629:224:11","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:11","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:11","nodeType":"VariableDeclaration","scope":2317,"src":"15881:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:11"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"15921:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:11"},"scope":2318,"src":"15858:241:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2319,"src":"775:15326:11","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[2334,2343,2352]}],"src":"107:15995:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4206],"IERC721":[2435]},"id":2436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2320,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2436,"sourceUnit":4207,"src":"134:62:12","symbolAliases":[{"foreign":{"id":2321,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"142:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2324,"name":"IERC165","nameLocations":["288:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4206,"src":"288:7:12"},"id":2325,"nodeType":"InheritanceSpecifier","src":"288:7:12"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"198:68:12","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2435,"linearizedBaseContracts":[2435,4206],"name":"IERC721","nameLocation":"277:7:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"302:88:12","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2334,"name":"Transfer","nameLocation":"401:8:12","nodeType":"EventDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:12","nodeType":"VariableDeclaration","scope":2334,"src":"410:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2330,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:12","nodeType":"VariableDeclaration","scope":2334,"src":"432:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2332,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:12","nodeType":"VariableDeclaration","scope":2334,"src":"452:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:12"},"src":"395:82:12"},{"anonymous":false,"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"483:94:12","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2343,"name":"Approval","nameLocation":"588:8:12","nodeType":"EventDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:12","nodeType":"VariableDeclaration","scope":2343,"src":"597:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:12","nodeType":"VariableDeclaration","scope":2343,"src":"620:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2341,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:12","nodeType":"VariableDeclaration","scope":2343,"src":"646:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:12"},"src":"582:89:12"},{"anonymous":false,"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"677:117:12","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2352,"name":"ApprovalForAll","nameLocation":"805:14:12","nodeType":"EventDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:12","nodeType":"VariableDeclaration","scope":2352,"src":"820:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2348,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:12","nodeType":"VariableDeclaration","scope":2352,"src":"843:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2350,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:12","nodeType":"VariableDeclaration","scope":2352,"src":"869:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2349,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:12"},"src":"799:85:12"},{"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"890:76:12","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2360,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:12","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"owner","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":2360,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"balance","nameLocation":"1036:7:12","nodeType":"VariableDeclaration","scope":2360,"src":"1028:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:12"},"scope":2435,"src":"971:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"1051:131:12","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2368,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:12","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:12","nodeType":"VariableDeclaration","scope":2368,"src":"1204:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:12"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"owner","nameLocation":"1252:5:12","nodeType":"VariableDeclaration","scope":2368,"src":"1244:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:12"},"scope":2435,"src":"1187:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"1265:565:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2380,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:12","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"from","nameLocation":"1869:4:12","nodeType":"VariableDeclaration","scope":2380,"src":"1861:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"to","nameLocation":"1883:2:12","nodeType":"VariableDeclaration","scope":2380,"src":"1875:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:12","nodeType":"VariableDeclaration","scope":2380,"src":"1887:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"data","nameLocation":"1919:4:12","nodeType":"VariableDeclaration","scope":2380,"src":"1904:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2376,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:12"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"1933:0:12"},"scope":2435,"src":"1835:99:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"1940:706:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2390,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:12","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"from","nameLocation":"2685:4:12","nodeType":"VariableDeclaration","scope":2390,"src":"2677:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"to","nameLocation":"2699:2:12","nodeType":"VariableDeclaration","scope":2390,"src":"2691:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:12","nodeType":"VariableDeclaration","scope":2390,"src":"2703:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:12"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"2728:0:12"},"scope":2435,"src":"2651:78:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"2735:733:12","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2400,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:12","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"from","nameLocation":"3503:4:12","nodeType":"VariableDeclaration","scope":2400,"src":"3495:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"to","nameLocation":"3517:2:12","nodeType":"VariableDeclaration","scope":2400,"src":"3509:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:12","nodeType":"VariableDeclaration","scope":2400,"src":"3521:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:12"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"3546:0:12"},"scope":2435,"src":"3473:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"3553:452:12","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2408,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:12","nodeType":"FunctionDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"to","nameLocation":"4035:2:12","nodeType":"VariableDeclaration","scope":2408,"src":"4027:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:12","nodeType":"VariableDeclaration","scope":2408,"src":"4039:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:12"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[],"src":"4064:0:12"},"scope":2435,"src":"4010:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"4071:315:12","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2416,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:12","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"operator","nameLocation":"4426:8:12","nodeType":"VariableDeclaration","scope":2416,"src":"4418:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"approved","nameLocation":"4441:8:12","nodeType":"VariableDeclaration","scope":2416,"src":"4436:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2412,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:12"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"4459:0:12"},"scope":2435,"src":"4391:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"4466:139:12","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2424,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:12","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:12","nodeType":"VariableDeclaration","scope":2424,"src":"4631:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:12"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"operator","nameLocation":"4679:8:12","nodeType":"VariableDeclaration","scope":2424,"src":"4671:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:12"},"scope":2435,"src":"4610:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"4695:138:12","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2434,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:12","nodeType":"FunctionDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"owner","nameLocation":"4872:5:12","nodeType":"VariableDeclaration","scope":2434,"src":"4864:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"operator","nameLocation":"4887:8:12","nodeType":"VariableDeclaration","scope":2434,"src":"4879:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:12"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"4920:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2431,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:12"},"scope":2435,"src":"4838:88:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2436,"src":"267:4661:12","usedErrors":[],"usedEvents":[2334,2343,2352]}],"src":"108:4821:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2453]},"id":2454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2437,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"142:154:13","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2453,"linearizedBaseContracts":[2453],"name":"IERC721Receiver","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"329:500:13","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2452,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:13","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"operator","nameLocation":"877:8:13","nodeType":"VariableDeclaration","scope":2452,"src":"869:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"from","nameLocation":"903:4:13","nodeType":"VariableDeclaration","scope":2452,"src":"895:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:13","nodeType":"VariableDeclaration","scope":2452,"src":"917:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"data","nameLocation":"957:4:13","nodeType":"VariableDeclaration","scope":2452,"src":"942:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2446,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:13"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"986:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2449,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:13"},"scope":2453,"src":"834:160:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2454,"src":"297:699:13","usedErrors":[],"usedEvents":[]}],"src":"116:881:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[2318],"ERC721URIStorage":[2581],"IERC165":[4206],"IERC4906":[555],"IERC721Metadata":[2609],"Strings":[4170]},"id":2582,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2455,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2582,"sourceUnit":2319,"src":"154:37:14","symbolAliases":[{"foreign":{"id":2456,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"162:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":2459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2582,"sourceUnit":2610,"src":"192:54:14","symbolAliases":[{"foreign":{"id":2458,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"200:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":2461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2582,"sourceUnit":4171,"src":"247:51:14","symbolAliases":[{"foreign":{"id":2460,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"255:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2582,"sourceUnit":556,"src":"299:58:14","symbolAliases":[{"foreign":{"id":2462,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"307:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":2465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2582,"sourceUnit":532,"src":"358:56:14","symbolAliases":[{"foreign":{"id":2464,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"366:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2467,"name":"IERC4906","nameLocations":["525:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"525:8:14"},"id":2468,"nodeType":"InheritanceSpecifier","src":"525:8:14"},{"baseName":{"id":2469,"name":"ERC721","nameLocations":["535:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"535:6:14"},"id":2470,"nodeType":"InheritanceSpecifier","src":"535:6:14"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"416:70:14","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":2581,"linearizedBaseContracts":[2581,2318,649,2609,555,2435,4194,4206,2716],"name":"ERC721URIStorage","nameLocation":"505:16:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2473,"libraryName":{"id":2471,"name":"Strings","nameLocations":["554:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"554:7:14"},"nodeType":"UsingForDirective","src":"548:26:14","typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2479,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:14","nodeType":"VariableDeclaration","scope":2581,"src":"762:65:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2474,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:14","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2475,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:14","typeDescriptions":{}}},"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2483,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:14","nodeType":"VariableDeclaration","scope":2581,"src":"873:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2482,"keyName":"tokenId","keyNameLocation":"889:7:14","keyType":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2481,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1462,4205],"body":{"id":2503,"nodeType":"Block","src":"1069:99:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"1086:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2495,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"1101:20:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2499,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"1149:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2497,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2581_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:14","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"1125:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2493,"id":2502,"nodeType":"Return","src":"1079:82:14"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"933:23:14","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2504,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:14","nodeType":"FunctionDefinition","overrides":{"id":2490,"nodeType":"OverrideSpecifier","overrides":[{"id":2488,"name":"ERC721","nameLocations":["1037:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"1037:6:14"},{"id":2489,"name":"IERC165","nameLocations":["1045:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4206,"src":"1045:7:14"}],"src":"1028:25:14"},"parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:14","nodeType":"VariableDeclaration","scope":2504,"src":"988:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2485,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:14"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"1063:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2491,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:14"},"scope":2581,"src":"961:207:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1557],"body":{"id":2560,"nodeType":"Block","src":"1298:505:14","statements":[{"expression":{"arguments":[{"id":2514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"1322:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1308:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2516,"nodeType":"ExpressionStatement","src":"1308:22:14"},{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:14","nodeType":"VariableDeclaration","scope":2560,"src":"1341:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2522,"initialValue":{"baseExpression":{"id":2519,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1367:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2521,"indexExpression":{"id":2520,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"1378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:14"},{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"base","nameLocation":"1410:4:14","nodeType":"VariableDeclaration","scope":2560,"src":"1396:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2523,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2527,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2525,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1417:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2530,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1506:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:14","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:14","memberName":"length","nodeType":"MemberAccess","src":"1500:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2538,"nodeType":"IfStatement","src":"1496:70:14","trueBody":{"id":2537,"nodeType":"Block","src":"1525:41:14","statements":[{"expression":{"id":2535,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"1546:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2512,"id":2536,"nodeType":"Return","src":"1539:16:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2541,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"1671:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2539,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:14","typeDescriptions":{}}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:14","memberName":"length","nodeType":"MemberAccess","src":"1665:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2554,"nodeType":"IfStatement","src":"1661:95:14","trueBody":{"id":2553,"nodeType":"Block","src":"1694:62:14","statements":[{"expression":{"arguments":[{"id":2549,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1729:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2550,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"1735:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2546,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:14","typeDescriptions":{}}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2512,"id":2552,"nodeType":"Return","src":"1708:37:14"}]}},{"expression":{"arguments":[{"id":2557,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"1788:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2555,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2581_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:14","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1557,"src":"1773:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2512,"id":2559,"nodeType":"Return","src":"1766:30:14"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"1174:31:14","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:14","nodeType":"FunctionDefinition","overrides":{"id":2509,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:14"},"parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:14","nodeType":"VariableDeclaration","scope":2561,"src":"1228:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:14"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"1283:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2510,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:14"},"scope":2581,"src":"1210:593:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2579,"nodeType":"Block","src":"2012:86:14","statements":[{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2569,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2022:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2571,"indexExpression":{"id":2570,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"2033:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2572,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"2044:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2574,"nodeType":"ExpressionStatement","src":"2022:31:14"},{"eventCall":{"arguments":[{"id":2576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"2083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2575,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"2068:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"EmitStatement","src":"2063:28:14"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"1809:117:14","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:14","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:14","nodeType":"VariableDeclaration","scope":2580,"src":"1953:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:14","nodeType":"VariableDeclaration","scope":2580,"src":"1970:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:14"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[],"src":"2012:0:14"},"scope":2581,"src":"1931:167:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2582,"src":"487:1613:14","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[547,554,2334,2343,2352]}],"src":"128:1973:14"},"id":14},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2435],"IERC721Metadata":[2609]},"id":2610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2583,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2610,"sourceUnit":2436,"src":"153:39:15","symbolAliases":[{"foreign":{"id":2584,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"161:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2587,"name":"IERC721","nameLocations":["357:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2435,"src":"357:7:15"},"id":2588,"nodeType":"InheritanceSpecifier","src":"357:7:15"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"194:133:15","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2609,"linearizedBaseContracts":[2609,2435,4206],"name":"IERC721Metadata","nameLocation":"338:15:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"371:58:15","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2594,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:15","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[],"src":"447:2:15"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"473:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2591,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:15"},"scope":2609,"src":"434:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"494:60:15","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2600,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:15","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[],"src":"574:2:15"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2600,"src":"600:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2597,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:15"},"scope":2609,"src":"559:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2601,"nodeType":"StructuredDocumentation","src":"621:90:15","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2608,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:15","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:15","nodeType":"VariableDeclaration","scope":2608,"src":"734:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:15"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"774:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2605,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:15"},"scope":2609,"src":"716:73:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2610,"src":"328:463:15","usedErrors":[],"usedEvents":[2334,2343,2352]}],"src":"127:665:15"},"id":15},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2686],"IERC721Errors":[649],"IERC721Receiver":[2453]},"id":2687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2611,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2687,"sourceUnit":2454,"src":"144:55:16","symbolAliases":[{"foreign":{"id":2612,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"152:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2687,"sourceUnit":697,"src":"200:69:16","symbolAliases":[{"foreign":{"id":2614,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"208:13:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"271:159:16","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2686,"linearizedBaseContracts":[2686],"name":"ERC721Utils","nameLocation":"439:11:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2684,"nodeType":"Block","src":"1159:760:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1173:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:16","memberName":"code","nodeType":"MemberAccess","src":"1173:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:16","memberName":"length","nodeType":"MemberAccess","src":"1173:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2683,"nodeType":"IfStatement","src":"1169:744:16","trueBody":{"id":2682,"nodeType":"Block","src":"1193:720:16","statements":[{"clauses":[{"block":{"id":2660,"nodeType":"Block","src":"1303:214:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"1325:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2648,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1335:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2453_$","typeString":"type(contract IERC721Receiver)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:16","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"1335:32:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"1321:182:16","trueBody":{"id":2658,"nodeType":"Block","src":"1378:125:16","statements":[{"errorCall":{"arguments":[{"id":2655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1481:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2652,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1445:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$649_$","typeString":"type(contract IERC721Errors)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:16","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1445:35:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2657,"nodeType":"RevertStatement","src":"1438:46:16"}]}}]},"errorName":"","id":2661,"nodeType":"TryCatchClause","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"retval","nameLocation":"1295:6:16","nodeType":"VariableDeclaration","scope":2661,"src":"1288:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2644,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:16"},"src":"1279:238:16"},{"block":{"id":2679,"nodeType":"Block","src":"1546:357:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2665,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"1568:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:16","memberName":"length","nodeType":"MemberAccess","src":"1568:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2677,"nodeType":"Block","src":"1736:153:16","statements":[{"AST":{"nativeSrc":"1783:88:16","nodeType":"YulBlock","src":"1783:88:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:16","nodeType":"YulIdentifier","src":"1820:6:16"},{"kind":"number","nativeSrc":"1828:4:16","nodeType":"YulLiteral","src":"1828:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:16","nodeType":"YulIdentifier","src":"1816:3:16"},"nativeSrc":"1816:17:16","nodeType":"YulFunctionCall","src":"1816:17:16"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:16","nodeType":"YulIdentifier","src":"1841:6:16"}],"functionName":{"name":"mload","nativeSrc":"1835:5:16","nodeType":"YulIdentifier","src":"1835:5:16"},"nativeSrc":"1835:13:16","nodeType":"YulFunctionCall","src":"1835:13:16"}],"functionName":{"name":"revert","nativeSrc":"1809:6:16","nodeType":"YulIdentifier","src":"1809:6:16"},"nativeSrc":"1809:40:16","nodeType":"YulFunctionCall","src":"1809:40:16"},"nativeSrc":"1809:40:16","nodeType":"YulExpressionStatement","src":"1809:40:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2663,"isOffset":false,"isSlot":false,"src":"1820:6:16","valueSize":1},{"declaration":2663,"isOffset":false,"isSlot":false,"src":"1841:6:16","valueSize":1}],"flags":["memory-safe"],"id":2676,"nodeType":"InlineAssembly","src":"1758:113:16"}]},"id":2678,"nodeType":"IfStatement","src":"1564:325:16","trueBody":{"id":2675,"nodeType":"Block","src":"1588:142:16","statements":[{"errorCall":{"arguments":[{"id":2672,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1708:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2669,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1672:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$649_$","typeString":"type(contract IERC721Errors)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:16","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1672:35:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2674,"nodeType":"RevertStatement","src":"1665:46:16"}]}}]},"errorName":"","id":2680,"nodeType":"TryCatchClause","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"reason","nameLocation":"1538:6:16","nodeType":"VariableDeclaration","scope":2680,"src":"1525:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2662,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:16"},"src":"1518:385:16"}],"externalCall":{"arguments":[{"id":2639,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"1248:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1258:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1264:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2642,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"1273:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1227:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2635,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1211:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2453_$","typeString":"type(contract IERC721Receiver)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2453","typeString":"contract IERC721Receiver"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:16","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"1211:36:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2681,"nodeType":"TryStatement","src":"1207:696:16"}]}}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"457:531:16","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2685,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:16","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"operator","nameLocation":"1041:8:16","nodeType":"VariableDeclaration","scope":2685,"src":"1033:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"from","nameLocation":"1067:4:16","nodeType":"VariableDeclaration","scope":2685,"src":"1059:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"to","nameLocation":"1089:2:16","nodeType":"VariableDeclaration","scope":2685,"src":"1081:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:16","nodeType":"VariableDeclaration","scope":2685,"src":"1101:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"data","nameLocation":"1139:4:16","nodeType":"VariableDeclaration","scope":2685,"src":"1126:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2626,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:16"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"1159:0:16"},"scope":2686,"src":"993:926:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2687,"src":"431:1490:16","usedErrors":[],"usedEvents":[]}],"src":"118:1804:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2716]},"id":2717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"127:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2716,"linearizedBaseContracts":[2716],"name":"Context","nameLocation":"642:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2697,"nodeType":"Block","src":"718:34:17","statements":[{"expression":{"expression":{"id":2694,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:17","memberName":"sender","nodeType":"MemberAccess","src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2693,"id":2696,"nodeType":"Return","src":"728:17:17"}]},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:17","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[],"src":"675:2:17"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:17"},"scope":2716,"src":"656:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2706,"nodeType":"Block","src":"825:32:17","statements":[{"expression":{"expression":{"id":2703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:17","memberName":"data","nodeType":"MemberAccess","src":"842:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2702,"id":2705,"nodeType":"Return","src":"835:15:17"}]},"id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:17","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"775:2:17"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2707,"src":"809:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2700,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:17"},"scope":2716,"src":"758:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"935:25:17","statements":[{"expression":{"hexValue":"30","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2711,"id":2713,"nodeType":"Return","src":"945:8:17"}]},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:17","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[],"src":"892:2:17"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2715,"src":"926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:17"},"scope":2716,"src":"863:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2717,"src":"624:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:862:17"},"id":17},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2768]},"id":2769,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"125:489:18","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2768,"linearizedBaseContracts":[2768],"name":"Panic","nameLocation":"665:5:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"677:36:18","text":"@dev generic / unspecified error"},"id":2723,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:18","nodeType":"VariableDeclaration","scope":2768,"src":"718:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"764:37:18","text":"@dev used by the assert() builtin"},"id":2727,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:18","nodeType":"VariableDeclaration","scope":2768,"src":"806:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"851:41:18","text":"@dev arithmetic underflow or overflow"},"id":2731,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:18","nodeType":"VariableDeclaration","scope":2768,"src":"897:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"950:35:18","text":"@dev division or modulo by zero"},"id":2735,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:18","nodeType":"VariableDeclaration","scope":2768,"src":"990:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"1045:30:18","text":"@dev enum conversion error"},"id":2739,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:18","nodeType":"VariableDeclaration","scope":2768,"src":"1080:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:18","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"1140:36:18","text":"@dev invalid encoding in storage"},"id":2743,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:18","nodeType":"VariableDeclaration","scope":2768,"src":"1181:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"1242:24:18","text":"@dev empty array pop"},"id":2747,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:18","nodeType":"VariableDeclaration","scope":2768,"src":"1271:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"1325:35:18","text":"@dev array out of bounds access"},"id":2751,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:18","nodeType":"VariableDeclaration","scope":2768,"src":"1365:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2752,"nodeType":"StructuredDocumentation","src":"1423:65:18","text":"@dev resource error (too large allocation or too large array)"},"id":2755,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:18","nodeType":"VariableDeclaration","scope":2768,"src":"1493:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"1546:42:18","text":"@dev calling invalid internal function"},"id":2759,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:18","nodeType":"VariableDeclaration","scope":2768,"src":"1593:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:18","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2766,"nodeType":"Block","src":"1819:151:18","statements":[{"AST":{"nativeSrc":"1854:110:18","nodeType":"YulBlock","src":"1854:110:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:18","nodeType":"YulLiteral","src":"1875:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:18","nodeType":"YulLiteral","src":"1881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:18","nodeType":"YulIdentifier","src":"1868:6:18"},"nativeSrc":"1868:24:18","nodeType":"YulFunctionCall","src":"1868:24:18"},"nativeSrc":"1868:24:18","nodeType":"YulExpressionStatement","src":"1868:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:18","nodeType":"YulLiteral","src":"1912:4:18","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:18","nodeType":"YulIdentifier","src":"1918:4:18"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:18","nodeType":"YulIdentifier","src":"1905:6:18"},"nativeSrc":"1905:18:18","nodeType":"YulFunctionCall","src":"1905:18:18"},"nativeSrc":"1905:18:18","nodeType":"YulExpressionStatement","src":"1905:18:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:18","nodeType":"YulLiteral","src":"1943:4:18","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:18","nodeType":"YulLiteral","src":"1949:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:18","nodeType":"YulIdentifier","src":"1936:6:18"},"nativeSrc":"1936:18:18","nodeType":"YulFunctionCall","src":"1936:18:18"},"nativeSrc":"1936:18:18","nodeType":"YulExpressionStatement","src":"1936:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2762,"isOffset":false,"isSlot":false,"src":"1918:4:18","valueSize":1}],"flags":["memory-safe"],"id":2765,"nodeType":"InlineAssembly","src":"1829:135:18"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"1658:113:18","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2767,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:18","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"code","nameLocation":"1799:4:18","nodeType":"VariableDeclaration","scope":2767,"src":"1791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:18"},"returnParameters":{"id":2764,"nodeType":"ParameterList","parameters":[],"src":"1819:0:18"},"scope":2768,"src":"1776:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2769,"src":"657:1315:18","usedErrors":[],"usedEvents":[]}],"src":"99:1874:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5827],"SafeCast":[7592],"SignedMath":[7736],"Strings":[4170]},"id":4171,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2770,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2772,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4171,"sourceUnit":5828,"src":"127:37:19","symbolAliases":[{"foreign":{"id":2771,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2774,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4171,"sourceUnit":7593,"src":"165:45:19","symbolAliases":[{"foreign":{"id":2773,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4171,"sourceUnit":7737,"src":"211:49:19","symbolAliases":[{"foreign":{"id":2775,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"219:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"262:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":4170,"linearizedBaseContracts":[4170],"name":"Strings","nameLocation":"305:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2779,"libraryName":{"id":2778,"name":"SafeCast","nameLocations":["325:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7592,"src":"325:8:19"},"nodeType":"UsingForDirective","src":"319:21:19"},{"constant":true,"id":2782,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:19","nodeType":"VariableDeclaration","scope":4170,"src":"346:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2780,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2785,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:19","nodeType":"VariableDeclaration","scope":4170,"src":"408:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2783,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2821,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:19","nodeType":"VariableDeclaration","scope":4170,"src":"456:302:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:19","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:19","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:19","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:19","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:19","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"778:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2828,"name":"StringsInsufficientHexLength","nameLocation":"870:28:19","nodeType":"ErrorDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"value","nameLocation":"907:5:19","nodeType":"VariableDeclaration","scope":2828,"src":"899:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"length","nameLocation":"922:6:19","nodeType":"VariableDeclaration","scope":2828,"src":"914:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:19"},"src":"864:66:19"},{"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"936:108:19","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2831,"name":"StringsInvalidChar","nameLocation":"1055:18:19","nodeType":"ErrorDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[],"src":"1073:2:19"},"src":"1049:27:19"},{"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"1082:84:19","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2834,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:19","nodeType":"ErrorDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"1204:2:19"},"src":"1171:36:19"},{"body":{"id":2881,"nodeType":"Block","src":"1379:563:19","statements":[{"id":2880,"nodeType":"UncheckedBlock","src":"1389:547:19","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"length","nameLocation":"1421:6:19","nodeType":"VariableDeclaration","scope":2880,"src":"1413:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1441:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2844,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"1430:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5827_$","typeString":"type(library Math)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"1430:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:19"},{"assignments":[2852],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:19","nodeType":"VariableDeclaration","scope":2880,"src":"1465:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2851,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2857,"initialValue":{"arguments":[{"id":2855,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1499:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2853,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:19"},{"assignments":[2859],"declarations":[{"constant":false,"id":2859,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:19","nodeType":"VariableDeclaration","scope":2880,"src":"1520:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2860,"nodeType":"VariableDeclarationStatement","src":"1520:11:19"},{"AST":{"nativeSrc":"1570:69:19","nodeType":"YulBlock","src":"1570:69:19","statements":[{"nativeSrc":"1588:37:19","nodeType":"YulAssignment","src":"1588:37:19","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:19","nodeType":"YulIdentifier","src":"1603:6:19"},{"kind":"number","nativeSrc":"1611:4:19","nodeType":"YulLiteral","src":"1611:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:19","nodeType":"YulIdentifier","src":"1599:3:19"},"nativeSrc":"1599:17:19","nodeType":"YulFunctionCall","src":"1599:17:19"},{"name":"length","nativeSrc":"1618:6:19","nodeType":"YulIdentifier","src":"1618:6:19"}],"functionName":{"name":"add","nativeSrc":"1595:3:19","nodeType":"YulIdentifier","src":"1595:3:19"},"nativeSrc":"1595:30:19","nodeType":"YulFunctionCall","src":"1595:30:19"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:19","nodeType":"YulIdentifier","src":"1588:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2852,"isOffset":false,"isSlot":false,"src":"1603:6:19","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"1618:6:19","valueSize":1},{"declaration":2859,"isOffset":false,"isSlot":false,"src":"1588:3:19","valueSize":1}],"flags":["memory-safe"],"id":2861,"nodeType":"InlineAssembly","src":"1545:94:19"},{"body":{"id":2876,"nodeType":"Block","src":"1665:234:19","statements":[{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:19","subExpression":{"id":2863,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"1683:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"1683:5:19"},{"AST":{"nativeSrc":"1731:86:19","nodeType":"YulBlock","src":"1731:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:19","nodeType":"YulIdentifier","src":"1761:3:19"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:19","nodeType":"YulIdentifier","src":"1775:5:19"},{"kind":"number","nativeSrc":"1782:2:19","nodeType":"YulLiteral","src":"1782:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:19","nodeType":"YulIdentifier","src":"1771:3:19"},"nativeSrc":"1771:14:19","nodeType":"YulFunctionCall","src":"1771:14:19"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:19","nodeType":"YulIdentifier","src":"1787:10:19"}],"functionName":{"name":"byte","nativeSrc":"1766:4:19","nodeType":"YulIdentifier","src":"1766:4:19"},"nativeSrc":"1766:32:19","nodeType":"YulFunctionCall","src":"1766:32:19"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:19","nodeType":"YulIdentifier","src":"1753:7:19"},"nativeSrc":"1753:46:19","nodeType":"YulFunctionCall","src":"1753:46:19"},"nativeSrc":"1753:46:19","nodeType":"YulExpressionStatement","src":"1753:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2782,"isOffset":false,"isSlot":false,"src":"1787:10:19","valueSize":1},{"declaration":2859,"isOffset":false,"isSlot":false,"src":"1761:3:19","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"1775:5:19","valueSize":1}],"flags":["memory-safe"],"id":2866,"nodeType":"InlineAssembly","src":"1706:111:19"},{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2870,"nodeType":"ExpressionStatement","src":"1834:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1867:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2875,"nodeType":"IfStatement","src":"1863:21:19","trueBody":{"id":2874,"nodeType":"Break","src":"1879:5:19"}}]},"condition":{"hexValue":"74727565","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2877,"nodeType":"WhileStatement","src":"1652:247:19"},{"expression":{"id":2878,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"1919:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2841,"id":2879,"nodeType":"Return","src":"1912:13:19"}]}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"1213:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:19","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"value","nameLocation":"1334:5:19","nodeType":"VariableDeclaration","scope":2882,"src":"1326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:19"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"1364:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2839,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:19"},"scope":4170,"src":"1308:634:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"2118:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"2149:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:19","trueExpression":{"hexValue":"2d","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"2195:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2900,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"2180:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7736_$","typeString":"type(library SignedMath)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7735,"src":"2180:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2899,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"2171:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2890,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:19","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2889,"id":2906,"nodeType":"Return","src":"2128:75:19"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"1948:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:19","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"value","nameLocation":"2073:5:19","nodeType":"VariableDeclaration","scope":2908,"src":"2066:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2884,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:19"},"returnParameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"2103:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2887,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:19"},"scope":4170,"src":"2042:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"2389:100:19","statements":[{"id":2926,"nodeType":"UncheckedBlock","src":"2399:84:19","statements":[{"expression":{"arguments":[{"id":2917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2442:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2461:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2918,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"2449:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5827_$","typeString":"type(library Math)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5770,"src":"2449:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2928,3011,3031],"referencedDeclaration":3011,"src":"2430:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2915,"id":2925,"nodeType":"Return","src":"2423:49:19"}]}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"2216:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:19","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"value","nameLocation":"2344:5:19","nodeType":"VariableDeclaration","scope":2928,"src":"2336:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:19"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2928,"src":"2374:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2913,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:19"},"scope":4170,"src":"2315:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3010,"nodeType":"Block","src":"2702:435:19","statements":[{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:19","nodeType":"VariableDeclaration","scope":3010,"src":"2712:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2941,"initialValue":{"id":2940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:19"},{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:19","nodeType":"VariableDeclaration","scope":3010,"src":"2748:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2942,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2952,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2947,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"2784:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2944,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:19"},{"expression":{"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2953,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2805:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2955,"indexExpression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2958,"nodeType":"ExpressionStatement","src":"2805:15:19"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2959,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2830:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2961,"indexExpression":{"hexValue":"31","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2964,"nodeType":"ExpressionStatement","src":"2830:15:19"},{"body":{"id":2993,"nodeType":"Block","src":"2900:95:19","statements":[{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2979,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2914:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2981,"indexExpression":{"id":2980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2921:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2982,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"2926:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2986,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"2937:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2988,"nodeType":"ExpressionStatement","src":"2914:40:19"},{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"2968:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2992,"nodeType":"ExpressionStatement","src":"2968:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2994,"initializationExpression":{"assignments":[2966],"declarations":[{"constant":false,"id":2966,"mutability":"mutable","name":"i","nameLocation":"2868:1:19","nodeType":"VariableDeclaration","scope":2994,"src":"2860:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2972,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2968,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"2876:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:19","subExpression":{"id":2976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2897:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"nodeType":"ExpressionStatement","src":"2895:3:19"},"nodeType":"ForStatement","src":"2855:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2995,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3008:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3004,"nodeType":"IfStatement","src":"3004:96:19","trueBody":{"id":3003,"nodeType":"Block","src":"3025:75:19","statements":[{"errorCall":{"arguments":[{"id":2999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"3075:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3000,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"3082:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2998,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"3046:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3002,"nodeType":"RevertStatement","src":"3039:50:19"}]}},{"expression":{"arguments":[{"id":3007,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"3123:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3005,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:19","typeDescriptions":{}}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2937,"id":3009,"nodeType":"Return","src":"3109:21:19"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"2495:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:19","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"value","nameLocation":"2641:5:19","nodeType":"VariableDeclaration","scope":3011,"src":"2633:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"length","nameLocation":"2656:6:19","nodeType":"VariableDeclaration","scope":3011,"src":"2648:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:19"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3011,"src":"2687:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2935,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:19"},"scope":4170,"src":"2612:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"3369:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3024,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"3414:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3022,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:19","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:19","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3027,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3422:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3019,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2928,3011,3031],"referencedDeclaration":3011,"src":"3386:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3018,"id":3029,"nodeType":"Return","src":"3379:58:19"}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"3143:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:19","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"addr","nameLocation":"3325:4:19","nodeType":"VariableDeclaration","scope":3031,"src":"3317:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3013,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:19"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3031,"src":"3354:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3016,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:19"},"scope":4170,"src":"3296:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"3701:642:19","statements":[{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:19","nodeType":"VariableDeclaration","scope":3095,"src":"3711:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3039,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3047,"initialValue":{"arguments":[{"arguments":[{"id":3044,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"3751:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3043,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2928,3011,3031],"referencedDeclaration":3031,"src":"3739:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3041,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{}}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:19"},{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:19","nodeType":"VariableDeclaration","scope":3095,"src":"3842:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3050,"nodeType":"VariableDeclarationStatement","src":"3842:17:19"},{"AST":{"nativeSrc":"3894:78:19","nodeType":"YulBlock","src":"3894:78:19","statements":[{"nativeSrc":"3908:54:19","nodeType":"YulAssignment","src":"3908:54:19","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:19","nodeType":"YulLiteral","src":"3925:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:19","nodeType":"YulIdentifier","src":"3943:6:19"},{"kind":"number","nativeSrc":"3951:4:19","nodeType":"YulLiteral","src":"3951:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:19","nodeType":"YulIdentifier","src":"3939:3:19"},"nativeSrc":"3939:17:19","nodeType":"YulFunctionCall","src":"3939:17:19"},{"kind":"number","nativeSrc":"3958:2:19","nodeType":"YulLiteral","src":"3958:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:19","nodeType":"YulIdentifier","src":"3929:9:19"},"nativeSrc":"3929:32:19","nodeType":"YulFunctionCall","src":"3929:32:19"}],"functionName":{"name":"shr","nativeSrc":"3921:3:19","nodeType":"YulIdentifier","src":"3921:3:19"},"nativeSrc":"3921:41:19","nodeType":"YulFunctionCall","src":"3921:41:19"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:19","nodeType":"YulIdentifier","src":"3908:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3040,"isOffset":false,"isSlot":false,"src":"3943:6:19","valueSize":1},{"declaration":3049,"isOffset":false,"isSlot":false,"src":"3908:9:19","valueSize":1}],"flags":["memory-safe"],"id":3051,"nodeType":"InlineAssembly","src":"3869:103:19"},{"body":{"id":3088,"nodeType":"Block","src":"4015:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4121:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3069,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4150:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3071,"indexExpression":{"id":3070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"4157:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3067,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:19","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3083,"nodeType":"IfStatement","src":"4117:150:19","trueBody":{"id":3082,"nodeType":"Block","src":"4167:100:19","statements":[{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3076,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4235:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3078,"indexExpression":{"id":3077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"4242:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3081,"nodeType":"ExpressionStatement","src":"4235:17:19"}]}},{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3084,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4280:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3087,"nodeType":"ExpressionStatement","src":"4280:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"4003:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"initializationExpression":{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"i","nameLocation":"3995:1:19","nodeType":"VariableDeclaration","scope":3089,"src":"3987:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3055,"initialValue":{"hexValue":"3431","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:19","subExpression":{"id":3059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"4012:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"4010:3:19"},"nodeType":"ForStatement","src":"3982:324:19"},{"expression":{"arguments":[{"id":3092,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4329:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3090,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:19","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3038,"id":3094,"nodeType":"Return","src":"4315:21:19"}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"3450:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:19","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"addr","nameLocation":"3657:4:19","nodeType":"VariableDeclaration","scope":3096,"src":"3649:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:19"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"3686:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3036,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:19"},"scope":4170,"src":"3620:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3132,"nodeType":"Block","src":"4498:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"4521:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3106,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:19","typeDescriptions":{}}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:19","memberName":"length","nodeType":"MemberAccess","src":"4515:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"4540:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:19","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:19","memberName":"length","nodeType":"MemberAccess","src":"4534:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"4569:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3118,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:19","typeDescriptions":{}}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3117,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"4592:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3124,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:19","typeDescriptions":{}}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3123,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3105,"id":3131,"nodeType":"Return","src":"4508:87:19"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"4349:66:19","text":" @dev Returns true if the two strings are equal."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:19","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"a","nameLocation":"4449:1:19","nodeType":"VariableDeclaration","scope":3133,"src":"4435:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3098,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"b","nameLocation":"4466:1:19","nodeType":"VariableDeclaration","scope":3133,"src":"4452:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3100,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:19"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"4492:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3103,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:19"},"scope":4170,"src":"4420:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"4899:64:19","statements":[{"expression":{"arguments":[{"id":3142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"4926:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3146,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"4942:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:19","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:19","memberName":"length","nodeType":"MemberAccess","src":"4936:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3152,3183],"referencedDeclaration":3183,"src":"4916:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3140,"id":3150,"nodeType":"Return","src":"4909:47:19"}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"4608:214:19","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:19","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"input","nameLocation":"4860:5:19","nodeType":"VariableDeclaration","scope":3152,"src":"4846:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3135,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:19"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"4890:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:19"},"scope":4170,"src":"4827:136:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3182,"nodeType":"Block","src":"5368:153:19","statements":[{"assignments":[3165,3167],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"success","nameLocation":"5384:7:19","nodeType":"VariableDeclaration","scope":3182,"src":"5379:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3164,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"value","nameLocation":"5401:5:19","nodeType":"VariableDeclaration","scope":3182,"src":"5393:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3173,"initialValue":{"arguments":[{"id":3169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"5423:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3170,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"5430:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3171,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"5437:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3204,3241],"referencedDeclaration":3241,"src":"5410:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:19"},{"condition":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:19","subExpression":{"id":3174,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5456:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3179,"nodeType":"IfStatement","src":"5451:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3176,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"5472:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3178,"nodeType":"RevertStatement","src":"5465:27:19"}},{"expression":{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5509:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3163,"id":3181,"nodeType":"Return","src":"5502:12:19"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"4969:294:19","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:19","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"input","nameLocation":"5301:5:19","nodeType":"VariableDeclaration","scope":3183,"src":"5287:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"begin","nameLocation":"5316:5:19","nodeType":"VariableDeclaration","scope":3183,"src":"5308:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"end","nameLocation":"5331:3:19","nodeType":"VariableDeclaration","scope":3183,"src":"5323:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:19"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3183,"src":"5359:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:19"},"scope":4170,"src":"5268:253:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3203,"nodeType":"Block","src":"5842:83:19","statements":[{"expression":{"arguments":[{"id":3194,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"5888:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3198,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"5904:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3196,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:19","typeDescriptions":{}}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:19","memberName":"length","nodeType":"MemberAccess","src":"5898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3193,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"5859:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3192,"id":3202,"nodeType":"Return","src":"5852:66:19"}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"5527:215:19","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3204,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:19","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"input","nameLocation":"5783:5:19","nodeType":"VariableDeclaration","scope":3204,"src":"5769:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3185,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:19"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"success","nameLocation":"5818:7:19","nodeType":"VariableDeclaration","scope":3204,"src":"5813:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3188,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"value","nameLocation":"5835:5:19","nodeType":"VariableDeclaration","scope":3204,"src":"5827:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:19"},"scope":4170,"src":"5747:178:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3240,"nodeType":"Block","src":"6327:144:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"6341:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3221,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"6353:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:19","typeDescriptions":{}}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:19","memberName":"length","nodeType":"MemberAccess","src":"6347:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"6370:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3226,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"6378:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"IfStatement","src":"6337:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3217,"id":3232,"nodeType":"Return","src":"6383:17:19"}},{"expression":{"arguments":[{"id":3235,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"6446:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3236,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"6453:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3237,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"6460:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3234,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"6417:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3217,"id":3239,"nodeType":"Return","src":"6410:54:19"}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"5931:238:19","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:19","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"input","nameLocation":"6219:5:19","nodeType":"VariableDeclaration","scope":3241,"src":"6205:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3206,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"begin","nameLocation":"6242:5:19","nodeType":"VariableDeclaration","scope":3241,"src":"6234:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"end","nameLocation":"6265:3:19","nodeType":"VariableDeclaration","scope":3241,"src":"6257:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:19"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"success","nameLocation":"6303:7:19","nodeType":"VariableDeclaration","scope":3241,"src":"6298:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3213,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"value","nameLocation":"6320:5:19","nodeType":"VariableDeclaration","scope":3241,"src":"6312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:19"},"scope":4170,"src":"6174:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"6874:347:19","statements":[{"assignments":[3256],"declarations":[{"constant":false,"id":3256,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:19","nodeType":"VariableDeclaration","scope":3310,"src":"6884:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3255,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3261,"initialValue":{"arguments":[{"id":3259,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6912:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3257,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:19","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:19"},{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"result","nameLocation":"6937:6:19","nodeType":"VariableDeclaration","scope":3310,"src":"6929:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3265,"initialValue":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:19"},{"body":{"id":3304,"nodeType":"Block","src":"6995:189:19","statements":[{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"chr","nameLocation":"7015:3:19","nodeType":"VariableDeclaration","scope":3304,"src":"7009:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3276,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3287,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3282,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"7064:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"7072:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3281,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7041:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3279,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:19","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3278,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"7021:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"7094:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3295,"nodeType":"IfStatement","src":"7090:30:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3254,"id":3294,"nodeType":"Return","src":"7103:17:19"}},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"7134:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"7134:12:19"},{"expression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"7160:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3301,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"7170:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3303,"nodeType":"ExpressionStatement","src":"7160:13:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"6981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3271,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6985:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"initializationExpression":{"assignments":[3267],"declarations":[{"constant":false,"id":3267,"mutability":"mutable","name":"i","nameLocation":"6970:1:19","nodeType":"VariableDeclaration","scope":3305,"src":"6962:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3269,"initialValue":{"id":3268,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:19","subExpression":{"id":3273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"6992:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"6990:3:19"},"nodeType":"ForStatement","src":"6957:227:19"},{"expression":{"components":[{"hexValue":"74727565","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"7207:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3254,"id":3309,"nodeType":"Return","src":"7193:21:19"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"6477:224:19","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:19","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"input","nameLocation":"6767:5:19","nodeType":"VariableDeclaration","scope":3311,"src":"6753:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3243,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"begin","nameLocation":"6790:5:19","nodeType":"VariableDeclaration","scope":3311,"src":"6782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"end","nameLocation":"6813:3:19","nodeType":"VariableDeclaration","scope":3311,"src":"6805:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:19"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"success","nameLocation":"6850:7:19","nodeType":"VariableDeclaration","scope":3311,"src":"6845:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"value","nameLocation":"6867:5:19","nodeType":"VariableDeclaration","scope":3311,"src":"6859:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:19"},"scope":4170,"src":"6706:515:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3329,"nodeType":"Block","src":"7518:63:19","statements":[{"expression":{"arguments":[{"id":3320,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"7544:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3324,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"7560:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3322,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:19","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:19","memberName":"length","nodeType":"MemberAccess","src":"7554:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3319,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3330,3361],"referencedDeclaration":3361,"src":"7535:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3318,"id":3328,"nodeType":"Return","src":"7528:46:19"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"7227:216:19","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3330,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:19","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"input","nameLocation":"7480:5:19","nodeType":"VariableDeclaration","scope":3330,"src":"7466:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:19"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"7510:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3316,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:19"},"scope":4170,"src":"7448:133:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3360,"nodeType":"Block","src":"7986:151:19","statements":[{"assignments":[3343,3345],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"success","nameLocation":"8002:7:19","nodeType":"VariableDeclaration","scope":3360,"src":"7997:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"value","nameLocation":"8018:5:19","nodeType":"VariableDeclaration","scope":3360,"src":"8011:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3344,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3351,"initialValue":{"arguments":[{"id":3347,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8039:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3348,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3349,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"8053:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3382,3424],"referencedDeclaration":3424,"src":"8027:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:19"},{"condition":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:19","subExpression":{"id":3352,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"8072:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3357,"nodeType":"IfStatement","src":"8067:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3354,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8088:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3356,"nodeType":"RevertStatement","src":"8081:27:19"}},{"expression":{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"8125:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3341,"id":3359,"nodeType":"Return","src":"8118:12:19"}]},"documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"7587:296:19","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:19","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"input","nameLocation":"7920:5:19","nodeType":"VariableDeclaration","scope":3361,"src":"7906:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3332,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"begin","nameLocation":"7935:5:19","nodeType":"VariableDeclaration","scope":3361,"src":"7927:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"end","nameLocation":"7950:3:19","nodeType":"VariableDeclaration","scope":3361,"src":"7942:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:19"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"7978:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3339,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:19"},"scope":4170,"src":"7888:249:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"8528:82:19","statements":[{"expression":{"arguments":[{"id":3372,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"8573:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"8589:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3374,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:19","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:19","memberName":"length","nodeType":"MemberAccess","src":"8583:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3371,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"8545:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3370,"id":3380,"nodeType":"Return","src":"8538:65:19"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"8143:287:19","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:19","nodeType":"FunctionDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"input","nameLocation":"8470:5:19","nodeType":"VariableDeclaration","scope":3382,"src":"8456:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3363,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:19"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"success","nameLocation":"8505:7:19","nodeType":"VariableDeclaration","scope":3382,"src":"8500:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3366,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"value","nameLocation":"8521:5:19","nodeType":"VariableDeclaration","scope":3382,"src":"8514:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3368,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:19"},"scope":4170,"src":"8435:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3387,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:19","nodeType":"VariableDeclaration","scope":4170,"src":"8616:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3423,"nodeType":"Block","src":"9132:143:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9146:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3404,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"9158:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3402,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:19","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:19","memberName":"length","nodeType":"MemberAccess","src":"9152:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"9175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3409,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9183:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"nodeType":"IfStatement","src":"9142:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3400,"id":3415,"nodeType":"Return","src":"9188:17:19"}},{"expression":{"arguments":[{"id":3418,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"9250:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3419,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"9257:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3420,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9264:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3417,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"9222:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3400,"id":3422,"nodeType":"Return","src":"9215:53:19"}]},"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"8673:303:19","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:19","nodeType":"FunctionDefinition","parameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"input","nameLocation":"9025:5:19","nodeType":"VariableDeclaration","scope":3424,"src":"9011:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3389,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"begin","nameLocation":"9048:5:19","nodeType":"VariableDeclaration","scope":3424,"src":"9040:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"end","nameLocation":"9071:3:19","nodeType":"VariableDeclaration","scope":3424,"src":"9063:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:19"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"success","nameLocation":"9109:7:19","nodeType":"VariableDeclaration","scope":3424,"src":"9104:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3396,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"value","nameLocation":"9125:5:19","nodeType":"VariableDeclaration","scope":3424,"src":"9118:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3398,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:19"},"scope":4170,"src":"8981:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3544,"nodeType":"Block","src":"9675:812:19","statements":[{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:19","nodeType":"VariableDeclaration","scope":3544,"src":"9685:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3438,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3444,"initialValue":{"arguments":[{"id":3442,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"9713:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3440,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:19","typeDescriptions":{}}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:19"},{"assignments":[3446],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"sign","nameLocation":"9783:4:19","nodeType":"VariableDeclaration","scope":3544,"src":"9776:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3445,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3462,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"9790:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3448,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"9799:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3457,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"9847:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3458,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"9855:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"9824:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3454,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:19","typeDescriptions":{}}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:19","trueExpression":{"arguments":[{"hexValue":"30","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3450,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:19","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:19"},{"assignments":[3464],"declarations":[{"constant":false,"id":3464,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:19","nodeType":"VariableDeclaration","scope":3544,"src":"9943:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3463,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3471,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"9963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3466,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:19","typeDescriptions":{}}},"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:19"},{"assignments":[3473],"declarations":[{"constant":false,"id":3473,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:19","nodeType":"VariableDeclaration","scope":3544,"src":"9992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3472,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3480,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"10012:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3475,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:19","typeDescriptions":{}}},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:19"},{"assignments":[3482],"declarations":[{"constant":false,"id":3482,"mutability":"mutable","name":"offset","nameLocation":"10049:6:19","nodeType":"VariableDeclaration","scope":3544,"src":"10041:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3489,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"10059:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3484,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"10075:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"10058:37:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:19"},{"assignments":[3491,3493],"declarations":[{"constant":false,"id":3491,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:19","nodeType":"VariableDeclaration","scope":3544,"src":"10109:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3490,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:19","nodeType":"VariableDeclaration","scope":3544,"src":"10126:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3501,"initialValue":{"arguments":[{"id":3495,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"10159:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"10166:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3497,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"10174:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3499,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"10182:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3204,3241],"referencedDeclaration":3241,"src":"10146:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"10215:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3504,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"10226:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"10343:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3523,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"10357:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"10373:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3526,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"10385:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3437,"id":3541,"nodeType":"Return","src":"10463:17:19"},"id":3542,"nodeType":"IfStatement","src":"10339:141:19","trueBody":{"id":3537,"nodeType":"Block","src":"10401:56:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3531,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:19","memberName":"min","nodeType":"MemberAccess","src":"10429:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3437,"id":3536,"nodeType":"Return","src":"10415:31:19"}]}},"id":3543,"nodeType":"IfStatement","src":"10197:283:19","trueBody":{"id":3521,"nodeType":"Block","src":"10242:91:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3508,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"10270:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3516,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"10312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3514,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:19","typeDescriptions":{}}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:19","trueExpression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:19","subExpression":{"arguments":[{"id":3511,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"10293:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3509,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:19","typeDescriptions":{}}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3437,"id":3520,"nodeType":"Return","src":"10256:66:19"}]}}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"9281:223:19","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:19","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"input","nameLocation":"9569:5:19","nodeType":"VariableDeclaration","scope":3545,"src":"9555:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3426,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"begin","nameLocation":"9592:5:19","nodeType":"VariableDeclaration","scope":3545,"src":"9584:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"end","nameLocation":"9615:3:19","nodeType":"VariableDeclaration","scope":3545,"src":"9607:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:19"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"success","nameLocation":"9652:7:19","nodeType":"VariableDeclaration","scope":3545,"src":"9647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3433,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"value","nameLocation":"9668:5:19","nodeType":"VariableDeclaration","scope":3545,"src":"9661:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3435,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:19"},"scope":4170,"src":"9509:978:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3563,"nodeType":"Block","src":"10832:67:19","statements":[{"expression":{"arguments":[{"id":3554,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3558,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"10878:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3556,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:19","typeDescriptions":{}}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:19","memberName":"length","nodeType":"MemberAccess","src":"10872:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3553,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3564,3595],"referencedDeclaration":3595,"src":"10849:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3552,"id":3562,"nodeType":"Return","src":"10842:50:19"}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"10493:259:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:19","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"input","nameLocation":"10793:5:19","nodeType":"VariableDeclaration","scope":3564,"src":"10779:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3547,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:19"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3564,"src":"10823:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:19"},"scope":4170,"src":"10757:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"11320:156:19","statements":[{"assignments":[3577,3579],"declarations":[{"constant":false,"id":3577,"mutability":"mutable","name":"success","nameLocation":"11336:7:19","nodeType":"VariableDeclaration","scope":3594,"src":"11331:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3576,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"value","nameLocation":"11353:5:19","nodeType":"VariableDeclaration","scope":3594,"src":"11345:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3585,"initialValue":{"arguments":[{"id":3581,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"11378:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3582,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"11385:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3583,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"11392:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3580,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3616,3653],"referencedDeclaration":3653,"src":"11362:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:19"},{"condition":{"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:19","subExpression":{"id":3586,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11411:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"11406:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3588,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"11427:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3590,"nodeType":"RevertStatement","src":"11420:27:19"}},{"expression":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"11464:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3575,"id":3593,"nodeType":"Return","src":"11457:12:19"}]},"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"10905:307:19","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:19","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"input","nameLocation":"11253:5:19","nodeType":"VariableDeclaration","scope":3595,"src":"11239:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3566,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3569,"mutability":"mutable","name":"begin","nameLocation":"11268:5:19","nodeType":"VariableDeclaration","scope":3595,"src":"11260:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"end","nameLocation":"11283:3:19","nodeType":"VariableDeclaration","scope":3595,"src":"11275:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:19"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"11311:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:19"},"scope":4170,"src":"11217:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3615,"nodeType":"Block","src":"11803:86:19","statements":[{"expression":{"arguments":[{"id":3606,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"11852:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3610,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"11868:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3608,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:19","typeDescriptions":{}}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:19","memberName":"length","nodeType":"MemberAccess","src":"11862:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3605,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"11820:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3604,"id":3614,"nodeType":"Return","src":"11813:69:19"}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"11482:218:19","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:19","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"input","nameLocation":"11744:5:19","nodeType":"VariableDeclaration","scope":3616,"src":"11730:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3597,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:19"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"success","nameLocation":"11779:7:19","nodeType":"VariableDeclaration","scope":3616,"src":"11774:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3600,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"value","nameLocation":"11796:5:19","nodeType":"VariableDeclaration","scope":3616,"src":"11788:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:19"},"scope":4170,"src":"11705:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"12297:147:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"12311:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3633,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"12323:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3631,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:19","typeDescriptions":{}}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:19","memberName":"length","nodeType":"MemberAccess","src":"12317:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"12340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3638,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"12348:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"nodeType":"IfStatement","src":"12307:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3629,"id":3644,"nodeType":"Return","src":"12353:17:19"}},{"expression":{"arguments":[{"id":3647,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"12419:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3648,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"12426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3649,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"12433:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3646,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12387:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3629,"id":3651,"nodeType":"Return","src":"12380:57:19"}]},"documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"11895:241:19","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:19","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"input","nameLocation":"12189:5:19","nodeType":"VariableDeclaration","scope":3653,"src":"12175:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3618,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"begin","nameLocation":"12212:5:19","nodeType":"VariableDeclaration","scope":3653,"src":"12204:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"end","nameLocation":"12235:3:19","nodeType":"VariableDeclaration","scope":3653,"src":"12227:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:19"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"success","nameLocation":"12273:7:19","nodeType":"VariableDeclaration","scope":3653,"src":"12268:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3625,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"value","nameLocation":"12290:5:19","nodeType":"VariableDeclaration","scope":3653,"src":"12282:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:19"},"scope":4170,"src":"12141:303:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3755,"nodeType":"Block","src":"12853:881:19","statements":[{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:19","nodeType":"VariableDeclaration","scope":3755,"src":"12863:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3667,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3673,"initialValue":{"arguments":[{"id":3671,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"12891:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3669,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:19","typeDescriptions":{}}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:19"},{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:19","nodeType":"VariableDeclaration","scope":3755,"src":"12945:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3674,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3695,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12963:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3685,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"13013:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3686,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"13021:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"12990:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3682,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:19","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3689,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:19","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:19"},{"assignments":[3697],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"offset","nameLocation":"13133:6:19","nodeType":"VariableDeclaration","scope":3755,"src":"13125:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3703,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3698,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"13142:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"13142:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:19"},{"assignments":[3705],"declarations":[{"constant":false,"id":3705,"mutability":"mutable","name":"result","nameLocation":"13183:6:19","nodeType":"VariableDeclaration","scope":3755,"src":"13175:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3707,"initialValue":{"hexValue":"30","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:19"},{"body":{"id":3749,"nodeType":"Block","src":"13250:447:19","statements":[{"assignments":[3721],"declarations":[{"constant":false,"id":3721,"mutability":"mutable","name":"chr","nameLocation":"13270:3:19","nodeType":"VariableDeclaration","scope":3749,"src":"13264:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3720,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3731,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3726,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"13319:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"13327:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"13296:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3723,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:19","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3722,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"13276:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"13349:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3739,"nodeType":"IfStatement","src":"13345:31:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3666,"id":3738,"nodeType":"Return","src":"13359:17:19"}},{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"13390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3743,"nodeType":"ExpressionStatement","src":"13390:12:19"},{"id":3748,"nodeType":"UncheckedBlock","src":"13416:271:19","statements":[{"expression":{"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"13659:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3745,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"13669:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3747,"nodeType":"ExpressionStatement","src":"13659:13:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"13236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3715,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"13240:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"initializationExpression":{"assignments":[3709],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"i","nameLocation":"13216:1:19","nodeType":"VariableDeclaration","scope":3750,"src":"13208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"13220:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3711,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"13228:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:19","subExpression":{"id":3717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"13247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ExpressionStatement","src":"13245:3:19"},"nodeType":"ForStatement","src":"13203:494:19"},{"expression":{"components":[{"hexValue":"74727565","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"13720:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3666,"id":3754,"nodeType":"Return","src":"13706:21:19"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"12450:227:19","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:19","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"input","nameLocation":"12746:5:19","nodeType":"VariableDeclaration","scope":3756,"src":"12732:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3655,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"begin","nameLocation":"12769:5:19","nodeType":"VariableDeclaration","scope":3756,"src":"12761:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"end","nameLocation":"12792:3:19","nodeType":"VariableDeclaration","scope":3756,"src":"12784:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:19"},"returnParameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"success","nameLocation":"12829:7:19","nodeType":"VariableDeclaration","scope":3756,"src":"12824:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3662,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"12846:5:19","nodeType":"VariableDeclaration","scope":3756,"src":"12838:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:19"},"scope":4170,"src":"12682:1052:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3774,"nodeType":"Block","src":"14032:67:19","statements":[{"expression":{"arguments":[{"id":3765,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"14062:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3769,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"14078:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3767,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:19","typeDescriptions":{}}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:19","memberName":"length","nodeType":"MemberAccess","src":"14072:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3764,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3775,3806],"referencedDeclaration":3806,"src":"14049:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3763,"id":3773,"nodeType":"Return","src":"14042:50:19"}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"13740:212:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:19","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"input","nameLocation":"13993:5:19","nodeType":"VariableDeclaration","scope":3775,"src":"13979:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3758,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:19"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3775,"src":"14023:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3761,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:19"},"scope":4170,"src":"13957:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3805,"nodeType":"Block","src":"14472:165:19","statements":[{"assignments":[3788,3790],"declarations":[{"constant":false,"id":3788,"mutability":"mutable","name":"success","nameLocation":"14488:7:19","nodeType":"VariableDeclaration","scope":3805,"src":"14483:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3787,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"value","nameLocation":"14505:5:19","nodeType":"VariableDeclaration","scope":3805,"src":"14497:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3796,"initialValue":{"arguments":[{"id":3792,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"14530:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3793,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"14537:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3794,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"14544:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3791,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3827,3931],"referencedDeclaration":3931,"src":"14514:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:19"},{"condition":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:19","subExpression":{"id":3797,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"14563:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3802,"nodeType":"IfStatement","src":"14558:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3799,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"14579:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3801,"nodeType":"RevertStatement","src":"14572:36:19"}},{"expression":{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"14625:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3786,"id":3804,"nodeType":"Return","src":"14618:12:19"}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"14105:259:19","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3806,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:19","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"input","nameLocation":"14405:5:19","nodeType":"VariableDeclaration","scope":3806,"src":"14391:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3777,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"begin","nameLocation":"14420:5:19","nodeType":"VariableDeclaration","scope":3806,"src":"14412:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"end","nameLocation":"14435:3:19","nodeType":"VariableDeclaration","scope":3806,"src":"14427:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:19"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3806,"src":"14463:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3784,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:19"},"scope":4170,"src":"14369:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3826,"nodeType":"Block","src":"14944:70:19","statements":[{"expression":{"arguments":[{"id":3817,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"14977:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3821,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"14993:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3819,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:19","typeDescriptions":{}}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:19","memberName":"length","nodeType":"MemberAccess","src":"14987:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3816,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3827,3931],"referencedDeclaration":3931,"src":"14961:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3815,"id":3825,"nodeType":"Return","src":"14954:53:19"}]},"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"14643:198:19","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3827,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:19","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"input","nameLocation":"14885:5:19","nodeType":"VariableDeclaration","scope":3827,"src":"14871:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3808,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:19"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"success","nameLocation":"14920:7:19","nodeType":"VariableDeclaration","scope":3827,"src":"14915:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3811,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"value","nameLocation":"14937:5:19","nodeType":"VariableDeclaration","scope":3827,"src":"14929:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:19"},"scope":4170,"src":"14846:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"15407:733:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"15421:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3844,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"15433:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3842,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:19","typeDescriptions":{}}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:19","memberName":"length","nodeType":"MemberAccess","src":"15427:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"15450:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3849,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"15458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3859,"nodeType":"IfStatement","src":"15417:72:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:19","typeDescriptions":{}}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3840,"id":3858,"nodeType":"Return","src":"15463:26:19"}},{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:19","nodeType":"VariableDeclaration","scope":3930,"src":"15500:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3860,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3884,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"15518:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"15524:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3873,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"15574:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3871,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:19","typeDescriptions":{}}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3875,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"15582:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3870,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"15545:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3868,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:19","typeDescriptions":{}}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3878,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:19","typeDescriptions":{}}},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:19"},{"assignments":[3886],"declarations":[{"constant":false,"id":3886,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:19","nodeType":"VariableDeclaration","scope":3930,"src":"15686:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3888,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"15716:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"15716:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"15803:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3896,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"15809:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3898,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"15818:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3928,"nodeType":"Block","src":"16083:51:19","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:19","typeDescriptions":{}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3840,"id":3927,"nodeType":"Return","src":"16097:26:19"}]},"id":3929,"nodeType":"IfStatement","src":"15799:335:19","trueBody":{"id":3920,"nodeType":"Block","src":"15834:243:19","statements":[{"assignments":[3901,3903],"declarations":[{"constant":false,"id":3901,"mutability":"mutable","name":"s","nameLocation":"15955:1:19","nodeType":"VariableDeclaration","scope":3920,"src":"15950:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3900,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"v","nameLocation":"15966:1:19","nodeType":"VariableDeclaration","scope":3920,"src":"15958:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"arguments":[{"id":3905,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"16003:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3906,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"16010:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3907,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"16017:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3904,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"15971:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:19"},{"expression":{"components":[{"id":3910,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"16043:1:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3915,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"16062:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3913,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:19","typeDescriptions":{}}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3911,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:19","typeDescriptions":{}}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3840,"id":3919,"nodeType":"Return","src":"16035:31:19"}]}}]},"documentation":{"id":3828,"nodeType":"StructuredDocumentation","src":"15020:226:19","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:19","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"input","nameLocation":"15299:5:19","nodeType":"VariableDeclaration","scope":3931,"src":"15285:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3829,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"begin","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":3931,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"end","nameLocation":"15345:3:19","nodeType":"VariableDeclaration","scope":3931,"src":"15337:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:19"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"success","nameLocation":"15383:7:19","nodeType":"VariableDeclaration","scope":3931,"src":"15378:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3836,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"value","nameLocation":"15400:5:19","nodeType":"VariableDeclaration","scope":3931,"src":"15392:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3838,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:19"},"scope":4170,"src":"15251:889:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3990,"nodeType":"Block","src":"16209:461:19","statements":[{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"value","nameLocation":"16225:5:19","nodeType":"VariableDeclaration","scope":3990,"src":"16219:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3938,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3944,"initialValue":{"arguments":[{"id":3942,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"16239:3:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3940,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:19","typeDescriptions":{}}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:19"},{"id":3987,"nodeType":"UncheckedBlock","src":"16403:238:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16431:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:19","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16445:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16491:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16505:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:19","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16552:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16566:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:19","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3979,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:19","memberName":"max","nodeType":"MemberAccess","src":"16615:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3937,"id":3983,"nodeType":"Return","src":"16608:22:19"},"id":3984,"nodeType":"IfStatement","src":"16548:82:19","trueBody":{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16578:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:19","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3977,"nodeType":"ExpressionStatement","src":"16578:11:19"}},"id":3985,"nodeType":"IfStatement","src":"16487:143:19","trueBody":{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16518:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:19","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3966,"nodeType":"ExpressionStatement","src":"16518:11:19"}},"id":3986,"nodeType":"IfStatement","src":"16427:203:19","trueBody":{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16457:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3955,"nodeType":"ExpressionStatement","src":"16457:11:19"}}]},{"expression":{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16658:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3937,"id":3989,"nodeType":"Return","src":"16651:12:19"}]},"id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:19","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"chr","nameLocation":"16175:3:19","nodeType":"VariableDeclaration","scope":3991,"src":"16168:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3932,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:19"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"16202:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3935,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:19"},"scope":4170,"src":"16146:524:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4156,"nodeType":"Block","src":"17336:1331:19","statements":[{"assignments":[4000],"declarations":[{"constant":false,"id":4000,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:19","nodeType":"VariableDeclaration","scope":4156,"src":"17346:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3999,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4005,"initialValue":{"arguments":[{"id":4003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"17374:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4001,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:19","typeDescriptions":{}}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:19"},{"assignments":[4007],"declarations":[{"constant":false,"id":4007,"mutability":"mutable","name":"output","nameLocation":"17403:6:19","nodeType":"VariableDeclaration","scope":4156,"src":"17390:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4015,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"17426:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:19","memberName":"length","nodeType":"MemberAccess","src":"17426:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4008,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:19"},{"assignments":[4017],"declarations":[{"constant":false,"id":4017,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:19","nodeType":"VariableDeclaration","scope":4156,"src":"17473:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4019,"initialValue":{"hexValue":"30","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:19"},{"body":{"id":4148,"nodeType":"Block","src":"17548:854:19","statements":[{"assignments":[4031],"declarations":[{"constant":false,"id":4031,"mutability":"mutable","name":"char","nameLocation":"17569:4:19","nodeType":"VariableDeclaration","scope":4148,"src":"17562:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4030,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4039,"initialValue":{"arguments":[{"arguments":[{"id":4035,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"17606:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"17614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"17583:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4032,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:19","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:19"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17637:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4044,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"17672:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4042,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:19","typeDescriptions":{}}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4146,"nodeType":"Block","src":"18330:62:19","statements":[{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4139,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"18348:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4142,"indexExpression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:19","subExpression":{"id":4140,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"18355:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4143,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"18373:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4145,"nodeType":"ExpressionStatement","src":"18348:29:19"}]},"id":4147,"nodeType":"IfStatement","src":"17631:761:19","trueBody":{"id":4138,"nodeType":"Block","src":"17687:637:19","statements":[{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4053,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4056,"indexExpression":{"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:19","subExpression":{"id":4054,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"17712:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4059,"nodeType":"ExpressionStatement","src":"17705:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"17756:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"17825:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4080,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"17894:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"17963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"18032:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"18101:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4120,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"18171:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4131,"nodeType":"IfStatement","src":"18167:143:19","trueBody":{"id":4130,"nodeType":"Block","src":"18185:125:19","statements":[{"expression":{"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4123,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"18263:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4126,"indexExpression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:19","subExpression":{"id":4124,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"18270:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4129,"nodeType":"ExpressionStatement","src":"18263:28:19"}]}},"id":4132,"nodeType":"IfStatement","src":"18097:213:19","trueBody":{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4113,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"18115:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4116,"indexExpression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:19","subExpression":{"id":4114,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"18122:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4119,"nodeType":"ExpressionStatement","src":"18115:29:19"}},"id":4133,"nodeType":"IfStatement","src":"18028:282:19","trueBody":{"expression":{"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4103,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"18046:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4106,"indexExpression":{"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:19","subExpression":{"id":4104,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"18053:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4109,"nodeType":"ExpressionStatement","src":"18046:28:19"}},"id":4134,"nodeType":"IfStatement","src":"17959:351:19","trueBody":{"expression":{"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4093,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"17977:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4096,"indexExpression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:19","subExpression":{"id":4094,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"17984:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4099,"nodeType":"ExpressionStatement","src":"17977:28:19"}},"id":4135,"nodeType":"IfStatement","src":"17890:420:19","trueBody":{"expression":{"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4083,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"17908:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4086,"indexExpression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:19","subExpression":{"id":4084,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"17915:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4089,"nodeType":"ExpressionStatement","src":"17908:28:19"}},"id":4136,"nodeType":"IfStatement","src":"17821:489:19","trueBody":{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4073,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"17839:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4076,"indexExpression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:19","subExpression":{"id":4074,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"17846:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4079,"nodeType":"ExpressionStatement","src":"17839:28:19"}},"id":4137,"nodeType":"IfStatement","src":"17752:558:19","trueBody":{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4063,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"17770:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4066,"indexExpression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:19","subExpression":{"id":4064,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"17777:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4069,"nodeType":"ExpressionStatement","src":"17770:28:19"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"17524:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4024,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"17528:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:19","memberName":"length","nodeType":"MemberAccess","src":"17528:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"initializationExpression":{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"i","nameLocation":"17521:1:19","nodeType":"VariableDeclaration","scope":4149,"src":"17513:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"nodeType":"VariableDeclarationStatement","src":"17513:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:19","subExpression":{"id":4027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"17545:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"17543:3:19"},"nodeType":"ForStatement","src":"17508:894:19"},{"AST":{"nativeSrc":"18500:129:19","nodeType":"YulBlock","src":"18500:129:19","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:19","nodeType":"YulIdentifier","src":"18521:6:19"},{"name":"outputLength","nativeSrc":"18529:12:19","nodeType":"YulIdentifier","src":"18529:12:19"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:19","nodeType":"YulIdentifier","src":"18514:6:19"},"nativeSrc":"18514:28:19","nodeType":"YulFunctionCall","src":"18514:28:19"},"nativeSrc":"18514:28:19","nodeType":"YulExpressionStatement","src":"18514:28:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:19","nodeType":"YulLiteral","src":"18562:4:19","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:19","nodeType":"YulIdentifier","src":"18572:6:19"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:19","nodeType":"YulLiteral","src":"18584:1:19","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:19","nodeType":"YulLiteral","src":"18591:1:19","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:19","nodeType":"YulIdentifier","src":"18598:12:19"},{"kind":"number","nativeSrc":"18612:2:19","nodeType":"YulLiteral","src":"18612:2:19","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:19","nodeType":"YulIdentifier","src":"18594:3:19"},"nativeSrc":"18594:21:19","nodeType":"YulFunctionCall","src":"18594:21:19"}],"functionName":{"name":"shr","nativeSrc":"18587:3:19","nodeType":"YulIdentifier","src":"18587:3:19"},"nativeSrc":"18587:29:19","nodeType":"YulFunctionCall","src":"18587:29:19"}],"functionName":{"name":"shl","nativeSrc":"18580:3:19","nodeType":"YulIdentifier","src":"18580:3:19"},"nativeSrc":"18580:37:19","nodeType":"YulFunctionCall","src":"18580:37:19"}],"functionName":{"name":"add","nativeSrc":"18568:3:19","nodeType":"YulIdentifier","src":"18568:3:19"},"nativeSrc":"18568:50:19","nodeType":"YulFunctionCall","src":"18568:50:19"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:19","nodeType":"YulIdentifier","src":"18555:6:19"},"nativeSrc":"18555:64:19","nodeType":"YulFunctionCall","src":"18555:64:19"},"nativeSrc":"18555:64:19","nodeType":"YulExpressionStatement","src":"18555:64:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4007,"isOffset":false,"isSlot":false,"src":"18521:6:19","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"18572:6:19","valueSize":1},{"declaration":4017,"isOffset":false,"isSlot":false,"src":"18529:12:19","valueSize":1},{"declaration":4017,"isOffset":false,"isSlot":false,"src":"18598:12:19","valueSize":1}],"flags":["memory-safe"],"id":4150,"nodeType":"InlineAssembly","src":"18475:154:19"},{"expression":{"arguments":[{"id":4153,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"18653:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4151,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:19","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3998,"id":4155,"nodeType":"Return","src":"18639:21:19"}]},"documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"16676:576:19","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:19","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"input","nameLocation":"17291:5:19","nodeType":"VariableDeclaration","scope":4157,"src":"17277:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3993,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:19"},"returnParameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"17321:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3996,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:19"},"scope":4170,"src":"17257:1410:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"19052:225:19","statements":[{"AST":{"nativeSrc":"19201:70:19","nodeType":"YulBlock","src":"19201:70:19","statements":[{"nativeSrc":"19215:46:19","nodeType":"YulAssignment","src":"19215:46:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:19","nodeType":"YulIdentifier","src":"19238:6:19"},{"kind":"number","nativeSrc":"19246:4:19","nodeType":"YulLiteral","src":"19246:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:19","nodeType":"YulIdentifier","src":"19234:3:19"},"nativeSrc":"19234:17:19","nodeType":"YulFunctionCall","src":"19234:17:19"},{"name":"offset","nativeSrc":"19253:6:19","nodeType":"YulIdentifier","src":"19253:6:19"}],"functionName":{"name":"add","nativeSrc":"19230:3:19","nodeType":"YulIdentifier","src":"19230:3:19"},"nativeSrc":"19230:30:19","nodeType":"YulFunctionCall","src":"19230:30:19"}],"functionName":{"name":"mload","nativeSrc":"19224:5:19","nodeType":"YulIdentifier","src":"19224:5:19"},"nativeSrc":"19224:37:19","nodeType":"YulFunctionCall","src":"19224:37:19"},"variableNames":[{"name":"value","nativeSrc":"19215:5:19","nodeType":"YulIdentifier","src":"19215:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4160,"isOffset":false,"isSlot":false,"src":"19238:6:19","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"19253:6:19","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":false,"src":"19215:5:19","valueSize":1}],"flags":["memory-safe"],"id":4167,"nodeType":"InlineAssembly","src":"19176:95:19"}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"18673:268:19","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:19","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:19","nodeType":"VariableDeclaration","scope":4169,"src":"18978:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4159,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"offset","nameLocation":"19007:6:19","nodeType":"VariableDeclaration","scope":4169,"src":"18999:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:19"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"value","nameLocation":"19045:5:19","nodeType":"VariableDeclaration","scope":4169,"src":"19037:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:19"},"scope":4170,"src":"18946:331:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4171,"src":"297:18982:19","usedErrors":[2828,2831,2834],"usedEvents":[]}],"src":"101:19179:19"},"id":19},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4194],"IERC165":[4206]},"id":4195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4172,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4195,"sourceUnit":4207,"src":"140:38:20","symbolAliases":[{"foreign":{"id":4173,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"148:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4176,"name":"IERC165","nameLocations":["688:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4206,"src":"688:7:20"},"id":4177,"nodeType":"InheritanceSpecifier","src":"688:7:20"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4175,"nodeType":"StructuredDocumentation","src":"180:479:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4194,"linearizedBaseContracts":[4194,4206],"name":"ERC165","nameLocation":"678:6:20","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4205],"body":{"id":4192,"nodeType":"Block","src":"812:64:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"829:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4187,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"849:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4206_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4206_$","typeString":"type(contract IERC165)"}],"id":4186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4206","typeString":"type(contract IERC165)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4184,"id":4191,"nodeType":"Return","src":"822:47:20"}]},"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"702:23:20","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:20","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:20","nodeType":"VariableDeclaration","scope":4193,"src":"757:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4179,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:20"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4193,"src":"806:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4182,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:20"},"scope":4194,"src":"730:146:20","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4195,"src":"660:218:20","usedErrors":[],"usedEvents":[]}],"src":"114:765:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4206]},"id":4207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4196,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"142:280:21","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4206,"linearizedBaseContracts":[4206],"name":"IERC165","nameLocation":"433:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4198,"nodeType":"StructuredDocumentation","src":"447:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4205,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:21","nodeType":"FunctionDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:21","nodeType":"VariableDeclaration","scope":4205,"src":"819:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4199,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:21"},"returnParameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4205,"src":"862:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4202,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:21"},"scope":4206,"src":"792:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4207,"src":"423:447:21","usedErrors":[],"usedEvents":[]}],"src":"115:756:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5827],"Panic":[2768],"SafeCast":[7592]},"id":5828,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4208,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5828,"sourceUnit":2769,"src":"129:35:22","symbolAliases":[{"foreign":{"id":4209,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"137:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5828,"sourceUnit":7593,"src":"165:40:22","symbolAliases":[{"foreign":{"id":4211,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"207:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5827,"linearizedBaseContracts":[5827],"name":"Math","nameLocation":"289:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4218,"members":[{"id":4214,"name":"Floor","nameLocation":"324:5:22","nodeType":"EnumValue","src":"324:5:22"},{"id":4215,"name":"Ceil","nameLocation":"367:4:22","nodeType":"EnumValue","src":"367:4:22"},{"id":4216,"name":"Trunc","nameLocation":"409:5:22","nodeType":"EnumValue","src":"409:5:22"},{"id":4217,"name":"Expand","nameLocation":"439:6:22","nodeType":"EnumValue","src":"439:6:22"}],"name":"Rounding","nameLocation":"305:8:22","nodeType":"EnumDefinition","src":"300:169:22"},{"body":{"id":4231,"nodeType":"Block","src":"731:112:22","statements":[{"AST":{"nativeSrc":"766:71:22","nodeType":"YulBlock","src":"766:71:22","statements":[{"nativeSrc":"780:16:22","nodeType":"YulAssignment","src":"780:16:22","value":{"arguments":[{"name":"a","nativeSrc":"791:1:22","nodeType":"YulIdentifier","src":"791:1:22"},{"name":"b","nativeSrc":"794:1:22","nodeType":"YulIdentifier","src":"794:1:22"}],"functionName":{"name":"add","nativeSrc":"787:3:22","nodeType":"YulIdentifier","src":"787:3:22"},"nativeSrc":"787:9:22","nodeType":"YulFunctionCall","src":"787:9:22"},"variableNames":[{"name":"low","nativeSrc":"780:3:22","nodeType":"YulIdentifier","src":"780:3:22"}]},{"nativeSrc":"809:18:22","nodeType":"YulAssignment","src":"809:18:22","value":{"arguments":[{"name":"low","nativeSrc":"820:3:22","nodeType":"YulIdentifier","src":"820:3:22"},{"name":"a","nativeSrc":"825:1:22","nodeType":"YulIdentifier","src":"825:1:22"}],"functionName":{"name":"lt","nativeSrc":"817:2:22","nodeType":"YulIdentifier","src":"817:2:22"},"nativeSrc":"817:10:22","nodeType":"YulFunctionCall","src":"817:10:22"},"variableNames":[{"name":"high","nativeSrc":"809:4:22","nodeType":"YulIdentifier","src":"809:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4221,"isOffset":false,"isSlot":false,"src":"791:1:22","valueSize":1},{"declaration":4221,"isOffset":false,"isSlot":false,"src":"825:1:22","valueSize":1},{"declaration":4223,"isOffset":false,"isSlot":false,"src":"794:1:22","valueSize":1},{"declaration":4226,"isOffset":false,"isSlot":false,"src":"809:4:22","valueSize":1},{"declaration":4228,"isOffset":false,"isSlot":false,"src":"780:3:22","valueSize":1},{"declaration":4228,"isOffset":false,"isSlot":false,"src":"820:3:22","valueSize":1}],"flags":["memory-safe"],"id":4230,"nodeType":"InlineAssembly","src":"741:96:22"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"475:163:22","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4232,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:22","nodeType":"FunctionDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"a","nameLocation":"667:1:22","nodeType":"VariableDeclaration","scope":4232,"src":"659:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"b","nameLocation":"678:1:22","nodeType":"VariableDeclaration","scope":4232,"src":"670:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:22"},"returnParameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"high","nameLocation":"712:4:22","nodeType":"VariableDeclaration","scope":4232,"src":"704:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"low","nameLocation":"726:3:22","nodeType":"VariableDeclaration","scope":4232,"src":"718:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:22"},"scope":5827,"src":"643:200:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"1115:462:22","statements":[{"AST":{"nativeSrc":"1437:134:22","nodeType":"YulBlock","src":"1437:134:22","statements":[{"nativeSrc":"1451:30:22","nodeType":"YulVariableDeclaration","src":"1451:30:22","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:22","nodeType":"YulIdentifier","src":"1468:1:22"},{"name":"b","nativeSrc":"1471:1:22","nodeType":"YulIdentifier","src":"1471:1:22"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:22","nodeType":"YulLiteral","src":"1478:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:22","nodeType":"YulIdentifier","src":"1474:3:22"},"nativeSrc":"1474:6:22","nodeType":"YulFunctionCall","src":"1474:6:22"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:22","nodeType":"YulIdentifier","src":"1461:6:22"},"nativeSrc":"1461:20:22","nodeType":"YulFunctionCall","src":"1461:20:22"},"variables":[{"name":"mm","nativeSrc":"1455:2:22","nodeType":"YulTypedName","src":"1455:2:22","type":""}]},{"nativeSrc":"1494:16:22","nodeType":"YulAssignment","src":"1494:16:22","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:22","nodeType":"YulIdentifier","src":"1505:1:22"},{"name":"b","nativeSrc":"1508:1:22","nodeType":"YulIdentifier","src":"1508:1:22"}],"functionName":{"name":"mul","nativeSrc":"1501:3:22","nodeType":"YulIdentifier","src":"1501:3:22"},"nativeSrc":"1501:9:22","nodeType":"YulFunctionCall","src":"1501:9:22"},"variableNames":[{"name":"low","nativeSrc":"1494:3:22","nodeType":"YulIdentifier","src":"1494:3:22"}]},{"nativeSrc":"1523:38:22","nodeType":"YulAssignment","src":"1523:38:22","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:22","nodeType":"YulIdentifier","src":"1539:2:22"},{"name":"low","nativeSrc":"1543:3:22","nodeType":"YulIdentifier","src":"1543:3:22"}],"functionName":{"name":"sub","nativeSrc":"1535:3:22","nodeType":"YulIdentifier","src":"1535:3:22"},"nativeSrc":"1535:12:22","nodeType":"YulFunctionCall","src":"1535:12:22"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:22","nodeType":"YulIdentifier","src":"1552:2:22"},{"name":"low","nativeSrc":"1556:3:22","nodeType":"YulIdentifier","src":"1556:3:22"}],"functionName":{"name":"lt","nativeSrc":"1549:2:22","nodeType":"YulIdentifier","src":"1549:2:22"},"nativeSrc":"1549:11:22","nodeType":"YulFunctionCall","src":"1549:11:22"}],"functionName":{"name":"sub","nativeSrc":"1531:3:22","nodeType":"YulIdentifier","src":"1531:3:22"},"nativeSrc":"1531:30:22","nodeType":"YulFunctionCall","src":"1531:30:22"},"variableNames":[{"name":"high","nativeSrc":"1523:4:22","nodeType":"YulIdentifier","src":"1523:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4235,"isOffset":false,"isSlot":false,"src":"1468:1:22","valueSize":1},{"declaration":4235,"isOffset":false,"isSlot":false,"src":"1505:1:22","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"1471:1:22","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"1508:1:22","valueSize":1},{"declaration":4240,"isOffset":false,"isSlot":false,"src":"1523:4:22","valueSize":1},{"declaration":4242,"isOffset":false,"isSlot":false,"src":"1494:3:22","valueSize":1},{"declaration":4242,"isOffset":false,"isSlot":false,"src":"1543:3:22","valueSize":1},{"declaration":4242,"isOffset":false,"isSlot":false,"src":"1556:3:22","valueSize":1}],"flags":["memory-safe"],"id":4244,"nodeType":"InlineAssembly","src":"1412:159:22"}]},"documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"849:173:22","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:22","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"a","nameLocation":"1051:1:22","nodeType":"VariableDeclaration","scope":4246,"src":"1043:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"b","nameLocation":"1062:1:22","nodeType":"VariableDeclaration","scope":4246,"src":"1054:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:22"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"high","nameLocation":"1096:4:22","nodeType":"VariableDeclaration","scope":4246,"src":"1088:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"low","nameLocation":"1110:3:22","nodeType":"VariableDeclaration","scope":4246,"src":"1102:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:22"},"scope":5827,"src":"1027:550:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4280,"nodeType":"Block","src":"1784:149:22","statements":[{"id":4279,"nodeType":"UncheckedBlock","src":"1794:133:22","statements":[{"assignments":[4259],"declarations":[{"constant":false,"id":4259,"mutability":"mutable","name":"c","nameLocation":"1826:1:22","nodeType":"VariableDeclaration","scope":4279,"src":"1818:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4263,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"1830:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"1834:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:22"},{"expression":{"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4264,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"1849:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4265,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"1859:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"1864:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4269,"nodeType":"ExpressionStatement","src":"1849:16:22"},{"expression":{"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1879:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"1888:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4274,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"1908:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4272,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"1892:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"1892:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4278,"nodeType":"ExpressionStatement","src":"1879:37:22"}]}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"1583:105:22","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4281,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:22","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"a","nameLocation":"1717:1:22","nodeType":"VariableDeclaration","scope":4281,"src":"1709:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"b","nameLocation":"1728:1:22","nodeType":"VariableDeclaration","scope":4281,"src":"1720:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:22"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"success","nameLocation":"1759:7:22","nodeType":"VariableDeclaration","scope":4281,"src":"1754:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4253,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"result","nameLocation":"1776:6:22","nodeType":"VariableDeclaration","scope":4281,"src":"1768:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:22"},"scope":5827,"src":"1693:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4315,"nodeType":"Block","src":"2143:149:22","statements":[{"id":4314,"nodeType":"UncheckedBlock","src":"2153:133:22","statements":[{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"c","nameLocation":"2185:1:22","nodeType":"VariableDeclaration","scope":4314,"src":"2177:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"2189:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"2193:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:22"},{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4299,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"2208:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2218:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"2223:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"ExpressionStatement","src":"2208:16:22"},{"expression":{"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"2238:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2247:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4309,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"2267:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4307,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"2251:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"2251:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4313,"nodeType":"ExpressionStatement","src":"2238:37:22"}]}]},"documentation":{"id":4282,"nodeType":"StructuredDocumentation","src":"1939:108:22","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4316,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:22","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"a","nameLocation":"2076:1:22","nodeType":"VariableDeclaration","scope":4316,"src":"2068:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"b","nameLocation":"2087:1:22","nodeType":"VariableDeclaration","scope":4316,"src":"2079:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:22"},"returnParameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"success","nameLocation":"2118:7:22","nodeType":"VariableDeclaration","scope":4316,"src":"2113:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4288,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"result","nameLocation":"2135:6:22","nodeType":"VariableDeclaration","scope":4316,"src":"2127:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:22"},"scope":5827,"src":"2052:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4345,"nodeType":"Block","src":"2505:391:22","statements":[{"id":4344,"nodeType":"UncheckedBlock","src":"2515:375:22","statements":[{"assignments":[4329],"declarations":[{"constant":false,"id":4329,"mutability":"mutable","name":"c","nameLocation":"2547:1:22","nodeType":"VariableDeclaration","scope":4344,"src":"2539:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4333,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"2551:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"2555:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:22"},{"AST":{"nativeSrc":"2595:188:22","nodeType":"YulBlock","src":"2595:188:22","statements":[{"nativeSrc":"2727:42:22","nodeType":"YulAssignment","src":"2727:42:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:22","nodeType":"YulIdentifier","src":"2748:1:22"},{"name":"a","nativeSrc":"2751:1:22","nodeType":"YulIdentifier","src":"2751:1:22"}],"functionName":{"name":"div","nativeSrc":"2744:3:22","nodeType":"YulIdentifier","src":"2744:3:22"},"nativeSrc":"2744:9:22","nodeType":"YulFunctionCall","src":"2744:9:22"},{"name":"b","nativeSrc":"2755:1:22","nodeType":"YulIdentifier","src":"2755:1:22"}],"functionName":{"name":"eq","nativeSrc":"2741:2:22","nodeType":"YulIdentifier","src":"2741:2:22"},"nativeSrc":"2741:16:22","nodeType":"YulFunctionCall","src":"2741:16:22"},{"arguments":[{"name":"a","nativeSrc":"2766:1:22","nodeType":"YulIdentifier","src":"2766:1:22"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:22","nodeType":"YulIdentifier","src":"2759:6:22"},"nativeSrc":"2759:9:22","nodeType":"YulFunctionCall","src":"2759:9:22"}],"functionName":{"name":"or","nativeSrc":"2738:2:22","nodeType":"YulIdentifier","src":"2738:2:22"},"nativeSrc":"2738:31:22","nodeType":"YulFunctionCall","src":"2738:31:22"},"variableNames":[{"name":"success","nativeSrc":"2727:7:22","nodeType":"YulIdentifier","src":"2727:7:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4319,"isOffset":false,"isSlot":false,"src":"2751:1:22","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"2766:1:22","valueSize":1},{"declaration":4321,"isOffset":false,"isSlot":false,"src":"2755:1:22","valueSize":1},{"declaration":4329,"isOffset":false,"isSlot":false,"src":"2748:1:22","valueSize":1},{"declaration":4324,"isOffset":false,"isSlot":false,"src":"2727:7:22","valueSize":1}],"flags":["memory-safe"],"id":4334,"nodeType":"InlineAssembly","src":"2570:213:22"},{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"2842:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"2851:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4339,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"2871:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4337,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"2855:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"2855:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4343,"nodeType":"ExpressionStatement","src":"2842:37:22"}]}]},"documentation":{"id":4317,"nodeType":"StructuredDocumentation","src":"2298:111:22","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4346,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:22","nodeType":"FunctionDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"a","nameLocation":"2438:1:22","nodeType":"VariableDeclaration","scope":4346,"src":"2430:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"b","nameLocation":"2449:1:22","nodeType":"VariableDeclaration","scope":4346,"src":"2441:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:22"},"returnParameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"success","nameLocation":"2480:7:22","nodeType":"VariableDeclaration","scope":4346,"src":"2475:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4323,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"result","nameLocation":"2497:6:22","nodeType":"VariableDeclaration","scope":4346,"src":"2489:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:22"},"scope":5827,"src":"2414:482:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"3111:231:22","statements":[{"id":4365,"nodeType":"UncheckedBlock","src":"3121:215:22","statements":[{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4358,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3145:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4363,"nodeType":"ExpressionStatement","src":"3145:15:22"},{"AST":{"nativeSrc":"3199:127:22","nodeType":"YulBlock","src":"3199:127:22","statements":[{"nativeSrc":"3293:19:22","nodeType":"YulAssignment","src":"3293:19:22","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:22","nodeType":"YulIdentifier","src":"3307:1:22"},{"name":"b","nativeSrc":"3310:1:22","nodeType":"YulIdentifier","src":"3310:1:22"}],"functionName":{"name":"div","nativeSrc":"3303:3:22","nodeType":"YulIdentifier","src":"3303:3:22"},"nativeSrc":"3303:9:22","nodeType":"YulFunctionCall","src":"3303:9:22"},"variableNames":[{"name":"result","nativeSrc":"3293:6:22","nodeType":"YulIdentifier","src":"3293:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4349,"isOffset":false,"isSlot":false,"src":"3307:1:22","valueSize":1},{"declaration":4351,"isOffset":false,"isSlot":false,"src":"3310:1:22","valueSize":1},{"declaration":4356,"isOffset":false,"isSlot":false,"src":"3293:6:22","valueSize":1}],"flags":["memory-safe"],"id":4364,"nodeType":"InlineAssembly","src":"3174:152:22"}]}]},"documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"2902:113:22","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:22","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"a","nameLocation":"3044:1:22","nodeType":"VariableDeclaration","scope":4367,"src":"3036:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"b","nameLocation":"3055:1:22","nodeType":"VariableDeclaration","scope":4367,"src":"3047:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:22"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"success","nameLocation":"3086:7:22","nodeType":"VariableDeclaration","scope":4367,"src":"3081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4353,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4356,"mutability":"mutable","name":"result","nameLocation":"3103:6:22","nodeType":"VariableDeclaration","scope":4367,"src":"3095:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:22"},"scope":5827,"src":"3020:322:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4387,"nodeType":"Block","src":"3567:231:22","statements":[{"id":4386,"nodeType":"UncheckedBlock","src":"3577:215:22","statements":[{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4379,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"3601:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"3611:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4384,"nodeType":"ExpressionStatement","src":"3601:15:22"},{"AST":{"nativeSrc":"3655:127:22","nodeType":"YulBlock","src":"3655:127:22","statements":[{"nativeSrc":"3749:19:22","nodeType":"YulAssignment","src":"3749:19:22","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:22","nodeType":"YulIdentifier","src":"3763:1:22"},{"name":"b","nativeSrc":"3766:1:22","nodeType":"YulIdentifier","src":"3766:1:22"}],"functionName":{"name":"mod","nativeSrc":"3759:3:22","nodeType":"YulIdentifier","src":"3759:3:22"},"nativeSrc":"3759:9:22","nodeType":"YulFunctionCall","src":"3759:9:22"},"variableNames":[{"name":"result","nativeSrc":"3749:6:22","nodeType":"YulIdentifier","src":"3749:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4370,"isOffset":false,"isSlot":false,"src":"3763:1:22","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"3766:1:22","valueSize":1},{"declaration":4377,"isOffset":false,"isSlot":false,"src":"3749:6:22","valueSize":1}],"flags":["memory-safe"],"id":4385,"nodeType":"InlineAssembly","src":"3630:152:22"}]}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"3348:123:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4388,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:22","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"a","nameLocation":"3500:1:22","nodeType":"VariableDeclaration","scope":4388,"src":"3492:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"b","nameLocation":"3511:1:22","nodeType":"VariableDeclaration","scope":4388,"src":"3503:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:22"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"success","nameLocation":"3542:7:22","nodeType":"VariableDeclaration","scope":4388,"src":"3537:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4374,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"result","nameLocation":"3559:6:22","nodeType":"VariableDeclaration","scope":4388,"src":"3551:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:22"},"scope":5827,"src":"3476:322:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4417,"nodeType":"Block","src":"3989:122:22","statements":[{"assignments":[4399,4401],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"success","nameLocation":"4005:7:22","nodeType":"VariableDeclaration","scope":4417,"src":"4000:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4398,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4401,"mutability":"mutable","name":"result","nameLocation":"4022:6:22","nodeType":"VariableDeclaration","scope":4417,"src":"4014:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4406,"initialValue":{"arguments":[{"id":4403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4039:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"4042:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4402,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4032:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:22"},{"expression":{"arguments":[{"id":4408,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"4069:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"4078:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:22","memberName":"max","nodeType":"MemberAccess","src":"4086:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4407,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"4061:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4397,"id":4416,"nodeType":"Return","src":"4054:50:22"}]},"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"3804:103:22","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4418,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:22","nodeType":"FunctionDefinition","parameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"a","nameLocation":"3943:1:22","nodeType":"VariableDeclaration","scope":4418,"src":"3935:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"b","nameLocation":"3954:1:22","nodeType":"VariableDeclaration","scope":4418,"src":"3946:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:22"},"returnParameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4418,"src":"3980:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:22"},"scope":5827,"src":"3912:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"4294:73:22","statements":[{"assignments":[null,4429],"declarations":[null,{"constant":false,"id":4429,"mutability":"mutable","name":"result","nameLocation":"4315:6:22","nodeType":"VariableDeclaration","scope":4437,"src":"4307:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4434,"initialValue":{"arguments":[{"id":4431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"4332:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"4335:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4430,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"4325:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:22"},{"expression":{"id":4435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"4354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4427,"id":4436,"nodeType":"Return","src":"4347:13:22"}]},"documentation":{"id":4419,"nodeType":"StructuredDocumentation","src":"4117:95:22","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:22","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"a","nameLocation":"4248:1:22","nodeType":"VariableDeclaration","scope":4438,"src":"4240:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"b","nameLocation":"4259:1:22","nodeType":"VariableDeclaration","scope":4438,"src":"4251:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:22"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"4285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:22"},"scope":5827,"src":"4217:150:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4467,"nodeType":"Block","src":"4564:122:22","statements":[{"assignments":[4449,4451],"declarations":[{"constant":false,"id":4449,"mutability":"mutable","name":"success","nameLocation":"4580:7:22","nodeType":"VariableDeclaration","scope":4467,"src":"4575:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4448,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"result","nameLocation":"4597:6:22","nodeType":"VariableDeclaration","scope":4467,"src":"4589:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"arguments":[{"id":4453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"4614:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"4617:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4452,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"4607:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:22"},{"expression":{"arguments":[{"id":4458,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"4644:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"4653:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:22","memberName":"max","nodeType":"MemberAccess","src":"4661:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4457,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"4636:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4447,"id":4466,"nodeType":"Return","src":"4629:50:22"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"4373:109:22","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4468,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:22","nodeType":"FunctionDefinition","parameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"a","nameLocation":"4518:1:22","nodeType":"VariableDeclaration","scope":4468,"src":"4510:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"b","nameLocation":"4529:1:22","nodeType":"VariableDeclaration","scope":4468,"src":"4521:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:22"},"returnParameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4468,"src":"4555:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:22"},"scope":5827,"src":"4487:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4494,"nodeType":"Block","src":"5158:207:22","statements":[{"id":4493,"nodeType":"UncheckedBlock","src":"5168:191:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"5306:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"5312:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4482,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"5316:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4487,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5337:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4485,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"5321:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"5321:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4479,"id":4492,"nodeType":"Return","src":"5299:49:22"}]}]},"documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"4692:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4495,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:22","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4471,"mutability":"mutable","name":"condition","nameLocation":"5093:9:22","nodeType":"VariableDeclaration","scope":4495,"src":"5088:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4470,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4473,"mutability":"mutable","name":"a","nameLocation":"5112:1:22","nodeType":"VariableDeclaration","scope":4495,"src":"5104:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"b","nameLocation":"5123:1:22","nodeType":"VariableDeclaration","scope":4495,"src":"5115:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:22"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4495,"src":"5149:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:22"},"scope":5827,"src":"5071:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4513,"nodeType":"Block","src":"5502:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5527:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"5531:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5534:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"5537:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4505,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"5519:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4504,"id":4512,"nodeType":"Return","src":"5512:27:22"}]},"documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"5371:59:22","text":" @dev Returns the largest of two numbers."},"id":4514,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:22","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"a","nameLocation":"5456:1:22","nodeType":"VariableDeclaration","scope":4514,"src":"5448:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"b","nameLocation":"5467:1:22","nodeType":"VariableDeclaration","scope":4514,"src":"5459:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:22"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4514,"src":"5493:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:22"},"scope":5827,"src":"5435:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4532,"nodeType":"Block","src":"5684:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"5709:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"5713:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"5716:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"5719:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"5701:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4523,"id":4531,"nodeType":"Return","src":"5694:27:22"}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"5552:60:22","text":" @dev Returns the smallest of two numbers."},"id":4533,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:22","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"a","nameLocation":"5638:1:22","nodeType":"VariableDeclaration","scope":4533,"src":"5630:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"b","nameLocation":"5649:1:22","nodeType":"VariableDeclaration","scope":4533,"src":"5641:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:22"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4533,"src":"5675:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:22"},"scope":5827,"src":"5617:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"5912:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"5967:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4544,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"5971:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"5977:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4548,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"5981:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4542,"id":4554,"nodeType":"Return","src":"5959:28:22"}]},"documentation":{"id":4534,"nodeType":"StructuredDocumentation","src":"5734:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:22","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"a","nameLocation":"5866:1:22","nodeType":"VariableDeclaration","scope":4556,"src":"5858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"b","nameLocation":"5877:1:22","nodeType":"VariableDeclaration","scope":4556,"src":"5869:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:22"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"5903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:22"},"scope":5827,"src":"5841:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4596,"nodeType":"Block","src":"6286:633:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"6300:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"6296:150:22","trueBody":{"id":4576,"nodeType":"Block","src":"6308:138:22","statements":[{"expression":{"arguments":[{"expression":{"id":4572,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6412:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"6412:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4569,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6400:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"6400:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4575,"nodeType":"ExpressionStatement","src":"6400:35:22"}]}},{"id":4595,"nodeType":"UncheckedBlock","src":"6829:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"6876:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4578,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"6860:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"6860:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"6887:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"6896:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4565,"id":4594,"nodeType":"Return","src":"6853:49:22"}]}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"6000:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4597,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:22","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"a","nameLocation":"6240:1:22","nodeType":"VariableDeclaration","scope":4597,"src":"6232:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"b","nameLocation":"6251:1:22","nodeType":"VariableDeclaration","scope":4597,"src":"6243:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:22"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4597,"src":"6277:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:22"},"scope":5827,"src":"6215:704:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4732,"nodeType":"Block","src":"7340:3585:22","statements":[{"id":4731,"nodeType":"UncheckedBlock","src":"7350:3569:22","statements":[{"assignments":[4610,4612],"declarations":[{"constant":false,"id":4610,"mutability":"mutable","name":"high","nameLocation":"7383:4:22","nodeType":"VariableDeclaration","scope":4731,"src":"7375:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"low","nameLocation":"7397:3:22","nodeType":"VariableDeclaration","scope":4731,"src":"7389:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4617,"initialValue":{"arguments":[{"id":4614,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"7411:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4615,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"7414:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4613,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"7404:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"7498:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"IfStatement","src":"7494:365:22","trueBody":{"id":4625,"nodeType":"Block","src":"7509:350:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"7827:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4622,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"7833:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4608,"id":4624,"nodeType":"Return","src":"7820:24:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"7969:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4628,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"7984:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4645,"nodeType":"IfStatement","src":"7965:142:22","trueBody":{"id":4644,"nodeType":"Block","src":"7990:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"8028:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4637,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8046:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"8046:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4639,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8070:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2731,"src":"8070:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4633,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"8020:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4630,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8008:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"8008:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4643,"nodeType":"ExpressionStatement","src":"8008:84:22"}]}},{"assignments":[4647],"declarations":[{"constant":false,"id":4647,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:22","nodeType":"VariableDeclaration","scope":4731,"src":"8359:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4648,"nodeType":"VariableDeclarationStatement","src":"8359:17:22"},{"AST":{"nativeSrc":"8415:283:22","nodeType":"YulBlock","src":"8415:283:22","statements":[{"nativeSrc":"8484:38:22","nodeType":"YulAssignment","src":"8484:38:22","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:22","nodeType":"YulIdentifier","src":"8504:1:22"},{"name":"y","nativeSrc":"8507:1:22","nodeType":"YulIdentifier","src":"8507:1:22"},{"name":"denominator","nativeSrc":"8510:11:22","nodeType":"YulIdentifier","src":"8510:11:22"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:22","nodeType":"YulIdentifier","src":"8497:6:22"},"nativeSrc":"8497:25:22","nodeType":"YulFunctionCall","src":"8497:25:22"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:22","nodeType":"YulIdentifier","src":"8484:9:22"}]},{"nativeSrc":"8604:37:22","nodeType":"YulAssignment","src":"8604:37:22","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:22","nodeType":"YulIdentifier","src":"8616:4:22"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:22","nodeType":"YulIdentifier","src":"8625:9:22"},{"name":"low","nativeSrc":"8636:3:22","nodeType":"YulIdentifier","src":"8636:3:22"}],"functionName":{"name":"gt","nativeSrc":"8622:2:22","nodeType":"YulIdentifier","src":"8622:2:22"},"nativeSrc":"8622:18:22","nodeType":"YulFunctionCall","src":"8622:18:22"}],"functionName":{"name":"sub","nativeSrc":"8612:3:22","nodeType":"YulIdentifier","src":"8612:3:22"},"nativeSrc":"8612:29:22","nodeType":"YulFunctionCall","src":"8612:29:22"},"variableNames":[{"name":"high","nativeSrc":"8604:4:22","nodeType":"YulIdentifier","src":"8604:4:22"}]},{"nativeSrc":"8658:26:22","nodeType":"YulAssignment","src":"8658:26:22","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:22","nodeType":"YulIdentifier","src":"8669:3:22"},{"name":"remainder","nativeSrc":"8674:9:22","nodeType":"YulIdentifier","src":"8674:9:22"}],"functionName":{"name":"sub","nativeSrc":"8665:3:22","nodeType":"YulIdentifier","src":"8665:3:22"},"nativeSrc":"8665:19:22","nodeType":"YulFunctionCall","src":"8665:19:22"},"variableNames":[{"name":"low","nativeSrc":"8658:3:22","nodeType":"YulIdentifier","src":"8658:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4604,"isOffset":false,"isSlot":false,"src":"8510:11:22","valueSize":1},{"declaration":4610,"isOffset":false,"isSlot":false,"src":"8604:4:22","valueSize":1},{"declaration":4610,"isOffset":false,"isSlot":false,"src":"8616:4:22","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"8636:3:22","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"8658:3:22","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"8669:3:22","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"8484:9:22","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"8625:9:22","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"8674:9:22","valueSize":1},{"declaration":4600,"isOffset":false,"isSlot":false,"src":"8504:1:22","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"8507:1:22","valueSize":1}],"flags":["memory-safe"],"id":4649,"nodeType":"InlineAssembly","src":"8390:308:22"},{"assignments":[4651],"declarations":[{"constant":false,"id":4651,"mutability":"mutable","name":"twos","nameLocation":"8910:4:22","nodeType":"VariableDeclaration","scope":4731,"src":"8902:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4658,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4652,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"8917:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"8936:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:22"},{"AST":{"nativeSrc":"8987:359:22","nodeType":"YulBlock","src":"8987:359:22","statements":[{"nativeSrc":"9052:37:22","nodeType":"YulAssignment","src":"9052:37:22","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:22","nodeType":"YulIdentifier","src":"9071:11:22"},{"name":"twos","nativeSrc":"9084:4:22","nodeType":"YulIdentifier","src":"9084:4:22"}],"functionName":{"name":"div","nativeSrc":"9067:3:22","nodeType":"YulIdentifier","src":"9067:3:22"},"nativeSrc":"9067:22:22","nodeType":"YulFunctionCall","src":"9067:22:22"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:22","nodeType":"YulIdentifier","src":"9052:11:22"}]},{"nativeSrc":"9153:21:22","nodeType":"YulAssignment","src":"9153:21:22","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:22","nodeType":"YulIdentifier","src":"9164:3:22"},{"name":"twos","nativeSrc":"9169:4:22","nodeType":"YulIdentifier","src":"9169:4:22"}],"functionName":{"name":"div","nativeSrc":"9160:3:22","nodeType":"YulIdentifier","src":"9160:3:22"},"nativeSrc":"9160:14:22","nodeType":"YulFunctionCall","src":"9160:14:22"},"variableNames":[{"name":"low","nativeSrc":"9153:3:22","nodeType":"YulIdentifier","src":"9153:3:22"}]},{"nativeSrc":"9293:39:22","nodeType":"YulAssignment","src":"9293:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:22","nodeType":"YulLiteral","src":"9313:1:22","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:22","nodeType":"YulIdentifier","src":"9316:4:22"}],"functionName":{"name":"sub","nativeSrc":"9309:3:22","nodeType":"YulIdentifier","src":"9309:3:22"},"nativeSrc":"9309:12:22","nodeType":"YulFunctionCall","src":"9309:12:22"},{"name":"twos","nativeSrc":"9323:4:22","nodeType":"YulIdentifier","src":"9323:4:22"}],"functionName":{"name":"div","nativeSrc":"9305:3:22","nodeType":"YulIdentifier","src":"9305:3:22"},"nativeSrc":"9305:23:22","nodeType":"YulFunctionCall","src":"9305:23:22"},{"kind":"number","nativeSrc":"9330:1:22","nodeType":"YulLiteral","src":"9330:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:22","nodeType":"YulIdentifier","src":"9301:3:22"},"nativeSrc":"9301:31:22","nodeType":"YulFunctionCall","src":"9301:31:22"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:22","nodeType":"YulIdentifier","src":"9293:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4604,"isOffset":false,"isSlot":false,"src":"9052:11:22","valueSize":1},{"declaration":4604,"isOffset":false,"isSlot":false,"src":"9071:11:22","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"9153:3:22","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"9164:3:22","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9084:4:22","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9169:4:22","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9293:4:22","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9316:4:22","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9323:4:22","valueSize":1}],"flags":["memory-safe"],"id":4659,"nodeType":"InlineAssembly","src":"8962:384:22"},{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"9409:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"9416:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4662,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"9423:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4665,"nodeType":"ExpressionStatement","src":"9409:18:22"},{"assignments":[4667],"declarations":[{"constant":false,"id":4667,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:22","nodeType":"VariableDeclaration","scope":4731,"src":"9762:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4674,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4669,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"9785:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:22"},{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10018:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10033:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4678,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"10018:36:22"},{"expression":{"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4683,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10103:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4686,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10117:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4690,"nodeType":"ExpressionStatement","src":"10088:36:22"},{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4691,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10175:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4694,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10189:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4698,"nodeType":"ExpressionStatement","src":"10160:36:22"},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4699,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10231:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10246:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4702,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10260:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"10231:36:22"},{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10304:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10319:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4710,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10333:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4714,"nodeType":"ExpressionStatement","src":"10304:36:22"},{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4715,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10393:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4718,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10407:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4722,"nodeType":"ExpressionStatement","src":"10378:36:22"},{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10859:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"10868:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4725,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10874:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"10859:22:22"},{"expression":{"id":4729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10902:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4608,"id":4730,"nodeType":"Return","src":"10895:13:22"}]}]},"documentation":{"id":4598,"nodeType":"StructuredDocumentation","src":"6925:312:22","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4733,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:22","nodeType":"FunctionDefinition","parameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"x","nameLocation":"7266:1:22","nodeType":"VariableDeclaration","scope":4733,"src":"7258:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"y","nameLocation":"7277:1:22","nodeType":"VariableDeclaration","scope":4733,"src":"7269:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:22","nodeType":"VariableDeclaration","scope":4733,"src":"7280:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:22"},"returnParameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"result","nameLocation":"7332:6:22","nodeType":"VariableDeclaration","scope":4733,"src":"7324:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:22"},"scope":5827,"src":"7242:3683:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4769,"nodeType":"Block","src":"11164:128:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4749,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"11188:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4750,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"11191:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4751,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"11194:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4748,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4733,4770],"referencedDeclaration":4733,"src":"11181:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4756,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"11242:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":4755,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"11225:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4218_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4759,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"11262:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4760,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"11265:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4761,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"11268:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4753,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"11209:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"11209:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4747,"id":4768,"nodeType":"Return","src":"11174:111:22"}]},"documentation":{"id":4734,"nodeType":"StructuredDocumentation","src":"10931:118:22","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4770,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:22","nodeType":"FunctionDefinition","parameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"x","nameLocation":"11078:1:22","nodeType":"VariableDeclaration","scope":4770,"src":"11070:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4738,"mutability":"mutable","name":"y","nameLocation":"11089:1:22","nodeType":"VariableDeclaration","scope":4770,"src":"11081:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4740,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:22","nodeType":"VariableDeclaration","scope":4770,"src":"11092:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4743,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:22","nodeType":"VariableDeclaration","scope":4770,"src":"11113:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":4742,"nodeType":"UserDefinedTypeName","pathNode":{"id":4741,"name":"Rounding","nameLocations":["11113:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"11113:8:22"},"referencedDeclaration":4218,"src":"11113:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:22"},"returnParameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4770,"src":"11155:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:22"},"scope":5827,"src":"11054:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"11500:245:22","statements":[{"id":4818,"nodeType":"UncheckedBlock","src":"11510:229:22","statements":[{"assignments":[4783,4785],"declarations":[{"constant":false,"id":4783,"mutability":"mutable","name":"high","nameLocation":"11543:4:22","nodeType":"VariableDeclaration","scope":4818,"src":"11535:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"mutable","name":"low","nameLocation":"11557:3:22","nodeType":"VariableDeclaration","scope":4818,"src":"11549:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4790,"initialValue":{"arguments":[{"id":4787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"11571:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4788,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"11574:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"11564:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11594:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4793,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"11607:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4804,"nodeType":"IfStatement","src":"11590:86:22","trueBody":{"id":4803,"nodeType":"Block","src":"11610:66:22","statements":[{"expression":{"arguments":[{"expression":{"id":4799,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"11640:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2731,"src":"11640:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4796,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"11628:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"11628:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4802,"nodeType":"ExpressionStatement","src":"11628:33:22"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11697:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4807,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"11712:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4812,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"11719:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4813,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"11726:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4781,"id":4817,"nodeType":"Return","src":"11689:39:22"}]}]},"documentation":{"id":4771,"nodeType":"StructuredDocumentation","src":"11298:111:22","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:22","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"x","nameLocation":"11438:1:22","nodeType":"VariableDeclaration","scope":4820,"src":"11430:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4775,"mutability":"mutable","name":"y","nameLocation":"11449:1:22","nodeType":"VariableDeclaration","scope":4820,"src":"11441:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"n","nameLocation":"11458:1:22","nodeType":"VariableDeclaration","scope":4820,"src":"11452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4776,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:22"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"result","nameLocation":"11492:6:22","nodeType":"VariableDeclaration","scope":4820,"src":"11484:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:22"},"scope":5827,"src":"11414:331:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4858,"nodeType":"Block","src":"11963:113:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"11987:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4837,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"11990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4838,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"11993:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4835,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4820,4859],"referencedDeclaration":4820,"src":"11980:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4843,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"12031:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":4842,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"12014:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4218_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4846,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"12051:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4847,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"12054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4849,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"12062:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4840,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"11998:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"11998:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4834,"id":4857,"nodeType":"Return","src":"11973:96:22"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"11751:109:22","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4859,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:22","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"x","nameLocation":"11889:1:22","nodeType":"VariableDeclaration","scope":4859,"src":"11881:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"y","nameLocation":"11900:1:22","nodeType":"VariableDeclaration","scope":4859,"src":"11892:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4827,"mutability":"mutable","name":"n","nameLocation":"11909:1:22","nodeType":"VariableDeclaration","scope":4859,"src":"11903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4826,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:22","nodeType":"VariableDeclaration","scope":4859,"src":"11912:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":4829,"nodeType":"UserDefinedTypeName","pathNode":{"id":4828,"name":"Rounding","nameLocations":["11912:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"11912:8:22"},"referencedDeclaration":4218,"src":"11912:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:22"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4859,"src":"11954:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:22"},"scope":5827,"src":"11865:211:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4955,"nodeType":"Block","src":"12710:1849:22","statements":[{"id":4954,"nodeType":"UncheckedBlock","src":"12720:1833:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"12748:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"nodeType":"IfStatement","src":"12744:20:22","trueBody":{"expression":{"hexValue":"30","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4868,"id":4873,"nodeType":"Return","src":"12756:8:22"}},{"assignments":[4876],"declarations":[{"constant":false,"id":4876,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:22","nodeType":"VariableDeclaration","scope":4954,"src":"13235:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4880,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"13255:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4878,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"13259:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:22"},{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:22","nodeType":"VariableDeclaration","scope":4954,"src":"13274:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4884,"initialValue":{"id":4883,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"13288:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:22"},{"assignments":[4886],"declarations":[{"constant":false,"id":4886,"mutability":"mutable","name":"x","nameLocation":"13432:1:22","nodeType":"VariableDeclaration","scope":4954,"src":"13425:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4885,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4888,"initialValue":{"hexValue":"30","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:22"},{"assignments":[4890],"declarations":[{"constant":false,"id":4890,"mutability":"mutable","name":"y","nameLocation":"13458:1:22","nodeType":"VariableDeclaration","scope":4954,"src":"13451:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4889,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4892,"initialValue":{"hexValue":"31","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:22"},{"body":{"id":4929,"nodeType":"Block","src":"13501:882:22","statements":[{"assignments":[4897],"declarations":[{"constant":false,"id":4897,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:22","nodeType":"VariableDeclaration","scope":4929,"src":"13519:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4901,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"13538:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4899,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"13544:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:22"},{"expression":{"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4902,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"13573:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4903,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"13578:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4904,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4905,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"13678:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"13923:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4907,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"13929:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4908,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"13941:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4913,"nodeType":"ExpressionStatement","src":"13572:395:22"},{"expression":{"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4914,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"13987:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4915,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"13990:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4916,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4917,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"14072:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"14326:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"14330:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4922,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"14341:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4920,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:22","typeDescriptions":{}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4928,"nodeType":"ExpressionStatement","src":"13986:382:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"13485:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4930,"nodeType":"WhileStatement","src":"13478:905:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"14401:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4936,"nodeType":"IfStatement","src":"14397:22:22","trueBody":{"expression":{"hexValue":"30","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4868,"id":4935,"nodeType":"Return","src":"14411:8:22"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"14470:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"14477:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:22","subExpression":{"id":4944,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"14490:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:22","typeDescriptions":{}}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4950,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"14502:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:22","typeDescriptions":{}}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"14462:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4868,"id":4953,"nodeType":"Return","src":"14455:50:22"}]}]},"documentation":{"id":4860,"nodeType":"StructuredDocumentation","src":"12082:553:22","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4956,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:22","nodeType":"FunctionDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"a","nameLocation":"12664:1:22","nodeType":"VariableDeclaration","scope":4956,"src":"12656:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"n","nameLocation":"12675:1:22","nodeType":"VariableDeclaration","scope":4956,"src":"12667:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:22"},"returnParameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4956,"src":"12701:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:22"},"scope":5827,"src":"12640:1919:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"15159:82:22","statements":[{"id":4975,"nodeType":"UncheckedBlock","src":"15169:66:22","statements":[{"expression":{"arguments":[{"id":4968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"15212:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"15215:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4972,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"15222:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4966,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"15200:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5827_$","typeString":"type(library Math)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:22","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"15200:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4965,"id":4974,"nodeType":"Return","src":"15193:31:22"}]}]},"documentation":{"id":4957,"nodeType":"StructuredDocumentation","src":"14565:514:22","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:22","nodeType":"FunctionDefinition","parameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"a","nameLocation":"15113:1:22","nodeType":"VariableDeclaration","scope":4977,"src":"15105:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"p","nameLocation":"15124:1:22","nodeType":"VariableDeclaration","scope":4977,"src":"15116:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:22"},"returnParameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"15150:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:22"},"scope":5827,"src":"15084:157:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"16011:174:22","statements":[{"assignments":[4990,4992],"declarations":[{"constant":false,"id":4990,"mutability":"mutable","name":"success","nameLocation":"16027:7:22","nodeType":"VariableDeclaration","scope":5012,"src":"16022:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4989,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"result","nameLocation":"16044:6:22","nodeType":"VariableDeclaration","scope":5012,"src":"16036:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4998,"initialValue":{"arguments":[{"id":4994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"16064:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4995,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"16067:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4996,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"16070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5037,5119],"referencedDeclaration":5037,"src":"16054:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:22"},{"condition":{"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:22","subExpression":{"id":4999,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"16087:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5009,"nodeType":"IfStatement","src":"16082:74:22","trueBody":{"id":5008,"nodeType":"Block","src":"16096:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5004,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"16122:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"16122:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5001,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"16110:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"16110:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5007,"nodeType":"ExpressionStatement","src":"16110:35:22"}]}},{"expression":{"id":5010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"16172:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4988,"id":5011,"nodeType":"Return","src":"16165:13:22"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"15247:678:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:22","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"b","nameLocation":"15954:1:22","nodeType":"VariableDeclaration","scope":5013,"src":"15946:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4982,"mutability":"mutable","name":"e","nameLocation":"15965:1:22","nodeType":"VariableDeclaration","scope":5013,"src":"15957:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"m","nameLocation":"15976:1:22","nodeType":"VariableDeclaration","scope":5013,"src":"15968:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:22"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"16002:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:22"},"scope":5827,"src":"15930:255:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5036,"nodeType":"Block","src":"17039:1493:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"17053:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5034,"nodeType":"IfStatement","src":"17049:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5026,"id":5033,"nodeType":"Return","src":"17061:17:22"}},{"AST":{"nativeSrc":"17113:1413:22","nodeType":"YulBlock","src":"17113:1413:22","statements":[{"nativeSrc":"17127:22:22","nodeType":"YulVariableDeclaration","src":"17127:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:22","nodeType":"YulLiteral","src":"17144:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:22","nodeType":"YulIdentifier","src":"17138:5:22"},"nativeSrc":"17138:11:22","nodeType":"YulFunctionCall","src":"17138:11:22"},"variables":[{"name":"ptr","nativeSrc":"17131:3:22","nodeType":"YulTypedName","src":"17131:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:22","nodeType":"YulIdentifier","src":"18057:3:22"},{"kind":"number","nativeSrc":"18062:4:22","nodeType":"YulLiteral","src":"18062:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:22","nodeType":"YulIdentifier","src":"18050:6:22"},"nativeSrc":"18050:17:22","nodeType":"YulFunctionCall","src":"18050:17:22"},"nativeSrc":"18050:17:22","nodeType":"YulExpressionStatement","src":"18050:17:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:22","nodeType":"YulIdentifier","src":"18091:3:22"},{"kind":"number","nativeSrc":"18096:4:22","nodeType":"YulLiteral","src":"18096:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:22","nodeType":"YulIdentifier","src":"18087:3:22"},"nativeSrc":"18087:14:22","nodeType":"YulFunctionCall","src":"18087:14:22"},{"kind":"number","nativeSrc":"18103:4:22","nodeType":"YulLiteral","src":"18103:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:22","nodeType":"YulIdentifier","src":"18080:6:22"},"nativeSrc":"18080:28:22","nodeType":"YulFunctionCall","src":"18080:28:22"},"nativeSrc":"18080:28:22","nodeType":"YulExpressionStatement","src":"18080:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:22","nodeType":"YulIdentifier","src":"18132:3:22"},{"kind":"number","nativeSrc":"18137:4:22","nodeType":"YulLiteral","src":"18137:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:22","nodeType":"YulIdentifier","src":"18128:3:22"},"nativeSrc":"18128:14:22","nodeType":"YulFunctionCall","src":"18128:14:22"},{"kind":"number","nativeSrc":"18144:4:22","nodeType":"YulLiteral","src":"18144:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:22","nodeType":"YulIdentifier","src":"18121:6:22"},"nativeSrc":"18121:28:22","nodeType":"YulFunctionCall","src":"18121:28:22"},"nativeSrc":"18121:28:22","nodeType":"YulExpressionStatement","src":"18121:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:22","nodeType":"YulIdentifier","src":"18173:3:22"},{"kind":"number","nativeSrc":"18178:4:22","nodeType":"YulLiteral","src":"18178:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:22","nodeType":"YulIdentifier","src":"18169:3:22"},"nativeSrc":"18169:14:22","nodeType":"YulFunctionCall","src":"18169:14:22"},{"name":"b","nativeSrc":"18185:1:22","nodeType":"YulIdentifier","src":"18185:1:22"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:22","nodeType":"YulIdentifier","src":"18162:6:22"},"nativeSrc":"18162:25:22","nodeType":"YulFunctionCall","src":"18162:25:22"},"nativeSrc":"18162:25:22","nodeType":"YulExpressionStatement","src":"18162:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:22","nodeType":"YulIdentifier","src":"18211:3:22"},{"kind":"number","nativeSrc":"18216:4:22","nodeType":"YulLiteral","src":"18216:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:22","nodeType":"YulIdentifier","src":"18207:3:22"},"nativeSrc":"18207:14:22","nodeType":"YulFunctionCall","src":"18207:14:22"},{"name":"e","nativeSrc":"18223:1:22","nodeType":"YulIdentifier","src":"18223:1:22"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:22","nodeType":"YulIdentifier","src":"18200:6:22"},"nativeSrc":"18200:25:22","nodeType":"YulFunctionCall","src":"18200:25:22"},"nativeSrc":"18200:25:22","nodeType":"YulExpressionStatement","src":"18200:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:22","nodeType":"YulIdentifier","src":"18249:3:22"},{"kind":"number","nativeSrc":"18254:4:22","nodeType":"YulLiteral","src":"18254:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:22","nodeType":"YulIdentifier","src":"18245:3:22"},"nativeSrc":"18245:14:22","nodeType":"YulFunctionCall","src":"18245:14:22"},{"name":"m","nativeSrc":"18261:1:22","nodeType":"YulIdentifier","src":"18261:1:22"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:22","nodeType":"YulIdentifier","src":"18238:6:22"},"nativeSrc":"18238:25:22","nodeType":"YulFunctionCall","src":"18238:25:22"},"nativeSrc":"18238:25:22","nodeType":"YulExpressionStatement","src":"18238:25:22"},{"nativeSrc":"18425:57:22","nodeType":"YulAssignment","src":"18425:57:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:22","nodeType":"YulIdentifier","src":"18447:3:22"},"nativeSrc":"18447:5:22","nodeType":"YulFunctionCall","src":"18447:5:22"},{"kind":"number","nativeSrc":"18454:4:22","nodeType":"YulLiteral","src":"18454:4:22","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:22","nodeType":"YulIdentifier","src":"18460:3:22"},{"kind":"number","nativeSrc":"18465:4:22","nodeType":"YulLiteral","src":"18465:4:22","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:22","nodeType":"YulLiteral","src":"18471:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:22","nodeType":"YulLiteral","src":"18477:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:22","nodeType":"YulIdentifier","src":"18436:10:22"},"nativeSrc":"18436:46:22","nodeType":"YulFunctionCall","src":"18436:46:22"},"variableNames":[{"name":"success","nativeSrc":"18425:7:22","nodeType":"YulIdentifier","src":"18425:7:22"}]},{"nativeSrc":"18495:21:22","nodeType":"YulAssignment","src":"18495:21:22","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:22","nodeType":"YulLiteral","src":"18511:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:22","nodeType":"YulIdentifier","src":"18505:5:22"},"nativeSrc":"18505:11:22","nodeType":"YulFunctionCall","src":"18505:11:22"},"variableNames":[{"name":"result","nativeSrc":"18495:6:22","nodeType":"YulIdentifier","src":"18495:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5016,"isOffset":false,"isSlot":false,"src":"18185:1:22","valueSize":1},{"declaration":5018,"isOffset":false,"isSlot":false,"src":"18223:1:22","valueSize":1},{"declaration":5020,"isOffset":false,"isSlot":false,"src":"18261:1:22","valueSize":1},{"declaration":5025,"isOffset":false,"isSlot":false,"src":"18495:6:22","valueSize":1},{"declaration":5023,"isOffset":false,"isSlot":false,"src":"18425:7:22","valueSize":1}],"flags":["memory-safe"],"id":5035,"nodeType":"InlineAssembly","src":"17088:1438:22"}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"16191:738:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5037,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:22","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"b","nameLocation":"16961:1:22","nodeType":"VariableDeclaration","scope":5037,"src":"16953:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5018,"mutability":"mutable","name":"e","nameLocation":"16972:1:22","nodeType":"VariableDeclaration","scope":5037,"src":"16964:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5020,"mutability":"mutable","name":"m","nameLocation":"16983:1:22","nodeType":"VariableDeclaration","scope":5037,"src":"16975:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:22"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"success","nameLocation":"17014:7:22","nodeType":"VariableDeclaration","scope":5037,"src":"17009:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5022,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5025,"mutability":"mutable","name":"result","nameLocation":"17031:6:22","nodeType":"VariableDeclaration","scope":5037,"src":"17023:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:22"},"scope":5827,"src":"16934:1598:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5072,"nodeType":"Block","src":"18729:179:22","statements":[{"assignments":[5050,5052],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"success","nameLocation":"18745:7:22","nodeType":"VariableDeclaration","scope":5072,"src":"18740:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5049,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"result","nameLocation":"18767:6:22","nodeType":"VariableDeclaration","scope":5072,"src":"18754:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5051,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5058,"initialValue":{"arguments":[{"id":5054,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"18787:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5055,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"18790:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5056,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"18793:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5053,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5037,5119],"referencedDeclaration":5119,"src":"18777:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:22"},{"condition":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:22","subExpression":{"id":5059,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"18810:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"18805:74:22","trueBody":{"id":5068,"nodeType":"Block","src":"18819:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5064,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"18845:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"18845:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5061,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"18833:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2768_$","typeString":"type(library Panic)"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"18833:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"ExpressionStatement","src":"18833:35:22"}]}},{"expression":{"id":5070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"18895:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5048,"id":5071,"nodeType":"Return","src":"18888:13:22"}]},"documentation":{"id":5038,"nodeType":"StructuredDocumentation","src":"18538:85:22","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5073,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:22","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"b","nameLocation":"18657:1:22","nodeType":"VariableDeclaration","scope":5073,"src":"18644:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5039,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5042,"mutability":"mutable","name":"e","nameLocation":"18673:1:22","nodeType":"VariableDeclaration","scope":5073,"src":"18660:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5041,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5044,"mutability":"mutable","name":"m","nameLocation":"18689:1:22","nodeType":"VariableDeclaration","scope":5073,"src":"18676:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5043,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:22"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5073,"src":"18715:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5046,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:22"},"scope":5827,"src":"18628:280:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5118,"nodeType":"Block","src":"19162:771:22","statements":[{"condition":{"arguments":[{"id":5088,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"19187:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5087,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"19176:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"nodeType":"IfStatement","src":"19172:47:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5091,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5086,"id":5096,"nodeType":"Return","src":"19191:28:22"}},{"assignments":[5099],"declarations":[{"constant":false,"id":5099,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:22","nodeType":"VariableDeclaration","scope":5118,"src":"19230:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5102,"initialValue":{"expression":{"id":5100,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"19245:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:22","memberName":"length","nodeType":"MemberAccess","src":"19245:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:22"},{"expression":{"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"19335:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5106,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"19361:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:22","memberName":"length","nodeType":"MemberAccess","src":"19361:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5108,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"19371:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:22","memberName":"length","nodeType":"MemberAccess","src":"19371:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5110,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"19381:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"19387:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5112,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"19390:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5113,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"19393:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5104,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5116,"nodeType":"ExpressionStatement","src":"19335:60:22"},{"AST":{"nativeSrc":"19431:496:22","nodeType":"YulBlock","src":"19431:496:22","statements":[{"nativeSrc":"19445:32:22","nodeType":"YulVariableDeclaration","src":"19445:32:22","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:22","nodeType":"YulIdentifier","src":"19464:6:22"},{"kind":"number","nativeSrc":"19472:4:22","nodeType":"YulLiteral","src":"19472:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:22","nodeType":"YulIdentifier","src":"19460:3:22"},"nativeSrc":"19460:17:22","nodeType":"YulFunctionCall","src":"19460:17:22"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:22","nodeType":"YulTypedName","src":"19449:7:22","type":""}]},{"nativeSrc":"19567:73:22","nodeType":"YulAssignment","src":"19567:73:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:22","nodeType":"YulIdentifier","src":"19589:3:22"},"nativeSrc":"19589:5:22","nodeType":"YulFunctionCall","src":"19589:5:22"},{"kind":"number","nativeSrc":"19596:4:22","nodeType":"YulLiteral","src":"19596:4:22","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:22","nodeType":"YulIdentifier","src":"19602:7:22"},{"arguments":[{"name":"result","nativeSrc":"19617:6:22","nodeType":"YulIdentifier","src":"19617:6:22"}],"functionName":{"name":"mload","nativeSrc":"19611:5:22","nodeType":"YulIdentifier","src":"19611:5:22"},"nativeSrc":"19611:13:22","nodeType":"YulFunctionCall","src":"19611:13:22"},{"name":"dataPtr","nativeSrc":"19626:7:22","nodeType":"YulIdentifier","src":"19626:7:22"},{"name":"mLen","nativeSrc":"19635:4:22","nodeType":"YulIdentifier","src":"19635:4:22"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:22","nodeType":"YulIdentifier","src":"19578:10:22"},"nativeSrc":"19578:62:22","nodeType":"YulFunctionCall","src":"19578:62:22"},"variableNames":[{"name":"success","nativeSrc":"19567:7:22","nodeType":"YulIdentifier","src":"19567:7:22"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:22","nodeType":"YulIdentifier","src":"19796:6:22"},{"name":"mLen","nativeSrc":"19804:4:22","nodeType":"YulIdentifier","src":"19804:4:22"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:22","nodeType":"YulIdentifier","src":"19789:6:22"},"nativeSrc":"19789:20:22","nodeType":"YulFunctionCall","src":"19789:20:22"},"nativeSrc":"19789:20:22","nodeType":"YulExpressionStatement","src":"19789:20:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:22","nodeType":"YulLiteral","src":"19892:4:22","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:22","nodeType":"YulIdentifier","src":"19902:7:22"},{"name":"mLen","nativeSrc":"19911:4:22","nodeType":"YulIdentifier","src":"19911:4:22"}],"functionName":{"name":"add","nativeSrc":"19898:3:22","nodeType":"YulIdentifier","src":"19898:3:22"},"nativeSrc":"19898:18:22","nodeType":"YulFunctionCall","src":"19898:18:22"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:22","nodeType":"YulIdentifier","src":"19885:6:22"},"nativeSrc":"19885:32:22","nodeType":"YulFunctionCall","src":"19885:32:22"},"nativeSrc":"19885:32:22","nodeType":"YulExpressionStatement","src":"19885:32:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":5099,"isOffset":false,"isSlot":false,"src":"19635:4:22","valueSize":1},{"declaration":5099,"isOffset":false,"isSlot":false,"src":"19804:4:22","valueSize":1},{"declaration":5099,"isOffset":false,"isSlot":false,"src":"19911:4:22","valueSize":1},{"declaration":5085,"isOffset":false,"isSlot":false,"src":"19464:6:22","valueSize":1},{"declaration":5085,"isOffset":false,"isSlot":false,"src":"19617:6:22","valueSize":1},{"declaration":5085,"isOffset":false,"isSlot":false,"src":"19796:6:22","valueSize":1},{"declaration":5083,"isOffset":false,"isSlot":false,"src":"19567:7:22","valueSize":1}],"flags":["memory-safe"],"id":5117,"nodeType":"InlineAssembly","src":"19406:521:22"}]},"documentation":{"id":5074,"nodeType":"StructuredDocumentation","src":"18914:88:22","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:22","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"b","nameLocation":"19048:1:22","nodeType":"VariableDeclaration","scope":5119,"src":"19035:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5075,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"e","nameLocation":"19072:1:22","nodeType":"VariableDeclaration","scope":5119,"src":"19059:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5077,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5080,"mutability":"mutable","name":"m","nameLocation":"19096:1:22","nodeType":"VariableDeclaration","scope":5119,"src":"19083:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5079,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:22"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"success","nameLocation":"19132:7:22","nodeType":"VariableDeclaration","scope":5119,"src":"19127:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5082,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"result","nameLocation":"19154:6:22","nodeType":"VariableDeclaration","scope":5119,"src":"19141:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5084,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:22"},"scope":5827,"src":"19007:926:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5151,"nodeType":"Block","src":"20088:176:22","statements":[{"body":{"id":5147,"nodeType":"Block","src":"20145:92:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5138,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"20163:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5140,"indexExpression":{"id":5139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"20173:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5146,"nodeType":"IfStatement","src":"20159:68:22","trueBody":{"id":5145,"nodeType":"Block","src":"20182:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5126,"id":5144,"nodeType":"Return","src":"20200:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"20118:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5132,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"20122:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:22","memberName":"length","nodeType":"MemberAccess","src":"20122:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5148,"initializationExpression":{"assignments":[5128],"declarations":[{"constant":false,"id":5128,"mutability":"mutable","name":"i","nameLocation":"20111:1:22","nodeType":"VariableDeclaration","scope":5148,"src":"20103:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5130,"initialValue":{"hexValue":"30","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:22","subExpression":{"id":5135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"20142:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5137,"nodeType":"ExpressionStatement","src":"20140:3:22"},"nodeType":"ForStatement","src":"20098:139:22"},{"expression":{"hexValue":"74727565","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5126,"id":5150,"nodeType":"Return","src":"20246:11:22"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"19939:72:22","text":" @dev Returns whether the provided byte array is zero."},"id":5152,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:22","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:22","nodeType":"VariableDeclaration","scope":5152,"src":"20036:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5121,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:22"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5152,"src":"20082:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5124,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:22"},"scope":5827,"src":"20016:248:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5370,"nodeType":"Block","src":"20624:5124:22","statements":[{"id":5369,"nodeType":"UncheckedBlock","src":"20634:5108:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"20728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5166,"nodeType":"IfStatement","src":"20724:53:22","trueBody":{"id":5165,"nodeType":"Block","src":"20736:41:22","statements":[{"expression":{"id":5163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"20761:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5159,"id":5164,"nodeType":"Return","src":"20754:8:22"}]}},{"assignments":[5168],"declarations":[{"constant":false,"id":5168,"mutability":"mutable","name":"aa","nameLocation":"21712:2:22","nodeType":"VariableDeclaration","scope":5369,"src":"21704:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5167,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5170,"initialValue":{"id":5169,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"21717:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:22"},{"assignments":[5172],"declarations":[{"constant":false,"id":5172,"mutability":"mutable","name":"xn","nameLocation":"21740:2:22","nodeType":"VariableDeclaration","scope":5369,"src":"21732:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5174,"initialValue":{"hexValue":"31","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"21765:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5190,"nodeType":"IfStatement","src":"21761:92:22","trueBody":{"id":5189,"nodeType":"Block","src":"21783:70:22","statements":[{"expression":{"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"21801:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5184,"nodeType":"ExpressionStatement","src":"21801:10:22"},{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"21829:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"21829:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"21870:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5206,"nodeType":"IfStatement","src":"21866:90:22","trueBody":{"id":5205,"nodeType":"Block","src":"21887:69:22","statements":[{"expression":{"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5197,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"21905:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5200,"nodeType":"ExpressionStatement","src":"21905:9:22"},{"expression":{"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5201,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"21932:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5204,"nodeType":"ExpressionStatement","src":"21932:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"21973:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"21969:90:22","trueBody":{"id":5221,"nodeType":"Block","src":"21990:69:22","statements":[{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5213,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22008:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5216,"nodeType":"ExpressionStatement","src":"22008:9:22"},{"expression":{"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5217,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22035:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5220,"nodeType":"ExpressionStatement","src":"22035:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22076:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5238,"nodeType":"IfStatement","src":"22072:89:22","trueBody":{"id":5237,"nodeType":"Block","src":"22093:68:22","statements":[{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5229,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22111:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5232,"nodeType":"ExpressionStatement","src":"22111:9:22"},{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5233,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22138:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"nodeType":"ExpressionStatement","src":"22138:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22178:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5254,"nodeType":"IfStatement","src":"22174:87:22","trueBody":{"id":5253,"nodeType":"Block","src":"22194:67:22","statements":[{"expression":{"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22212:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5248,"nodeType":"ExpressionStatement","src":"22212:8:22"},{"expression":{"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5249,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22238:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5252,"nodeType":"ExpressionStatement","src":"22238:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22278:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5270,"nodeType":"IfStatement","src":"22274:87:22","trueBody":{"id":5269,"nodeType":"Block","src":"22294:67:22","statements":[{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22312:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ExpressionStatement","src":"22312:8:22"},{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22338:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5268,"nodeType":"ExpressionStatement","src":"22338:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5271,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"22378:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5282,"nodeType":"IfStatement","src":"22374:61:22","trueBody":{"id":5281,"nodeType":"Block","src":"22394:41:22","statements":[{"expression":{"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22412:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5280,"nodeType":"ExpressionStatement","src":"22412:8:22"}]}},{"expression":{"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5283,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22855:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5285,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"22865:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5291,"nodeType":"ExpressionStatement","src":"22855:18:22"},{"expression":{"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5292,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24760:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24766:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"24771:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5295,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24775:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5302,"nodeType":"ExpressionStatement","src":"24760:23:22"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5303,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24869:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5304,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24875:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"24880:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24884:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"24869:23:22"},{"expression":{"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24980:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24986:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"24991:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5317,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24995:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5324,"nodeType":"ExpressionStatement","src":"24980:23:22"},{"expression":{"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5325,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25089:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25095:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"25100:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5328,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25104:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5335,"nodeType":"ExpressionStatement","src":"25089:23:22"},{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25199:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25205:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"25210:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25214:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"25199:23:22"},{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5347,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25309:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25315:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"25320:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25324:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"25309:23:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5358,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25698:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25719:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"25724:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5363,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"25728:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5359,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"25703:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"25703:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5159,"id":5368,"nodeType":"Return","src":"25691:40:22"}]}]},"documentation":{"id":5153,"nodeType":"StructuredDocumentation","src":"20270:292:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:22","nodeType":"FunctionDefinition","parameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"a","nameLocation":"20589:1:22","nodeType":"VariableDeclaration","scope":5371,"src":"20581:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5154,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:22"},"returnParameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"20615:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:22"},"scope":5827,"src":"20567:5181:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"25921:171:22","statements":[{"id":5403,"nodeType":"UncheckedBlock","src":"25931:155:22","statements":[{"assignments":[5383],"declarations":[{"constant":false,"id":5383,"mutability":"mutable","name":"result","nameLocation":"25963:6:22","nodeType":"VariableDeclaration","scope":5403,"src":"25955:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5387,"initialValue":{"arguments":[{"id":5385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"25977:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5384,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5371,5405],"referencedDeclaration":5371,"src":"25972:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"26000:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5392,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"26042:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":5391,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"26025:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4218_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"26055:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"26064:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"26073:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5389,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26009:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26009:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5381,"id":5402,"nodeType":"Return","src":"25993:82:22"}]}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"25754:86:22","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:22","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"a","nameLocation":"25867:1:22","nodeType":"VariableDeclaration","scope":5405,"src":"25859:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5377,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:22","nodeType":"VariableDeclaration","scope":5405,"src":"25870:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":5376,"nodeType":"UserDefinedTypeName","pathNode":{"id":5375,"name":"Rounding","nameLocations":["25870:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"25870:8:22"},"referencedDeclaration":4218,"src":"25870:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:22"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5405,"src":"25912:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:22"},"scope":5827,"src":"25845:247:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"26281:2334:22","statements":[{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26363:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5416,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26383:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5414,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26367:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26367:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5423,"nodeType":"ExpressionStatement","src":"26363:64:22"},{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5424,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26503:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5427,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26525:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5428,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26530:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5425,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26508:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26508:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5437,"nodeType":"ExpressionStatement","src":"26503:56:22"},{"expression":{"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5438,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26634:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26656:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5442,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26661:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5439,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26639:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26639:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5451,"nodeType":"ExpressionStatement","src":"26634:48:22"},{"expression":{"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5452,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26757:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26779:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5456,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26784:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5453,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26762:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26762:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5465,"nodeType":"ExpressionStatement","src":"26757:44:22"},{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5466,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26874:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26896:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5470,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26901:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5467,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26879:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26879:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5479,"nodeType":"ExpressionStatement","src":"26874:42:22"},{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5480,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26988:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"27010:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5484,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"27015:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"26993:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"26993:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"nodeType":"ExpressionStatement","src":"26988:41:22"},{"AST":{"nativeSrc":"28490:119:22","nodeType":"YulBlock","src":"28490:119:22","statements":[{"nativeSrc":"28504:95:22","nodeType":"YulAssignment","src":"28504:95:22","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:22","nodeType":"YulIdentifier","src":"28512:1:22"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:22","nodeType":"YulIdentifier","src":"28524:1:22"},{"name":"x","nativeSrc":"28527:1:22","nodeType":"YulIdentifier","src":"28527:1:22"}],"functionName":{"name":"shr","nativeSrc":"28520:3:22","nodeType":"YulIdentifier","src":"28520:3:22"},"nativeSrc":"28520:9:22","nodeType":"YulFunctionCall","src":"28520:9:22"},{"kind":"number","nativeSrc":"28531:66:22","nodeType":"YulLiteral","src":"28531:66:22","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:22","nodeType":"YulIdentifier","src":"28515:4:22"},"nativeSrc":"28515:83:22","nodeType":"YulFunctionCall","src":"28515:83:22"}],"functionName":{"name":"or","nativeSrc":"28509:2:22","nodeType":"YulIdentifier","src":"28509:2:22"},"nativeSrc":"28509:90:22","nodeType":"YulFunctionCall","src":"28509:90:22"},"variableNames":[{"name":"r","nativeSrc":"28504:1:22","nodeType":"YulIdentifier","src":"28504:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5411,"isOffset":false,"isSlot":false,"src":"28504:1:22","valueSize":1},{"declaration":5411,"isOffset":false,"isSlot":false,"src":"28512:1:22","valueSize":1},{"declaration":5411,"isOffset":false,"isSlot":false,"src":"28524:1:22","valueSize":1},{"declaration":5408,"isOffset":false,"isSlot":false,"src":"28527:1:22","valueSize":1}],"flags":["memory-safe"],"id":5494,"nodeType":"InlineAssembly","src":"28465:144:22"}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"26098:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:22","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"x","nameLocation":"26244:1:22","nodeType":"VariableDeclaration","scope":5496,"src":"26236:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:22"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"r","nameLocation":"26278:1:22","nodeType":"VariableDeclaration","scope":5496,"src":"26270:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5410,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:22"},"scope":5827,"src":"26222:2393:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5529,"nodeType":"Block","src":"28848:175:22","statements":[{"id":5528,"nodeType":"UncheckedBlock","src":"28858:159:22","statements":[{"assignments":[5508],"declarations":[{"constant":false,"id":5508,"mutability":"mutable","name":"result","nameLocation":"28890:6:22","nodeType":"VariableDeclaration","scope":5528,"src":"28882:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5512,"initialValue":{"arguments":[{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"28904:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5496,5530],"referencedDeclaration":5496,"src":"28899:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"28931:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5517,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"28973:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":5516,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"28956:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4218_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"28991:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"29000:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5514,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"28940:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"28940:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5506,"id":5527,"nodeType":"Return","src":"28924:82:22"}]}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"28621:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5530,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:22","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"value","nameLocation":"28790:5:22","nodeType":"VariableDeclaration","scope":5530,"src":"28782:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:22","nodeType":"VariableDeclaration","scope":5530,"src":"28797:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":5501,"nodeType":"UserDefinedTypeName","pathNode":{"id":5500,"name":"Rounding","nameLocations":["28797:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"28797:8:22"},"referencedDeclaration":4218,"src":"28797:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:22"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5530,"src":"28839:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:22"},"scope":5827,"src":"28768:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5658,"nodeType":"Block","src":"29216:854:22","statements":[{"assignments":[5539],"declarations":[{"constant":false,"id":5539,"mutability":"mutable","name":"result","nameLocation":"29234:6:22","nodeType":"VariableDeclaration","scope":5658,"src":"29226:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5541,"initialValue":{"hexValue":"30","id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:22"},{"id":5655,"nodeType":"UncheckedBlock","src":"29254:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29282:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5558,"nodeType":"IfStatement","src":"29278:103:22","trueBody":{"id":5557,"nodeType":"Block","src":"29301:80:22","statements":[{"expression":{"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29319:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5552,"nodeType":"ExpressionStatement","src":"29319:17:22"},{"expression":{"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"29354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5556,"nodeType":"ExpressionStatement","src":"29354:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29398:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5575,"nodeType":"IfStatement","src":"29394:103:22","trueBody":{"id":5574,"nodeType":"Block","src":"29417:80:22","statements":[{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29435:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"nodeType":"ExpressionStatement","src":"29435:17:22"},{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"29470:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"29470:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29514:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5592,"nodeType":"IfStatement","src":"29510:103:22","trueBody":{"id":5591,"nodeType":"Block","src":"29533:80:22","statements":[{"expression":{"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29551:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5586,"nodeType":"ExpressionStatement","src":"29551:17:22"},{"expression":{"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"29586:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5590,"nodeType":"ExpressionStatement","src":"29586:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29630:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5609,"nodeType":"IfStatement","src":"29626:100:22","trueBody":{"id":5608,"nodeType":"Block","src":"29648:78:22","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29666:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ExpressionStatement","src":"29666:16:22"},{"expression":{"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"29700:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5607,"nodeType":"ExpressionStatement","src":"29700:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5626,"nodeType":"IfStatement","src":"29739:100:22","trueBody":{"id":5625,"nodeType":"Block","src":"29761:78:22","statements":[{"expression":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29779:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5620,"nodeType":"ExpressionStatement","src":"29779:16:22"},{"expression":{"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"29813:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5624,"nodeType":"ExpressionStatement","src":"29813:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29856:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5643,"nodeType":"IfStatement","src":"29852:100:22","trueBody":{"id":5642,"nodeType":"Block","src":"29874:78:22","statements":[{"expression":{"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29892:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5637,"nodeType":"ExpressionStatement","src":"29892:16:22"},{"expression":{"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"29926:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5641,"nodeType":"ExpressionStatement","src":"29926:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"29969:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"29965:66:22","trueBody":{"id":5653,"nodeType":"Block","src":"29987:44:22","statements":[{"expression":{"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"30005:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5652,"nodeType":"ExpressionStatement","src":"30005:11:22"}]}}]},{"expression":{"id":5656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"30057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5537,"id":5657,"nodeType":"Return","src":"30050:13:22"}]},"documentation":{"id":5531,"nodeType":"StructuredDocumentation","src":"29029:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5659,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:22","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"value","nameLocation":"29177:5:22","nodeType":"VariableDeclaration","scope":5659,"src":"29169:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:22"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5659,"src":"29207:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:22"},"scope":5827,"src":"29154:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"30305:177:22","statements":[{"id":5691,"nodeType":"UncheckedBlock","src":"30315:161:22","statements":[{"assignments":[5671],"declarations":[{"constant":false,"id":5671,"mutability":"mutable","name":"result","nameLocation":"30347:6:22","nodeType":"VariableDeclaration","scope":5691,"src":"30339:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5675,"initialValue":{"arguments":[{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5672,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5659,5693],"referencedDeclaration":5659,"src":"30356:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"30389:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5680,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"30431:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":5679,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"30414:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4218_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"30450:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"30459:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5677,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"30398:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"30398:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5669,"id":5690,"nodeType":"Return","src":"30382:83:22"}]}]},"documentation":{"id":5660,"nodeType":"StructuredDocumentation","src":"30076:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:22","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"value","nameLocation":"30247:5:22","nodeType":"VariableDeclaration","scope":5693,"src":"30239:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5665,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:22","nodeType":"VariableDeclaration","scope":5693,"src":"30254:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":5664,"nodeType":"UserDefinedTypeName","pathNode":{"id":5663,"name":"Rounding","nameLocations":["30254:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"30254:8:22"},"referencedDeclaration":4218,"src":"30254:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:22"},"returnParameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5693,"src":"30296:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:22"},"scope":5827,"src":"30224:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5769,"nodeType":"Block","src":"30800:675:22","statements":[{"expression":{"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5701,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"30882:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"30902:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5702,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"30886:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"30886:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5711,"nodeType":"ExpressionStatement","src":"30882:64:22"},{"expression":{"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5712,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31022:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"31044:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5716,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31049:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5713,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"31027:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"31027:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5725,"nodeType":"ExpressionStatement","src":"31022:56:22"},{"expression":{"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5726,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31153:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5729,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"31175:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5730,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31180:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5727,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"31158:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"31158:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5739,"nodeType":"ExpressionStatement","src":"31153:48:22"},{"expression":{"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5740,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31276:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"31298:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5744,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31303:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5741,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"31281:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"31281:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5753,"nodeType":"ExpressionStatement","src":"31276:44:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31426:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5760,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"31453:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5761,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31458:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"31436:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"31436:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5700,"id":5768,"nodeType":"Return","src":"31418:50:22"}]},"documentation":{"id":5694,"nodeType":"StructuredDocumentation","src":"30488:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5770,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:22","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"x","nameLocation":"30763:1:22","nodeType":"VariableDeclaration","scope":5770,"src":"30755:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:22"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"r","nameLocation":"30797:1:22","nodeType":"VariableDeclaration","scope":5770,"src":"30789:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:22"},"scope":5827,"src":"30739:736:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5806,"nodeType":"Block","src":"31712:184:22","statements":[{"id":5805,"nodeType":"UncheckedBlock","src":"31722:168:22","statements":[{"assignments":[5782],"declarations":[{"constant":false,"id":5782,"mutability":"mutable","name":"result","nameLocation":"31754:6:22","nodeType":"VariableDeclaration","scope":5805,"src":"31746:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5786,"initialValue":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"31770:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5783,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5770,5807],"referencedDeclaration":5770,"src":"31763:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"31797:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5791,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31839:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":5790,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"31822:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4218_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"31873:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5788,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"31806:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"31806:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5780,"id":5804,"nodeType":"Return","src":"31790:89:22"}]}]},"documentation":{"id":5771,"nodeType":"StructuredDocumentation","src":"31481:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:22","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"value","nameLocation":"31654:5:22","nodeType":"VariableDeclaration","scope":5807,"src":"31646:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5776,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:22","nodeType":"VariableDeclaration","scope":5807,"src":"31661:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":5775,"nodeType":"UserDefinedTypeName","pathNode":{"id":5774,"name":"Rounding","nameLocations":["31661:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"31661:8:22"},"referencedDeclaration":4218,"src":"31661:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:22"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5807,"src":"31703:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5778,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:22"},"scope":5827,"src":"31630:266:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"32094:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5818,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"32117:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}],"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5816,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:22","typeDescriptions":{}}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5815,"id":5824,"nodeType":"Return","src":"32104:31:22"}]},"documentation":{"id":5808,"nodeType":"StructuredDocumentation","src":"31902:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:22","nodeType":"FunctionDefinition","parameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:22","nodeType":"VariableDeclaration","scope":5826,"src":"32046:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"},"typeName":{"id":5810,"nodeType":"UserDefinedTypeName","pathNode":{"id":5809,"name":"Rounding","nameLocations":["32046:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4218,"src":"32046:8:22"},"referencedDeclaration":4218,"src":"32046:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4218","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:22"},"returnParameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5826,"src":"32088:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5813,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:22"},"scope":5827,"src":"32020:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5828,"src":"281:31863:22","usedErrors":[],"usedEvents":[]}],"src":"103:32042:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7592]},"id":7593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5829,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"218:550:23","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7592,"linearizedBaseContracts":[7592],"name":"SafeCast","nameLocation":"777:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5831,"nodeType":"StructuredDocumentation","src":"792:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5837,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:23","nodeType":"ErrorDefinition","parameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"mutability":"mutable","name":"bits","nameLocation":"908:4:23","nodeType":"VariableDeclaration","scope":5837,"src":"902:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5832,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5835,"mutability":"mutable","name":"value","nameLocation":"922:5:23","nodeType":"VariableDeclaration","scope":5837,"src":"914:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:23"},"src":"865:64:23"},{"documentation":{"id":5838,"nodeType":"StructuredDocumentation","src":"935:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5842,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:23","nodeType":"ErrorDefinition","parameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"value","nameLocation":"1056:5:23","nodeType":"VariableDeclaration","scope":5842,"src":"1049:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5839,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:23"},"src":"1015:48:23"},{"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"1069:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5849,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:23","nodeType":"ErrorDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"bits","nameLocation":"1183:4:23","nodeType":"VariableDeclaration","scope":5849,"src":"1177:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5844,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5847,"mutability":"mutable","name":"value","nameLocation":"1196:5:23","nodeType":"VariableDeclaration","scope":5849,"src":"1189:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5846,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:23"},"src":"1141:62:23"},{"documentation":{"id":5850,"nodeType":"StructuredDocumentation","src":"1209:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5854,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:23","nodeType":"ErrorDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"value","nameLocation":"1331:5:23","nodeType":"VariableDeclaration","scope":5854,"src":"1323:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:23"},"src":"1289:49:23"},{"body":{"id":5881,"nodeType":"Block","src":"1695:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"1709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5864,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:23","memberName":"max","nodeType":"MemberAccess","src":"1717:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"1705:105:23","trueBody":{"id":5874,"nodeType":"Block","src":"1736:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"1793:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"1757:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5873,"nodeType":"RevertStatement","src":"1750:49:23"}]}},{"expression":{"arguments":[{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5876,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:23","typeDescriptions":{}}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5861,"id":5880,"nodeType":"Return","src":"1819:21:23"}]},"documentation":{"id":5855,"nodeType":"StructuredDocumentation","src":"1344:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5882,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:23","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"value","nameLocation":"1656:5:23","nodeType":"VariableDeclaration","scope":5882,"src":"1648:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:23"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5882,"src":"1686:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5859,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:23"},"scope":7592,"src":"1629:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5909,"nodeType":"Block","src":"2204:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"2218:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5892,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:23","memberName":"max","nodeType":"MemberAccess","src":"2226:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5903,"nodeType":"IfStatement","src":"2214:105:23","trueBody":{"id":5902,"nodeType":"Block","src":"2245:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"2302:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5897,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2266:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5901,"nodeType":"RevertStatement","src":"2259:49:23"}]}},{"expression":{"arguments":[{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"2343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5904,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:23","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5889,"id":5908,"nodeType":"Return","src":"2328:21:23"}]},"documentation":{"id":5883,"nodeType":"StructuredDocumentation","src":"1853:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:23","nodeType":"FunctionDefinition","parameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"value","nameLocation":"2165:5:23","nodeType":"VariableDeclaration","scope":5910,"src":"2157:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:23"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5910,"src":"2195:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5887,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:23"},"scope":7592,"src":"2138:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"2713:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"2727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5920,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:23","memberName":"max","nodeType":"MemberAccess","src":"2735:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5931,"nodeType":"IfStatement","src":"2723:105:23","trueBody":{"id":5930,"nodeType":"Block","src":"2754:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"2811:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2775:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5929,"nodeType":"RevertStatement","src":"2768:49:23"}]}},{"expression":{"arguments":[{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"2852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5932,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:23","typeDescriptions":{}}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5917,"id":5936,"nodeType":"Return","src":"2837:21:23"}]},"documentation":{"id":5911,"nodeType":"StructuredDocumentation","src":"2362:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":5914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"value","nameLocation":"2674:5:23","nodeType":"VariableDeclaration","scope":5938,"src":"2666:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:23"},"returnParameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5938,"src":"2704:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5915,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:23"},"scope":7592,"src":"2647:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5965,"nodeType":"Block","src":"3222:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"3236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5948,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:23","memberName":"max","nodeType":"MemberAccess","src":"3244:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5959,"nodeType":"IfStatement","src":"3232:105:23","trueBody":{"id":5958,"nodeType":"Block","src":"3263:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"3320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5953,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"3284:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5957,"nodeType":"RevertStatement","src":"3277:49:23"}]}},{"expression":{"arguments":[{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"3361:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5960,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:23","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5945,"id":5964,"nodeType":"Return","src":"3346:21:23"}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"2871:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:23","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"3183:5:23","nodeType":"VariableDeclaration","scope":5966,"src":"3175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:23"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5966,"src":"3213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5943,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:23"},"scope":7592,"src":"3156:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5993,"nodeType":"Block","src":"3731:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5976,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5975,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:23","memberName":"max","nodeType":"MemberAccess","src":"3753:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5987,"nodeType":"IfStatement","src":"3741:105:23","trueBody":{"id":5986,"nodeType":"Block","src":"3772:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"3829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5981,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"3793:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5985,"nodeType":"RevertStatement","src":"3786:49:23"}]}},{"expression":{"arguments":[{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5988,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:23","typeDescriptions":{}}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5973,"id":5992,"nodeType":"Return","src":"3855:21:23"}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"3380:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:23","nodeType":"FunctionDefinition","parameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"value","nameLocation":"3692:5:23","nodeType":"VariableDeclaration","scope":5994,"src":"3684:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:23"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5994,"src":"3722:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5971,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:23"},"scope":7592,"src":"3665:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6021,"nodeType":"Block","src":"4240:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"4254:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6004,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6003,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:23","memberName":"max","nodeType":"MemberAccess","src":"4262:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6015,"nodeType":"IfStatement","src":"4250:105:23","trueBody":{"id":6014,"nodeType":"Block","src":"4281:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6009,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"4302:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6013,"nodeType":"RevertStatement","src":"4295:49:23"}]}},{"expression":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"4379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6016,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:23","typeDescriptions":{}}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6001,"id":6020,"nodeType":"Return","src":"4364:21:23"}]},"documentation":{"id":5995,"nodeType":"StructuredDocumentation","src":"3889:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:23","nodeType":"FunctionDefinition","parameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"value","nameLocation":"4201:5:23","nodeType":"VariableDeclaration","scope":6022,"src":"4193:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:23"},"returnParameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6022,"src":"4231:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5999,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:23"},"scope":7592,"src":"4174:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"4749:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"4763:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6032,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6031,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:23","memberName":"max","nodeType":"MemberAccess","src":"4771:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"nodeType":"IfStatement","src":"4759:105:23","trueBody":{"id":6042,"nodeType":"Block","src":"4790:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"4847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6037,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"4811:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6041,"nodeType":"RevertStatement","src":"4804:49:23"}]}},{"expression":{"arguments":[{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"4888:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6044,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:23","typeDescriptions":{}}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6029,"id":6048,"nodeType":"Return","src":"4873:21:23"}]},"documentation":{"id":6023,"nodeType":"StructuredDocumentation","src":"4398:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:23","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"value","nameLocation":"4710:5:23","nodeType":"VariableDeclaration","scope":6050,"src":"4702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6024,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:23"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6050,"src":"4740:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6027,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:23"},"scope":7592,"src":"4683:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"5258:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"5272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6060,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:23","memberName":"max","nodeType":"MemberAccess","src":"5280:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6071,"nodeType":"IfStatement","src":"5268:105:23","trueBody":{"id":6070,"nodeType":"Block","src":"5299:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"5356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6065,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"5320:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6069,"nodeType":"RevertStatement","src":"5313:49:23"}]}},{"expression":{"arguments":[{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"5397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6072,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:23","typeDescriptions":{}}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6057,"id":6076,"nodeType":"Return","src":"5382:21:23"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"4907:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:23","nodeType":"FunctionDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"value","nameLocation":"5219:5:23","nodeType":"VariableDeclaration","scope":6078,"src":"5211:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:23"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6078,"src":"5249:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6055,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:23"},"scope":7592,"src":"5192:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"5767:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"5781:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6088,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:23","memberName":"max","nodeType":"MemberAccess","src":"5789:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6099,"nodeType":"IfStatement","src":"5777:105:23","trueBody":{"id":6098,"nodeType":"Block","src":"5808:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"5865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6093,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"5829:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6097,"nodeType":"RevertStatement","src":"5822:49:23"}]}},{"expression":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"5906:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6100,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:23","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6085,"id":6104,"nodeType":"Return","src":"5891:21:23"}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"5416:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:23","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"value","nameLocation":"5728:5:23","nodeType":"VariableDeclaration","scope":6106,"src":"5720:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:23"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6106,"src":"5758:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6083,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:23"},"scope":7592,"src":"5701:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6133,"nodeType":"Block","src":"6276:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"6290:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6116,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6115,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:23","memberName":"max","nodeType":"MemberAccess","src":"6298:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6127,"nodeType":"IfStatement","src":"6286:105:23","trueBody":{"id":6126,"nodeType":"Block","src":"6317:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"6374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6121,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"6338:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6125,"nodeType":"RevertStatement","src":"6331:49:23"}]}},{"expression":{"arguments":[{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"6415:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6128,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:23","typeDescriptions":{}}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6113,"id":6132,"nodeType":"Return","src":"6400:21:23"}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"5925:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6134,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:23","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"value","nameLocation":"6237:5:23","nodeType":"VariableDeclaration","scope":6134,"src":"6229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:23"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6134,"src":"6267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6111,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:23"},"scope":7592,"src":"6210:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6161,"nodeType":"Block","src":"6785:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"6799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6144,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6143,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:23","memberName":"max","nodeType":"MemberAccess","src":"6807:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6155,"nodeType":"IfStatement","src":"6795:105:23","trueBody":{"id":6154,"nodeType":"Block","src":"6826:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"6883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6149,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"6847:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6153,"nodeType":"RevertStatement","src":"6840:49:23"}]}},{"expression":{"arguments":[{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"6924:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6156,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:23","typeDescriptions":{}}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6141,"id":6160,"nodeType":"Return","src":"6909:21:23"}]},"documentation":{"id":6135,"nodeType":"StructuredDocumentation","src":"6434:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6162,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:23","nodeType":"FunctionDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"value","nameLocation":"6746:5:23","nodeType":"VariableDeclaration","scope":6162,"src":"6738:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:23"},"returnParameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6162,"src":"6776:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6139,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:23"},"scope":7592,"src":"6719:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"7294:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"7308:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6172,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:23","memberName":"max","nodeType":"MemberAccess","src":"7316:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6183,"nodeType":"IfStatement","src":"7304:105:23","trueBody":{"id":6182,"nodeType":"Block","src":"7335:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"7392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6177,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"7356:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6181,"nodeType":"RevertStatement","src":"7349:49:23"}]}},{"expression":{"arguments":[{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"7433:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6184,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:23","typeDescriptions":{}}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6169,"id":6188,"nodeType":"Return","src":"7418:21:23"}]},"documentation":{"id":6163,"nodeType":"StructuredDocumentation","src":"6943:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:23","nodeType":"FunctionDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"value","nameLocation":"7255:5:23","nodeType":"VariableDeclaration","scope":6190,"src":"7247:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:23"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6190,"src":"7285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6167,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:23"},"scope":7592,"src":"7228:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6217,"nodeType":"Block","src":"7803:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"7817:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6200,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:23","memberName":"max","nodeType":"MemberAccess","src":"7825:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6211,"nodeType":"IfStatement","src":"7813:105:23","trueBody":{"id":6210,"nodeType":"Block","src":"7844:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"7901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6205,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"7865:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6209,"nodeType":"RevertStatement","src":"7858:49:23"}]}},{"expression":{"arguments":[{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"7942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6212,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:23","typeDescriptions":{}}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6197,"id":6216,"nodeType":"Return","src":"7927:21:23"}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"7452:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6218,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:23","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"value","nameLocation":"7764:5:23","nodeType":"VariableDeclaration","scope":6218,"src":"7756:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6192,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:23"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6218,"src":"7794:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6195,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:23"},"scope":7592,"src":"7737:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6245,"nodeType":"Block","src":"8312:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"8326:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6228,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:23","memberName":"max","nodeType":"MemberAccess","src":"8334:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6239,"nodeType":"IfStatement","src":"8322:105:23","trueBody":{"id":6238,"nodeType":"Block","src":"8353:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"8410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6233,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"8374:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6237,"nodeType":"RevertStatement","src":"8367:49:23"}]}},{"expression":{"arguments":[{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"8451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6240,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:23","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6225,"id":6244,"nodeType":"Return","src":"8436:21:23"}]},"documentation":{"id":6219,"nodeType":"StructuredDocumentation","src":"7961:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:23","nodeType":"FunctionDefinition","parameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"value","nameLocation":"8273:5:23","nodeType":"VariableDeclaration","scope":6246,"src":"8265:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:23"},"returnParameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6246,"src":"8303:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6223,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:23"},"scope":7592,"src":"8246:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6273,"nodeType":"Block","src":"8821:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"8835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6256,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:23","memberName":"max","nodeType":"MemberAccess","src":"8843:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6267,"nodeType":"IfStatement","src":"8831:105:23","trueBody":{"id":6266,"nodeType":"Block","src":"8862:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"8919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6261,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"8883:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6265,"nodeType":"RevertStatement","src":"8876:49:23"}]}},{"expression":{"arguments":[{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6268,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:23","typeDescriptions":{}}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6253,"id":6272,"nodeType":"Return","src":"8945:21:23"}]},"documentation":{"id":6247,"nodeType":"StructuredDocumentation","src":"8470:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:23","nodeType":"FunctionDefinition","parameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"value","nameLocation":"8782:5:23","nodeType":"VariableDeclaration","scope":6274,"src":"8774:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:23"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6274,"src":"8812:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6251,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:23"},"scope":7592,"src":"8755:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6301,"nodeType":"Block","src":"9330:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"9344:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6284,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:23","memberName":"max","nodeType":"MemberAccess","src":"9352:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"9340:105:23","trueBody":{"id":6294,"nodeType":"Block","src":"9371:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"9428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6289,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"9392:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6293,"nodeType":"RevertStatement","src":"9385:49:23"}]}},{"expression":{"arguments":[{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"9469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6296,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:23","typeDescriptions":{}}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6281,"id":6300,"nodeType":"Return","src":"9454:21:23"}]},"documentation":{"id":6275,"nodeType":"StructuredDocumentation","src":"8979:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:23","nodeType":"FunctionDefinition","parameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"value","nameLocation":"9291:5:23","nodeType":"VariableDeclaration","scope":6302,"src":"9283:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:23"},"returnParameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6302,"src":"9321:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6279,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:23"},"scope":7592,"src":"9264:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6329,"nodeType":"Block","src":"9839:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"9853:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6312,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:23","memberName":"max","nodeType":"MemberAccess","src":"9861:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6323,"nodeType":"IfStatement","src":"9849:105:23","trueBody":{"id":6322,"nodeType":"Block","src":"9880:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"9937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6317,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"9901:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6321,"nodeType":"RevertStatement","src":"9894:49:23"}]}},{"expression":{"arguments":[{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"9978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6324,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:23","typeDescriptions":{}}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6309,"id":6328,"nodeType":"Return","src":"9963:21:23"}]},"documentation":{"id":6303,"nodeType":"StructuredDocumentation","src":"9488:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:23","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"value","nameLocation":"9800:5:23","nodeType":"VariableDeclaration","scope":6330,"src":"9792:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6304,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:23"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6330,"src":"9830:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6307,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:23"},"scope":7592,"src":"9773:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6357,"nodeType":"Block","src":"10348:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6340,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:23","memberName":"max","nodeType":"MemberAccess","src":"10370:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6351,"nodeType":"IfStatement","src":"10358:105:23","trueBody":{"id":6350,"nodeType":"Block","src":"10389:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"10446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6345,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"10410:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6349,"nodeType":"RevertStatement","src":"10403:49:23"}]}},{"expression":{"arguments":[{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"10487:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6352,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:23","typeDescriptions":{}}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6337,"id":6356,"nodeType":"Return","src":"10472:21:23"}]},"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"9997:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:23","nodeType":"FunctionDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"value","nameLocation":"10309:5:23","nodeType":"VariableDeclaration","scope":6358,"src":"10301:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6332,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:23"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6358,"src":"10339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6335,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:23"},"scope":7592,"src":"10282:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"10857:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6368,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:23","memberName":"max","nodeType":"MemberAccess","src":"10879:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6379,"nodeType":"IfStatement","src":"10867:105:23","trueBody":{"id":6378,"nodeType":"Block","src":"10898:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6373,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"10919:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6377,"nodeType":"RevertStatement","src":"10912:49:23"}]}},{"expression":{"arguments":[{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6380,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:23","typeDescriptions":{}}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6365,"id":6384,"nodeType":"Return","src":"10981:21:23"}]},"documentation":{"id":6359,"nodeType":"StructuredDocumentation","src":"10506:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:23","nodeType":"FunctionDefinition","parameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"value","nameLocation":"10818:5:23","nodeType":"VariableDeclaration","scope":6386,"src":"10810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:23"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6386,"src":"10848:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6363,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:23"},"scope":7592,"src":"10791:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6413,"nodeType":"Block","src":"11360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"11374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6396,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:23","memberName":"max","nodeType":"MemberAccess","src":"11382:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6407,"nodeType":"IfStatement","src":"11370:103:23","trueBody":{"id":6406,"nodeType":"Block","src":"11400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"11456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6401,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"11421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6405,"nodeType":"RevertStatement","src":"11414:48:23"}]}},{"expression":{"arguments":[{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"11496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6408,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:23","typeDescriptions":{}}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6393,"id":6412,"nodeType":"Return","src":"11482:20:23"}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"11015:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"value","nameLocation":"11322:5:23","nodeType":"VariableDeclaration","scope":6414,"src":"11314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6388,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:23"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6414,"src":"11352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6391,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:23"},"scope":7592,"src":"11296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"11860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"11874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6424,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:23","memberName":"max","nodeType":"MemberAccess","src":"11882:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6435,"nodeType":"IfStatement","src":"11870:103:23","trueBody":{"id":6434,"nodeType":"Block","src":"11900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"11956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6429,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"11921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6433,"nodeType":"RevertStatement","src":"11914:48:23"}]}},{"expression":{"arguments":[{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"11996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6436,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:23","typeDescriptions":{}}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6421,"id":6440,"nodeType":"Return","src":"11982:20:23"}]},"documentation":{"id":6415,"nodeType":"StructuredDocumentation","src":"11515:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"value","nameLocation":"11822:5:23","nodeType":"VariableDeclaration","scope":6442,"src":"11814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6416,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:23"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6442,"src":"11852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6419,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:23"},"scope":7592,"src":"11796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"12360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"12374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6452,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:23","memberName":"max","nodeType":"MemberAccess","src":"12382:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6463,"nodeType":"IfStatement","src":"12370:103:23","trueBody":{"id":6462,"nodeType":"Block","src":"12400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"12456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"12421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6461,"nodeType":"RevertStatement","src":"12414:48:23"}]}},{"expression":{"arguments":[{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"12496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6464,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:23","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6449,"id":6468,"nodeType":"Return","src":"12482:20:23"}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"12015:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"12322:5:23","nodeType":"VariableDeclaration","scope":6470,"src":"12314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:23"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"12352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6447,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:23"},"scope":7592,"src":"12296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6497,"nodeType":"Block","src":"12860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"12874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6480,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:23","memberName":"max","nodeType":"MemberAccess","src":"12882:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6491,"nodeType":"IfStatement","src":"12870:103:23","trueBody":{"id":6490,"nodeType":"Block","src":"12900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"12956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6485,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"12921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6489,"nodeType":"RevertStatement","src":"12914:48:23"}]}},{"expression":{"arguments":[{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"12996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6492,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:23","typeDescriptions":{}}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6477,"id":6496,"nodeType":"Return","src":"12982:20:23"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"12515:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"value","nameLocation":"12822:5:23","nodeType":"VariableDeclaration","scope":6498,"src":"12814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6472,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:23"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6498,"src":"12852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6475,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:23"},"scope":7592,"src":"12796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6525,"nodeType":"Block","src":"13360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"13374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6508,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:23","memberName":"max","nodeType":"MemberAccess","src":"13382:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6519,"nodeType":"IfStatement","src":"13370:103:23","trueBody":{"id":6518,"nodeType":"Block","src":"13400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"13456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6513,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"13421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6517,"nodeType":"RevertStatement","src":"13414:48:23"}]}},{"expression":{"arguments":[{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"13496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6520,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:23","typeDescriptions":{}}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6505,"id":6524,"nodeType":"Return","src":"13482:20:23"}]},"documentation":{"id":6499,"nodeType":"StructuredDocumentation","src":"13015:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"value","nameLocation":"13322:5:23","nodeType":"VariableDeclaration","scope":6526,"src":"13314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6500,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:23"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6526,"src":"13352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6503,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:23"},"scope":7592,"src":"13296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6553,"nodeType":"Block","src":"13860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"13874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6536,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:23","memberName":"max","nodeType":"MemberAccess","src":"13882:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6547,"nodeType":"IfStatement","src":"13870:103:23","trueBody":{"id":6546,"nodeType":"Block","src":"13900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"13956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6541,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"13921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6545,"nodeType":"RevertStatement","src":"13914:48:23"}]}},{"expression":{"arguments":[{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"13996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6548,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:23","typeDescriptions":{}}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6533,"id":6552,"nodeType":"Return","src":"13982:20:23"}]},"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"13515:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"value","nameLocation":"13822:5:23","nodeType":"VariableDeclaration","scope":6554,"src":"13814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:23"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6554,"src":"13852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6531,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:23"},"scope":7592,"src":"13796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"14360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"14374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6564,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:23","memberName":"max","nodeType":"MemberAccess","src":"14382:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6575,"nodeType":"IfStatement","src":"14370:103:23","trueBody":{"id":6574,"nodeType":"Block","src":"14400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"14456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6569,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"14421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6573,"nodeType":"RevertStatement","src":"14414:48:23"}]}},{"expression":{"arguments":[{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"14496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6576,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:23","typeDescriptions":{}}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6561,"id":6580,"nodeType":"Return","src":"14482:20:23"}]},"documentation":{"id":6555,"nodeType":"StructuredDocumentation","src":"14015:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"value","nameLocation":"14322:5:23","nodeType":"VariableDeclaration","scope":6582,"src":"14314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:23"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6582,"src":"14352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6559,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:23"},"scope":7592,"src":"14296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6609,"nodeType":"Block","src":"14860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"14874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6592,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6591,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:23","memberName":"max","nodeType":"MemberAccess","src":"14882:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6603,"nodeType":"IfStatement","src":"14870:103:23","trueBody":{"id":6602,"nodeType":"Block","src":"14900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"14956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6597,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"14921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6601,"nodeType":"RevertStatement","src":"14914:48:23"}]}},{"expression":{"arguments":[{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"14996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6604,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:23","typeDescriptions":{}}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6589,"id":6608,"nodeType":"Return","src":"14982:20:23"}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"14515:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6610,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"14822:5:23","nodeType":"VariableDeclaration","scope":6610,"src":"14814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:23"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6610,"src":"14852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6587,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:23"},"scope":7592,"src":"14796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6637,"nodeType":"Block","src":"15360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"15374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6620,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:23","memberName":"max","nodeType":"MemberAccess","src":"15382:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6631,"nodeType":"IfStatement","src":"15370:103:23","trueBody":{"id":6630,"nodeType":"Block","src":"15400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"15456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6625,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"15421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6629,"nodeType":"RevertStatement","src":"15414:48:23"}]}},{"expression":{"arguments":[{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"15496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6632,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:23","typeDescriptions":{}}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6617,"id":6636,"nodeType":"Return","src":"15482:20:23"}]},"documentation":{"id":6611,"nodeType":"StructuredDocumentation","src":"15015:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"value","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":6638,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6612,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:23"},"returnParameters":{"id":6617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6638,"src":"15352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6615,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:23"},"scope":7592,"src":"15296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6665,"nodeType":"Block","src":"15860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"15874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6648,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:23","memberName":"max","nodeType":"MemberAccess","src":"15882:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6659,"nodeType":"IfStatement","src":"15870:103:23","trueBody":{"id":6658,"nodeType":"Block","src":"15900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"15956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6653,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"15921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6657,"nodeType":"RevertStatement","src":"15914:48:23"}]}},{"expression":{"arguments":[{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"15996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6660,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:23","typeDescriptions":{}}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6645,"id":6664,"nodeType":"Return","src":"15982:20:23"}]},"documentation":{"id":6639,"nodeType":"StructuredDocumentation","src":"15515:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"value","nameLocation":"15822:5:23","nodeType":"VariableDeclaration","scope":6666,"src":"15814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6640,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:23"},"returnParameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6666,"src":"15852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6643,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:23"},"scope":7592,"src":"15796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6693,"nodeType":"Block","src":"16360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"16374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6676,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:23","memberName":"max","nodeType":"MemberAccess","src":"16382:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6687,"nodeType":"IfStatement","src":"16370:103:23","trueBody":{"id":6686,"nodeType":"Block","src":"16400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"16456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6681,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"16421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6685,"nodeType":"RevertStatement","src":"16414:48:23"}]}},{"expression":{"arguments":[{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"16496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6688,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:23","typeDescriptions":{}}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6673,"id":6692,"nodeType":"Return","src":"16482:20:23"}]},"documentation":{"id":6667,"nodeType":"StructuredDocumentation","src":"16015:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"value","nameLocation":"16322:5:23","nodeType":"VariableDeclaration","scope":6694,"src":"16314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6668,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:23"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6694,"src":"16352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6671,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:23"},"scope":7592,"src":"16296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"16854:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"16868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6704,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:23","memberName":"max","nodeType":"MemberAccess","src":"16876:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6715,"nodeType":"IfStatement","src":"16864:101:23","trueBody":{"id":6714,"nodeType":"Block","src":"16893:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"16948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6709,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"16914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6713,"nodeType":"RevertStatement","src":"16907:47:23"}]}},{"expression":{"arguments":[{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"16987:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6716,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:23","typeDescriptions":{}}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6701,"id":6720,"nodeType":"Return","src":"16974:19:23"}]},"documentation":{"id":6695,"nodeType":"StructuredDocumentation","src":"16515:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:23","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"value","nameLocation":"16817:5:23","nodeType":"VariableDeclaration","scope":6722,"src":"16809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6696,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:23"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6722,"src":"16847:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6699,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:23"},"scope":7592,"src":"16792:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6744,"nodeType":"Block","src":"17236:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"17250:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6738,"nodeType":"IfStatement","src":"17246:81:23","trueBody":{"id":6737,"nodeType":"Block","src":"17261:66:23","statements":[{"errorCall":{"arguments":[{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"17310:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6733,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"17282:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6736,"nodeType":"RevertStatement","src":"17275:41:23"}]}},{"expression":{"arguments":[{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"17351:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:23","typeDescriptions":{}}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6729,"id":6743,"nodeType":"Return","src":"17336:21:23"}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"17006:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6745,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:23","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"value","nameLocation":"17197:5:23","nodeType":"VariableDeclaration","scope":6745,"src":"17190:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6724,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:23"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6745,"src":"17227:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6727,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:23"},"scope":7592,"src":"17171:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6770,"nodeType":"Block","src":"17761:150:23","statements":[{"expression":{"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"17771:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"17791:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6754,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:23","typeDescriptions":{}}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6759,"nodeType":"ExpressionStatement","src":"17771:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"17825:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6769,"nodeType":"IfStatement","src":"17807:98:23","trueBody":{"id":6768,"nodeType":"Block","src":"17832:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"17888:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6763,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"17853:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6767,"nodeType":"RevertStatement","src":"17846:48:23"}]}}]},"documentation":{"id":6746,"nodeType":"StructuredDocumentation","src":"17370:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6771,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:23","nodeType":"FunctionDefinition","parameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"value","nameLocation":"17712:5:23","nodeType":"VariableDeclaration","scope":6771,"src":"17705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6747,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:23"},"returnParameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:23","nodeType":"VariableDeclaration","scope":6771,"src":"17742:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6750,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:23"},"scope":7592,"src":"17687:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"18308:150:23","statements":[{"expression":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"18318:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"18338:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6780,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:23","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6785,"nodeType":"ExpressionStatement","src":"18318:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"18358:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"18372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"18354:98:23","trueBody":{"id":6794,"nodeType":"Block","src":"18379:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"18435:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6789,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"18400:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6793,"nodeType":"RevertStatement","src":"18393:48:23"}]}}]},"documentation":{"id":6772,"nodeType":"StructuredDocumentation","src":"17917:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:23","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"value","nameLocation":"18259:5:23","nodeType":"VariableDeclaration","scope":6797,"src":"18252:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6773,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:23"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:23","nodeType":"VariableDeclaration","scope":6797,"src":"18289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6776,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:23"},"scope":7592,"src":"18234:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"18855:150:23","statements":[{"expression":{"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"18865:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"18885:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6806,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:23","typeDescriptions":{}}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6811,"nodeType":"ExpressionStatement","src":"18865:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6812,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"18905:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"18919:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6821,"nodeType":"IfStatement","src":"18901:98:23","trueBody":{"id":6820,"nodeType":"Block","src":"18926:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"18982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6815,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"18947:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6819,"nodeType":"RevertStatement","src":"18940:48:23"}]}}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"18464:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:23","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"18806:5:23","nodeType":"VariableDeclaration","scope":6823,"src":"18799:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6799,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:23"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:23","nodeType":"VariableDeclaration","scope":6823,"src":"18836:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6802,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:23"},"scope":7592,"src":"18781:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6848,"nodeType":"Block","src":"19402:150:23","statements":[{"expression":{"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19412:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"19432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6832,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:23","typeDescriptions":{}}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6837,"nodeType":"ExpressionStatement","src":"19412:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19452:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"19466:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6847,"nodeType":"IfStatement","src":"19448:98:23","trueBody":{"id":6846,"nodeType":"Block","src":"19473:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"19529:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6841,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"19494:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6845,"nodeType":"RevertStatement","src":"19487:48:23"}]}}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"19011:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6849,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:23","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"19353:5:23","nodeType":"VariableDeclaration","scope":6849,"src":"19346:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6825,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:23"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:23","nodeType":"VariableDeclaration","scope":6849,"src":"19383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6828,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:23"},"scope":7592,"src":"19328:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"19949:150:23","statements":[{"expression":{"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"19959:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"19979:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6858,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:23","typeDescriptions":{}}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6863,"nodeType":"ExpressionStatement","src":"19959:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"19999:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"20013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6873,"nodeType":"IfStatement","src":"19995:98:23","trueBody":{"id":6872,"nodeType":"Block","src":"20020:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"20076:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6867,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"20041:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6871,"nodeType":"RevertStatement","src":"20034:48:23"}]}}]},"documentation":{"id":6850,"nodeType":"StructuredDocumentation","src":"19558:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:23","nodeType":"FunctionDefinition","parameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"value","nameLocation":"19900:5:23","nodeType":"VariableDeclaration","scope":6875,"src":"19893:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6851,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:23"},"returnParameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:23","nodeType":"VariableDeclaration","scope":6875,"src":"19930:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6854,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:23"},"scope":7592,"src":"19875:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"20496:150:23","statements":[{"expression":{"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"20506:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"20526:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6884,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:23","typeDescriptions":{}}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6889,"nodeType":"ExpressionStatement","src":"20506:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"20546:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"20560:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6899,"nodeType":"IfStatement","src":"20542:98:23","trueBody":{"id":6898,"nodeType":"Block","src":"20567:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"20623:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"20588:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6897,"nodeType":"RevertStatement","src":"20581:48:23"}]}}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"20105:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:23","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"value","nameLocation":"20447:5:23","nodeType":"VariableDeclaration","scope":6901,"src":"20440:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6877,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:23"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:23","nodeType":"VariableDeclaration","scope":6901,"src":"20477:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6880,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:23"},"scope":7592,"src":"20422:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6926,"nodeType":"Block","src":"21043:150:23","statements":[{"expression":{"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"21053:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"21073:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6910,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:23","typeDescriptions":{}}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6915,"nodeType":"ExpressionStatement","src":"21053:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6916,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"21093:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"21107:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6925,"nodeType":"IfStatement","src":"21089:98:23","trueBody":{"id":6924,"nodeType":"Block","src":"21114:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"21170:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6919,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"21135:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6923,"nodeType":"RevertStatement","src":"21128:48:23"}]}}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"20652:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6927,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:23","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"value","nameLocation":"20994:5:23","nodeType":"VariableDeclaration","scope":6927,"src":"20987:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6903,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:23"},"returnParameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:23","nodeType":"VariableDeclaration","scope":6927,"src":"21024:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6906,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:23"},"scope":7592,"src":"20969:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6952,"nodeType":"Block","src":"21590:150:23","statements":[{"expression":{"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"21600:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"21620:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6936,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:23","typeDescriptions":{}}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6941,"nodeType":"ExpressionStatement","src":"21600:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6942,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"21640:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"21654:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6951,"nodeType":"IfStatement","src":"21636:98:23","trueBody":{"id":6950,"nodeType":"Block","src":"21661:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"21717:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6945,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"21682:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6949,"nodeType":"RevertStatement","src":"21675:48:23"}]}}]},"documentation":{"id":6928,"nodeType":"StructuredDocumentation","src":"21199:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6953,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:23","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"value","nameLocation":"21541:5:23","nodeType":"VariableDeclaration","scope":6953,"src":"21534:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6929,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:23"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:23","nodeType":"VariableDeclaration","scope":6953,"src":"21571:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6932,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:23"},"scope":7592,"src":"21516:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6978,"nodeType":"Block","src":"22137:150:23","statements":[{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"22147:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"22167:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6962,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:23","typeDescriptions":{}}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6967,"nodeType":"ExpressionStatement","src":"22147:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6968,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"22187:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"22201:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6977,"nodeType":"IfStatement","src":"22183:98:23","trueBody":{"id":6976,"nodeType":"Block","src":"22208:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"22264:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6971,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"22229:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6975,"nodeType":"RevertStatement","src":"22222:48:23"}]}}]},"documentation":{"id":6954,"nodeType":"StructuredDocumentation","src":"21746:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6979,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:23","nodeType":"FunctionDefinition","parameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"value","nameLocation":"22088:5:23","nodeType":"VariableDeclaration","scope":6979,"src":"22081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6955,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:23"},"returnParameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:23","nodeType":"VariableDeclaration","scope":6979,"src":"22118:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6958,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:23"},"scope":7592,"src":"22063:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7004,"nodeType":"Block","src":"22684:150:23","statements":[{"expression":{"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"22694:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"22714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6988,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:23","typeDescriptions":{}}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6993,"nodeType":"ExpressionStatement","src":"22694:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6994,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"22734:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"22748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7003,"nodeType":"IfStatement","src":"22730:98:23","trueBody":{"id":7002,"nodeType":"Block","src":"22755:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"22811:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6997,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"22776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7001,"nodeType":"RevertStatement","src":"22769:48:23"}]}}]},"documentation":{"id":6980,"nodeType":"StructuredDocumentation","src":"22293:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7005,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:23","nodeType":"FunctionDefinition","parameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"value","nameLocation":"22635:5:23","nodeType":"VariableDeclaration","scope":7005,"src":"22628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6981,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:23"},"returnParameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:23","nodeType":"VariableDeclaration","scope":7005,"src":"22665:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6984,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:23"},"scope":7592,"src":"22610:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7030,"nodeType":"Block","src":"23231:150:23","statements":[{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"23241:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"23261:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7014,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:23","typeDescriptions":{}}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7019,"nodeType":"ExpressionStatement","src":"23241:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"23281:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"23295:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7029,"nodeType":"IfStatement","src":"23277:98:23","trueBody":{"id":7028,"nodeType":"Block","src":"23302:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"23358:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7023,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"23323:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7027,"nodeType":"RevertStatement","src":"23316:48:23"}]}}]},"documentation":{"id":7006,"nodeType":"StructuredDocumentation","src":"22840:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:23","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"value","nameLocation":"23182:5:23","nodeType":"VariableDeclaration","scope":7031,"src":"23175:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7007,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:23"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:23","nodeType":"VariableDeclaration","scope":7031,"src":"23212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7010,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:23"},"scope":7592,"src":"23157:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7056,"nodeType":"Block","src":"23778:150:23","statements":[{"expression":{"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"23788:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"23808:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7040,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:23","typeDescriptions":{}}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7045,"nodeType":"ExpressionStatement","src":"23788:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"23828:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"23842:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7055,"nodeType":"IfStatement","src":"23824:98:23","trueBody":{"id":7054,"nodeType":"Block","src":"23849:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"23905:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"23870:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7053,"nodeType":"RevertStatement","src":"23863:48:23"}]}}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"23387:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7057,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:23","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"value","nameLocation":"23729:5:23","nodeType":"VariableDeclaration","scope":7057,"src":"23722:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7033,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:23"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:23","nodeType":"VariableDeclaration","scope":7057,"src":"23759:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7036,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:23"},"scope":7592,"src":"23704:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7082,"nodeType":"Block","src":"24325:150:23","statements":[{"expression":{"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"24335:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24355:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7066,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:23","typeDescriptions":{}}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7071,"nodeType":"ExpressionStatement","src":"24335:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"24375:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24389:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7081,"nodeType":"IfStatement","src":"24371:98:23","trueBody":{"id":7080,"nodeType":"Block","src":"24396:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24452:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7075,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"24417:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7079,"nodeType":"RevertStatement","src":"24410:48:23"}]}}]},"documentation":{"id":7058,"nodeType":"StructuredDocumentation","src":"23934:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7083,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:23","nodeType":"FunctionDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"value","nameLocation":"24276:5:23","nodeType":"VariableDeclaration","scope":7083,"src":"24269:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7059,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:23"},"returnParameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:23","nodeType":"VariableDeclaration","scope":7083,"src":"24306:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7062,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:23"},"scope":7592,"src":"24251:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7108,"nodeType":"Block","src":"24872:150:23","statements":[{"expression":{"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"24882:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"24902:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7092,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:23","typeDescriptions":{}}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7097,"nodeType":"ExpressionStatement","src":"24882:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"24922:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"24936:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7107,"nodeType":"IfStatement","src":"24918:98:23","trueBody":{"id":7106,"nodeType":"Block","src":"24943:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"24999:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7101,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"24964:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7105,"nodeType":"RevertStatement","src":"24957:48:23"}]}}]},"documentation":{"id":7084,"nodeType":"StructuredDocumentation","src":"24481:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7109,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:23","nodeType":"FunctionDefinition","parameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"value","nameLocation":"24823:5:23","nodeType":"VariableDeclaration","scope":7109,"src":"24816:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7085,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:23"},"returnParameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:23","nodeType":"VariableDeclaration","scope":7109,"src":"24853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7088,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:23"},"scope":7592,"src":"24798:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7134,"nodeType":"Block","src":"25419:150:23","statements":[{"expression":{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"25429:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"25449:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7118,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:23","typeDescriptions":{}}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7123,"nodeType":"ExpressionStatement","src":"25429:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"25469:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"25483:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7133,"nodeType":"IfStatement","src":"25465:98:23","trueBody":{"id":7132,"nodeType":"Block","src":"25490:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"25546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7127,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"25511:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7131,"nodeType":"RevertStatement","src":"25504:48:23"}]}}]},"documentation":{"id":7110,"nodeType":"StructuredDocumentation","src":"25028:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7135,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:23","nodeType":"FunctionDefinition","parameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"value","nameLocation":"25370:5:23","nodeType":"VariableDeclaration","scope":7135,"src":"25363:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7111,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:23"},"returnParameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:23","nodeType":"VariableDeclaration","scope":7135,"src":"25400:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7114,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:23"},"scope":7592,"src":"25345:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7160,"nodeType":"Block","src":"25966:150:23","statements":[{"expression":{"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"25976:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"25996:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7144,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:23","typeDescriptions":{}}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7149,"nodeType":"ExpressionStatement","src":"25976:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"26016:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"26030:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7159,"nodeType":"IfStatement","src":"26012:98:23","trueBody":{"id":7158,"nodeType":"Block","src":"26037:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"26093:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7153,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"26058:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7157,"nodeType":"RevertStatement","src":"26051:48:23"}]}}]},"documentation":{"id":7136,"nodeType":"StructuredDocumentation","src":"25575:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7161,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:23","nodeType":"FunctionDefinition","parameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"value","nameLocation":"25917:5:23","nodeType":"VariableDeclaration","scope":7161,"src":"25910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7137,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:23"},"returnParameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:23","nodeType":"VariableDeclaration","scope":7161,"src":"25947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7140,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:23"},"scope":7592,"src":"25892:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7186,"nodeType":"Block","src":"26513:150:23","statements":[{"expression":{"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"26523:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"26543:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7170,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:23","typeDescriptions":{}}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7175,"nodeType":"ExpressionStatement","src":"26523:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"26563:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"26577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7185,"nodeType":"IfStatement","src":"26559:98:23","trueBody":{"id":7184,"nodeType":"Block","src":"26584:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"26640:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7179,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"26605:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7183,"nodeType":"RevertStatement","src":"26598:48:23"}]}}]},"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"26122:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7187,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:23","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"value","nameLocation":"26464:5:23","nodeType":"VariableDeclaration","scope":7187,"src":"26457:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7163,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:23"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:23","nodeType":"VariableDeclaration","scope":7187,"src":"26494:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7166,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:23"},"scope":7592,"src":"26439:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7212,"nodeType":"Block","src":"27060:150:23","statements":[{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"27070:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"27090:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7196,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:23","typeDescriptions":{}}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7201,"nodeType":"ExpressionStatement","src":"27070:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"27110:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"27124:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7211,"nodeType":"IfStatement","src":"27106:98:23","trueBody":{"id":7210,"nodeType":"Block","src":"27131:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"27187:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7205,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"27152:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7209,"nodeType":"RevertStatement","src":"27145:48:23"}]}}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"26669:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7213,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:23","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"value","nameLocation":"27011:5:23","nodeType":"VariableDeclaration","scope":7213,"src":"27004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7189,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:23"},"returnParameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:23","nodeType":"VariableDeclaration","scope":7213,"src":"27041:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7192,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:23"},"scope":7592,"src":"26986:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7238,"nodeType":"Block","src":"27607:150:23","statements":[{"expression":{"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7221,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"27617:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"27637:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7222,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:23","typeDescriptions":{}}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7227,"nodeType":"ExpressionStatement","src":"27617:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"27657:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"27671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7237,"nodeType":"IfStatement","src":"27653:98:23","trueBody":{"id":7236,"nodeType":"Block","src":"27678:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"27734:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7231,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"27699:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7235,"nodeType":"RevertStatement","src":"27692:48:23"}]}}]},"documentation":{"id":7214,"nodeType":"StructuredDocumentation","src":"27216:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7239,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:23","nodeType":"FunctionDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"value","nameLocation":"27558:5:23","nodeType":"VariableDeclaration","scope":7239,"src":"27551:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7215,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:23"},"returnParameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:23","nodeType":"VariableDeclaration","scope":7239,"src":"27588:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7218,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:23"},"scope":7592,"src":"27533:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7264,"nodeType":"Block","src":"28147:148:23","statements":[{"expression":{"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"28157:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"28176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7248,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:23","typeDescriptions":{}}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7253,"nodeType":"ExpressionStatement","src":"28157:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"28196:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"28210:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"28192:97:23","trueBody":{"id":7262,"nodeType":"Block","src":"28217:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"28272:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7257,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"28238:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7261,"nodeType":"RevertStatement","src":"28231:47:23"}]}}]},"documentation":{"id":7240,"nodeType":"StructuredDocumentation","src":"27763:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:23","nodeType":"FunctionDefinition","parameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"value","nameLocation":"28099:5:23","nodeType":"VariableDeclaration","scope":7265,"src":"28092:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7241,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:23"},"returnParameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:23","nodeType":"VariableDeclaration","scope":7265,"src":"28129:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7244,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:23"},"scope":7592,"src":"28075:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7290,"nodeType":"Block","src":"28685:148:23","statements":[{"expression":{"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28695:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"28714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7274,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:23","typeDescriptions":{}}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7279,"nodeType":"ExpressionStatement","src":"28695:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28734:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"28748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7289,"nodeType":"IfStatement","src":"28730:97:23","trueBody":{"id":7288,"nodeType":"Block","src":"28755:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"28810:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7283,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"28776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7287,"nodeType":"RevertStatement","src":"28769:47:23"}]}}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"28301:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7291,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:23","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"value","nameLocation":"28637:5:23","nodeType":"VariableDeclaration","scope":7291,"src":"28630:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7267,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:23"},"returnParameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:23","nodeType":"VariableDeclaration","scope":7291,"src":"28667:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7270,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:23"},"scope":7592,"src":"28613:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7316,"nodeType":"Block","src":"29223:148:23","statements":[{"expression":{"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"29233:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"29252:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7300,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:23","typeDescriptions":{}}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7305,"nodeType":"ExpressionStatement","src":"29233:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"29272:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"29286:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7315,"nodeType":"IfStatement","src":"29268:97:23","trueBody":{"id":7314,"nodeType":"Block","src":"29293:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"29348:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7309,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"29314:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7313,"nodeType":"RevertStatement","src":"29307:47:23"}]}}]},"documentation":{"id":7292,"nodeType":"StructuredDocumentation","src":"28839:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7317,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:23","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"value","nameLocation":"29175:5:23","nodeType":"VariableDeclaration","scope":7317,"src":"29168:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7293,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:23"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:23","nodeType":"VariableDeclaration","scope":7317,"src":"29205:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7296,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:23"},"scope":7592,"src":"29151:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7342,"nodeType":"Block","src":"29761:148:23","statements":[{"expression":{"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"29771:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"29790:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7326,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:23","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7331,"nodeType":"ExpressionStatement","src":"29771:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"29810:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"29824:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7341,"nodeType":"IfStatement","src":"29806:97:23","trueBody":{"id":7340,"nodeType":"Block","src":"29831:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"29886:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7335,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"29852:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7339,"nodeType":"RevertStatement","src":"29845:47:23"}]}}]},"documentation":{"id":7318,"nodeType":"StructuredDocumentation","src":"29377:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7343,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:23","nodeType":"FunctionDefinition","parameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"value","nameLocation":"29713:5:23","nodeType":"VariableDeclaration","scope":7343,"src":"29706:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7319,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:23"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:23","nodeType":"VariableDeclaration","scope":7343,"src":"29743:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7322,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:23"},"scope":7592,"src":"29689:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7368,"nodeType":"Block","src":"30299:148:23","statements":[{"expression":{"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"30309:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"30328:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7352,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:23","typeDescriptions":{}}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7357,"nodeType":"ExpressionStatement","src":"30309:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"30348:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7367,"nodeType":"IfStatement","src":"30344:97:23","trueBody":{"id":7366,"nodeType":"Block","src":"30369:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"30424:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7361,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"30390:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7365,"nodeType":"RevertStatement","src":"30383:47:23"}]}}]},"documentation":{"id":7344,"nodeType":"StructuredDocumentation","src":"29915:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7369,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:23","nodeType":"FunctionDefinition","parameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"value","nameLocation":"30251:5:23","nodeType":"VariableDeclaration","scope":7369,"src":"30244:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7345,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:23"},"returnParameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:23","nodeType":"VariableDeclaration","scope":7369,"src":"30281:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7348,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:23"},"scope":7592,"src":"30227:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7394,"nodeType":"Block","src":"30837:148:23","statements":[{"expression":{"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7377,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"30847:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"30866:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7378,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:23","typeDescriptions":{}}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7383,"nodeType":"ExpressionStatement","src":"30847:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"30886:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"30900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"nodeType":"IfStatement","src":"30882:97:23","trueBody":{"id":7392,"nodeType":"Block","src":"30907:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"30962:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7387,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"30928:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7391,"nodeType":"RevertStatement","src":"30921:47:23"}]}}]},"documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"30453:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7395,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:23","nodeType":"FunctionDefinition","parameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"value","nameLocation":"30789:5:23","nodeType":"VariableDeclaration","scope":7395,"src":"30782:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7371,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:23"},"returnParameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:23","nodeType":"VariableDeclaration","scope":7395,"src":"30819:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7374,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:23"},"scope":7592,"src":"30765:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7420,"nodeType":"Block","src":"31375:148:23","statements":[{"expression":{"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7403,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"31385:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"31404:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7404,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:23","typeDescriptions":{}}},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7409,"nodeType":"ExpressionStatement","src":"31385:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"31424:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"31438:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7419,"nodeType":"IfStatement","src":"31420:97:23","trueBody":{"id":7418,"nodeType":"Block","src":"31445:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"31500:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7413,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"31466:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7417,"nodeType":"RevertStatement","src":"31459:47:23"}]}}]},"documentation":{"id":7396,"nodeType":"StructuredDocumentation","src":"30991:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:23","nodeType":"FunctionDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"value","nameLocation":"31327:5:23","nodeType":"VariableDeclaration","scope":7421,"src":"31320:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7397,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:23"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:23","nodeType":"VariableDeclaration","scope":7421,"src":"31357:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7400,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:23"},"scope":7592,"src":"31303:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7446,"nodeType":"Block","src":"31913:148:23","statements":[{"expression":{"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"31923:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"31942:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7430,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:23","typeDescriptions":{}}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7435,"nodeType":"ExpressionStatement","src":"31923:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"31962:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"31976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7445,"nodeType":"IfStatement","src":"31958:97:23","trueBody":{"id":7444,"nodeType":"Block","src":"31983:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"32038:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7439,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"32004:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7443,"nodeType":"RevertStatement","src":"31997:47:23"}]}}]},"documentation":{"id":7422,"nodeType":"StructuredDocumentation","src":"31529:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:23","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"value","nameLocation":"31865:5:23","nodeType":"VariableDeclaration","scope":7447,"src":"31858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7423,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:23"},"returnParameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:23","nodeType":"VariableDeclaration","scope":7447,"src":"31895:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7426,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:23"},"scope":7592,"src":"31841:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7472,"nodeType":"Block","src":"32451:148:23","statements":[{"expression":{"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"32461:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"32480:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7456,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:23","typeDescriptions":{}}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7461,"nodeType":"ExpressionStatement","src":"32461:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"32500:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"32514:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7471,"nodeType":"IfStatement","src":"32496:97:23","trueBody":{"id":7470,"nodeType":"Block","src":"32521:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"32576:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7465,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"32542:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7469,"nodeType":"RevertStatement","src":"32535:47:23"}]}}]},"documentation":{"id":7448,"nodeType":"StructuredDocumentation","src":"32067:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7473,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:23","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"value","nameLocation":"32403:5:23","nodeType":"VariableDeclaration","scope":7473,"src":"32396:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7449,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:23"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:23","nodeType":"VariableDeclaration","scope":7473,"src":"32433:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7452,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:23"},"scope":7592,"src":"32379:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7498,"nodeType":"Block","src":"32989:148:23","statements":[{"expression":{"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7481,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"32999:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"33018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7482,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:23","typeDescriptions":{}}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7487,"nodeType":"ExpressionStatement","src":"32999:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"33038:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"33052:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7497,"nodeType":"IfStatement","src":"33034:97:23","trueBody":{"id":7496,"nodeType":"Block","src":"33059:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"33114:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7491,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"33080:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7495,"nodeType":"RevertStatement","src":"33073:47:23"}]}}]},"documentation":{"id":7474,"nodeType":"StructuredDocumentation","src":"32605:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7499,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:23","nodeType":"FunctionDefinition","parameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"value","nameLocation":"32941:5:23","nodeType":"VariableDeclaration","scope":7499,"src":"32934:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7475,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:23"},"returnParameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:23","nodeType":"VariableDeclaration","scope":7499,"src":"32971:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7478,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:23"},"scope":7592,"src":"32917:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7524,"nodeType":"Block","src":"33527:148:23","statements":[{"expression":{"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7507,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"33537:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"33556:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7508,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:23","typeDescriptions":{}}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7513,"nodeType":"ExpressionStatement","src":"33537:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"33576:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"33590:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7523,"nodeType":"IfStatement","src":"33572:97:23","trueBody":{"id":7522,"nodeType":"Block","src":"33597:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"33652:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7517,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"33618:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7521,"nodeType":"RevertStatement","src":"33611:47:23"}]}}]},"documentation":{"id":7500,"nodeType":"StructuredDocumentation","src":"33143:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7525,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:23","nodeType":"FunctionDefinition","parameters":{"id":7503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7502,"mutability":"mutable","name":"value","nameLocation":"33479:5:23","nodeType":"VariableDeclaration","scope":7525,"src":"33472:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7501,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:23"},"returnParameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:23","nodeType":"VariableDeclaration","scope":7525,"src":"33509:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7504,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:23"},"scope":7592,"src":"33455:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7550,"nodeType":"Block","src":"34058:146:23","statements":[{"expression":{"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7533,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"34068:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"34086:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7534,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:23","typeDescriptions":{}}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7539,"nodeType":"ExpressionStatement","src":"34068:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"34106:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"34120:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7549,"nodeType":"IfStatement","src":"34102:96:23","trueBody":{"id":7548,"nodeType":"Block","src":"34127:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"34181:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7543,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"34148:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7547,"nodeType":"RevertStatement","src":"34141:46:23"}]}}]},"documentation":{"id":7526,"nodeType":"StructuredDocumentation","src":"33681:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7551,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:23","nodeType":"FunctionDefinition","parameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"value","nameLocation":"34011:5:23","nodeType":"VariableDeclaration","scope":7551,"src":"34004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7527,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:23"},"returnParameters":{"id":7532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7531,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:23","nodeType":"VariableDeclaration","scope":7551,"src":"34041:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7530,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:23"},"scope":7592,"src":"33988:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7580,"nodeType":"Block","src":"34444:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"34557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7563,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:23","memberName":"max","nodeType":"MemberAccess","src":"34573:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7560,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:23","typeDescriptions":{}}},"id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7574,"nodeType":"IfStatement","src":"34553:105:23","trueBody":{"id":7573,"nodeType":"Block","src":"34592:66:23","statements":[{"errorCall":{"arguments":[{"id":7570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"34641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7569,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"34613:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7572,"nodeType":"RevertStatement","src":"34606:41:23"}]}},{"expression":{"arguments":[{"id":7577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"34681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7575,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:23","typeDescriptions":{}}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7558,"id":7579,"nodeType":"Return","src":"34667:20:23"}]},"documentation":{"id":7552,"nodeType":"StructuredDocumentation","src":"34210:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7581,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:23","nodeType":"FunctionDefinition","parameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"mutability":"mutable","name":"value","nameLocation":"34406:5:23","nodeType":"VariableDeclaration","scope":7581,"src":"34398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7553,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:23"},"returnParameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7581,"src":"34436:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7556,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:23"},"scope":7592,"src":"34380:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7590,"nodeType":"Block","src":"34853:87:23","statements":[{"AST":{"nativeSrc":"34888:46:23","nodeType":"YulBlock","src":"34888:46:23","statements":[{"nativeSrc":"34902:22:23","nodeType":"YulAssignment","src":"34902:22:23","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:23","nodeType":"YulIdentifier","src":"34921:1:23"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:23","nodeType":"YulIdentifier","src":"34914:6:23"},"nativeSrc":"34914:9:23","nodeType":"YulFunctionCall","src":"34914:9:23"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:23","nodeType":"YulIdentifier","src":"34907:6:23"},"nativeSrc":"34907:17:23","nodeType":"YulFunctionCall","src":"34907:17:23"},"variableNames":[{"name":"u","nativeSrc":"34902:1:23","nodeType":"YulIdentifier","src":"34902:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7584,"isOffset":false,"isSlot":false,"src":"34921:1:23","valueSize":1},{"declaration":7587,"isOffset":false,"isSlot":false,"src":"34902:1:23","valueSize":1}],"flags":["memory-safe"],"id":7589,"nodeType":"InlineAssembly","src":"34863:71:23"}]},"documentation":{"id":7582,"nodeType":"StructuredDocumentation","src":"34700:90:23","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:23","nodeType":"FunctionDefinition","parameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7584,"mutability":"mutable","name":"b","nameLocation":"34816:1:23","nodeType":"VariableDeclaration","scope":7591,"src":"34811:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7583,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:23"},"returnParameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"u","nameLocation":"34850:1:23","nodeType":"VariableDeclaration","scope":7591,"src":"34842:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7586,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:23"},"scope":7592,"src":"34795:145:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7593,"src":"769:34173:23","usedErrors":[5837,5842,5849,5854],"usedEvents":[]}],"src":"192:34751:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7592],"SignedMath":[7736]},"id":7737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7737,"sourceUnit":7593,"src":"135:40:24","symbolAliases":[{"foreign":{"id":7595,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"143:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7597,"nodeType":"StructuredDocumentation","src":"177:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7736,"linearizedBaseContracts":[7736],"name":"SignedMath","nameLocation":"266:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":7626,"nodeType":"Block","src":"746:215:24","statements":[{"id":7625,"nodeType":"UncheckedBlock","src":"756:199:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7609,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"894:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"900:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"904:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7618,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"932:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7616,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"916:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7592_$","typeString":"type(library SafeCast)"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7591,"src":"916:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7614,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:24","typeDescriptions":{}}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7608,"id":7624,"nodeType":"Return","src":"887:57:24"}]}]},"documentation":{"id":7598,"nodeType":"StructuredDocumentation","src":"283:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7627,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:24","nodeType":"FunctionDefinition","parameters":{"id":7605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"condition","nameLocation":"684:9:24","nodeType":"VariableDeclaration","scope":7627,"src":"679:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7599,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7602,"mutability":"mutable","name":"a","nameLocation":"702:1:24","nodeType":"VariableDeclaration","scope":7627,"src":"695:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7601,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7604,"mutability":"mutable","name":"b","nameLocation":"712:1:24","nodeType":"VariableDeclaration","scope":7627,"src":"705:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7603,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:24"},"returnParameters":{"id":7608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7627,"src":"738:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7606,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:24"},"scope":7736,"src":"662:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7645,"nodeType":"Block","src":"1102:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"1127:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7639,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"1131:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"1134:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"1137:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7637,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"1119:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7636,"id":7644,"nodeType":"Return","src":"1112:27:24"}]},"documentation":{"id":7628,"nodeType":"StructuredDocumentation","src":"967:66:24","text":" @dev Returns the largest of two signed numbers."},"id":7646,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:24","nodeType":"FunctionDefinition","parameters":{"id":7633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7630,"mutability":"mutable","name":"a","nameLocation":"1058:1:24","nodeType":"VariableDeclaration","scope":7646,"src":"1051:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7629,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7632,"mutability":"mutable","name":"b","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":7646,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7631,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:24"},"returnParameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7646,"src":"1094:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7634,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:24"},"scope":7736,"src":"1038:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7664,"nodeType":"Block","src":"1288:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"1313:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"1317:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"1320:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"1323:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7656,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"1305:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7655,"id":7663,"nodeType":"Return","src":"1298:27:24"}]},"documentation":{"id":7647,"nodeType":"StructuredDocumentation","src":"1152:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":7665,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:24","nodeType":"FunctionDefinition","parameters":{"id":7652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7649,"mutability":"mutable","name":"a","nameLocation":"1244:1:24","nodeType":"VariableDeclaration","scope":7665,"src":"1237:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7648,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7651,"mutability":"mutable","name":"b","nameLocation":"1254:1:24","nodeType":"VariableDeclaration","scope":7665,"src":"1247:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7650,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:24"},"returnParameters":{"id":7655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7665,"src":"1280:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7653,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:24"},"scope":7736,"src":"1224:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7708,"nodeType":"Block","src":"1537:162:24","statements":[{"assignments":[7676],"declarations":[{"constant":false,"id":7676,"mutability":"mutable","name":"x","nameLocation":"1606:1:24","nodeType":"VariableDeclaration","scope":7708,"src":"1599:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7675,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7689,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"1611:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7678,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"1615:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"1622:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"1626:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7690,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7695,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"1671:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{}}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7691,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:24","typeDescriptions":{}}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"1685:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"1689:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7674,"id":7707,"nodeType":"Return","src":"1644:48:24"}]},"documentation":{"id":7666,"nodeType":"StructuredDocumentation","src":"1338:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7709,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:24","nodeType":"FunctionDefinition","parameters":{"id":7671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"a","nameLocation":"1493:1:24","nodeType":"VariableDeclaration","scope":7709,"src":"1486:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7667,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7670,"mutability":"mutable","name":"b","nameLocation":"1503:1:24","nodeType":"VariableDeclaration","scope":7709,"src":"1496:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7669,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:24"},"returnParameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7709,"src":"1529:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7672,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:24"},"scope":7736,"src":"1469:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7734,"nodeType":"Block","src":"1843:767:24","statements":[{"id":7733,"nodeType":"UncheckedBlock","src":"1853:751:24","statements":[{"assignments":[7718],"declarations":[{"constant":false,"id":7718,"mutability":"mutable","name":"mask","nameLocation":"2424:4:24","nodeType":"VariableDeclaration","scope":7733,"src":"2417:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7717,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7722,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7719,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"2431:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7725,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"2576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7726,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"2580:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7729,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"2588:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:24","typeDescriptions":{}}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7716,"id":7732,"nodeType":"Return","src":"2560:33:24"}]}]},"documentation":{"id":7710,"nodeType":"StructuredDocumentation","src":"1705:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7735,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:24","nodeType":"FunctionDefinition","parameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"n","nameLocation":"1808:1:24","nodeType":"VariableDeclaration","scope":7735,"src":"1801:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7711,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:24"},"returnParameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7735,"src":"1834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:24"},"scope":7736,"src":"1788:822:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7737,"src":"258:2354:24","usedErrors":[],"usedEvents":[]}],"src":"109:2504:24"},"id":24},"contracts/BlueCarbonRegistry.sol":{"ast":{"absolutePath":"contracts/BlueCarbonRegistry.sol","exportedSymbols":{"AccessControl":[296],"BlueCarbonRegistry":[8473],"CarbonToken":[7790],"Context":[2716],"ERC165":[4194],"ERC20":[1211],"ERC20Burnable":[1335],"ERC721":[2318],"ERC721URIStorage":[2581],"IAccessControl":[379],"IERC165":[4206],"IERC20":[1289],"IERC20Errors":[601],"IERC20Metadata":[1361],"IERC4906":[555],"IERC721Metadata":[2609],"Ownable":[527],"Strings":[4170]},"id":8474,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7738,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:25"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8474,"sourceUnit":297,"src":"325:58:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8474,"sourceUnit":528,"src":"385:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8474,"sourceUnit":2582,"src":"439:78:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8474,"sourceUnit":1212,"src":"519:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":7743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8474,"sourceUnit":1336,"src":"576:74:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8474,"sourceUnit":1290,"src":"652:56:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7745,"name":"ERC20","nameLocations":["736:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"736:5:25"},"id":7746,"nodeType":"InheritanceSpecifier","src":"736:5:25"},{"baseName":{"id":7747,"name":"ERC20Burnable","nameLocations":["743:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"743:13:25"},"id":7748,"nodeType":"InheritanceSpecifier","src":"743:13:25"},{"baseName":{"id":7749,"name":"AccessControl","nameLocations":["758:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"758:13:25"},"id":7750,"nodeType":"InheritanceSpecifier","src":"758:13:25"}],"canonicalName":"CarbonToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7790,"linearizedBaseContracts":[7790,296,4194,4206,379,1335,1211,601,1361,1289,2716],"name":"CarbonToken","nameLocation":"721:11:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"82aefa24","id":7755,"mutability":"constant","name":"ISSUER_ROLE","nameLocation":"803:11:25","nodeType":"VariableDeclaration","scope":7790,"src":"779:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"779:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4953535545525f524f4c45","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"827:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122","typeString":"literal_string \"ISSUER_ROLE\""},"value":"ISSUER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122","typeString":"literal_string \"ISSUER_ROLE\""}],"id":7752,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"817:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":7772,"nodeType":"Block","src":"928:99:25","statements":[{"expression":{"arguments":[{"id":7767,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"988:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7768,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1008:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1012:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1008:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7766,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"977:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7771,"nodeType":"ExpressionStatement","src":"977:42:25"}]},"id":7773,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7762,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"912:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7763,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7759,"src":"919:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7764,"kind":"baseConstructorSpecifier","modifierName":{"id":7761,"name":"ERC20","nameLocations":["906:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"906:5:25"},"nodeType":"ModifierInvocation","src":"906:21:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7757,"mutability":"mutable","name":"name_","nameLocation":"876:5:25","nodeType":"VariableDeclaration","scope":7773,"src":"862:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7756,"name":"string","nodeType":"ElementaryTypeName","src":"862:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7759,"mutability":"mutable","name":"symbol_","nameLocation":"897:7:25","nodeType":"VariableDeclaration","scope":7773,"src":"883:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7758,"name":"string","nodeType":"ElementaryTypeName","src":"883:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"861:44:25"},"returnParameters":{"id":7765,"nodeType":"ParameterList","parameters":[],"src":"928:0:25"},"scope":7790,"src":"850:177:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7788,"nodeType":"Block","src":"1108:36:25","statements":[{"expression":{"arguments":[{"id":7784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"1125:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7785,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"1129:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7783,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1119:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7787,"nodeType":"ExpressionStatement","src":"1119:17:25"}]},"functionSelector":"40c10f19","id":7789,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7780,"name":"ISSUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"1095:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7781,"kind":"modifierInvocation","modifierName":{"id":7779,"name":"onlyRole","nameLocations":["1086:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1086:8:25"},"nodeType":"ModifierInvocation","src":"1086:21:25"}],"name":"mint","nameLocation":"1044:4:25","nodeType":"FunctionDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"to","nameLocation":"1057:2:25","nodeType":"VariableDeclaration","scope":7789,"src":"1049:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7774,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7777,"mutability":"mutable","name":"amount","nameLocation":"1069:6:25","nodeType":"VariableDeclaration","scope":7789,"src":"1061:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1048:28:25"},"returnParameters":{"id":7782,"nodeType":"ParameterList","parameters":[],"src":"1108:0:25"},"scope":7790,"src":"1035:109:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8474,"src":"712:435:25","usedErrors":[306,309,571,576,581,590,595,600],"usedEvents":[318,327,336,1223,1232]},{"abstract":false,"baseContracts":[{"baseName":{"id":7792,"name":"ERC721URIStorage","nameLocations":["1393:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":2581,"src":"1393:16:25"},"id":7793,"nodeType":"InheritanceSpecifier","src":"1393:16:25"},{"baseName":{"id":7794,"name":"AccessControl","nameLocations":["1411:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"1411:13:25"},"id":7795,"nodeType":"InheritanceSpecifier","src":"1411:13:25"},{"baseName":{"id":7796,"name":"Ownable","nameLocations":["1426:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1426:7:25"},"id":7797,"nodeType":"InheritanceSpecifier","src":"1426:7:25"}],"canonicalName":"BlueCarbonRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":7791,"nodeType":"StructuredDocumentation","src":"1151:209:25","text":" @title BlueCarbonRegistry\n @notice Registry for blue carbon restoration projects, MRV evidence anchoring,\n         verifier/admin roles, NFT receipts, and issuance of fungible carbon tokens."},"fullyImplemented":true,"id":8473,"linearizedBaseContracts":[8473,527,296,2581,2318,649,2609,555,2435,4194,4206,379,2716],"name":"BlueCarbonRegistry","nameLocation":"1371:18:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e7705db6","id":7802,"mutability":"constant","name":"VERIFIER_ROLE","nameLocation":"1465:13:25","nodeType":"VariableDeclaration","scope":8473,"src":"1441:66:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"56455249464945525f524f4c45","id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1491:15:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""},"value":"VERIFIER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""}],"id":7799,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1481:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1481:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"82a71ef2","id":7805,"mutability":"mutable","name":"carbonToken","nameLocation":"1535:11:25","nodeType":"VariableDeclaration","scope":8473,"src":"1516:30:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"},"typeName":{"id":7804,"nodeType":"UserDefinedTypeName","pathNode":{"id":7803,"name":"CarbonToken","nameLocations":["1516:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":7790,"src":"1516:11:25"},"referencedDeclaration":7790,"src":"1516:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}},"visibility":"public"},{"constant":false,"functionSelector":"9c361e4e","id":7807,"mutability":"mutable","name":"totalProjects","nameLocation":"1608:13:25","nodeType":"VariableDeclaration","scope":8473,"src":"1593:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":7809,"mutability":"mutable","name":"_nextEvidenceId","nameLocation":"1644:15:25","nodeType":"VariableDeclaration","scope":8473,"src":"1628:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7811,"mutability":"mutable","name":"_nextReceiptTokenId","nameLocation":"1682:19:25","nodeType":"VariableDeclaration","scope":8473,"src":"1666:35:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"BlueCarbonRegistry.Project","id":7826,"members":[{"constant":false,"id":7813,"mutability":"mutable","name":"name","nameLocation":"1753:4:25","nodeType":"VariableDeclaration","scope":7826,"src":"1746:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7812,"name":"string","nodeType":"ElementaryTypeName","src":"1746:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7815,"mutability":"mutable","name":"location","nameLocation":"1775:8:25","nodeType":"VariableDeclaration","scope":7826,"src":"1768:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7814,"name":"string","nodeType":"ElementaryTypeName","src":"1768:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7817,"mutability":"mutable","name":"area","nameLocation":"1845:4:25","nodeType":"VariableDeclaration","scope":7826,"src":"1837:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7819,"mutability":"mutable","name":"owner","nameLocation":"1906:5:25","nodeType":"VariableDeclaration","scope":7826,"src":"1898:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7818,"name":"address","nodeType":"ElementaryTypeName","src":"1898:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7821,"mutability":"mutable","name":"metadataURI","nameLocation":"1955:11:25","nodeType":"VariableDeclaration","scope":7826,"src":"1948:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7820,"name":"string","nodeType":"ElementaryTypeName","src":"1948:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7823,"mutability":"mutable","name":"exists","nameLocation":"2015:6:25","nodeType":"VariableDeclaration","scope":7826,"src":"2010:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7822,"name":"bool","nodeType":"ElementaryTypeName","src":"2010:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7825,"mutability":"mutable","name":"totalIssuedCredits","nameLocation":"2040:18:25","nodeType":"VariableDeclaration","scope":7826,"src":"2032:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Project","nameLocation":"1727:7:25","nodeType":"StructDefinition","scope":8473,"src":"1720:404:25","visibility":"public"},{"canonicalName":"BlueCarbonRegistry.Evidence","id":7841,"members":[{"constant":false,"id":7828,"mutability":"mutable","name":"projectId","nameLocation":"2167:9:25","nodeType":"VariableDeclaration","scope":7841,"src":"2159:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2159:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7830,"mutability":"mutable","name":"evidenceHash","nameLocation":"2195:12:25","nodeType":"VariableDeclaration","scope":7841,"src":"2187:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7832,"mutability":"mutable","name":"evidenceURI","nameLocation":"2261:11:25","nodeType":"VariableDeclaration","scope":7841,"src":"2254:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7831,"name":"string","nodeType":"ElementaryTypeName","src":"2254:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7834,"mutability":"mutable","name":"uploader","nameLocation":"2319:8:25","nodeType":"VariableDeclaration","scope":7841,"src":"2311:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7833,"name":"address","nodeType":"ElementaryTypeName","src":"2311:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7836,"mutability":"mutable","name":"verified","nameLocation":"2343:8:25","nodeType":"VariableDeclaration","scope":7841,"src":"2338:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7835,"name":"bool","nodeType":"ElementaryTypeName","src":"2338:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7838,"mutability":"mutable","name":"timestamp","nameLocation":"2370:9:25","nodeType":"VariableDeclaration","scope":7841,"src":"2362:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7840,"mutability":"mutable","name":"receiptTokenId","nameLocation":"2398:14:25","nodeType":"VariableDeclaration","scope":7841,"src":"2390:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Evidence","nameLocation":"2139:8:25","nodeType":"StructDefinition","scope":8473,"src":"2132:341:25","visibility":"public"},{"constant":false,"functionSelector":"107046bd","id":7846,"mutability":"mutable","name":"projects","nameLocation":"2532:8:25","nodeType":"VariableDeclaration","scope":8473,"src":"2497:43:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project)"},"typeName":{"id":7845,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7842,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2497:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7844,"nodeType":"UserDefinedTypeName","pathNode":{"id":7843,"name":"Project","nameLocations":["2516:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":7826,"src":"2516:7:25"},"referencedDeclaration":7826,"src":"2516:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage_ptr","typeString":"struct BlueCarbonRegistry.Project"}}},"visibility":"public"},{"constant":false,"functionSelector":"2e4546cd","id":7851,"mutability":"mutable","name":"evidences","nameLocation":"2607:9:25","nodeType":"VariableDeclaration","scope":8473,"src":"2571:45:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Evidence_$7841_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Evidence)"},"typeName":{"id":7850,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2579:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2571:28:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Evidence_$7841_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Evidence)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7849,"nodeType":"UserDefinedTypeName","pathNode":{"id":7848,"name":"Evidence","nameLocations":["2590:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7841,"src":"2590:8:25"},"referencedDeclaration":7841,"src":"2590:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"182a3c36d70101c00c1251172cafd87f69e7e51caa24ab27ee82e181d0b5c347","id":7861,"name":"ProjectRegistered","nameLocation":"2672:17:25","nodeType":"EventDefinition","parameters":{"id":7860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"2706:9:25","nodeType":"VariableDeclaration","scope":7861,"src":"2690:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2690:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7855,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2733:5:25","nodeType":"VariableDeclaration","scope":7861,"src":"2717:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7854,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7857,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2747:4:25","nodeType":"VariableDeclaration","scope":7861,"src":"2740:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7856,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7859,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"2760:11:25","nodeType":"VariableDeclaration","scope":7861,"src":"2753:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7858,"name":"string","nodeType":"ElementaryTypeName","src":"2753:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2689:83:25"},"src":"2666:107:25"},{"anonymous":false,"eventSelector":"9f07fb2089847eaa89482a475227f9748f6f8670f45c70651a9929c3b2ff0bd4","id":7873,"name":"EvidenceUploaded","nameLocation":"2785:16:25","nodeType":"EventDefinition","parameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"indexed":true,"mutability":"mutable","name":"evidenceId","nameLocation":"2818:10:25","nodeType":"VariableDeclaration","scope":7873,"src":"2802:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7865,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"2846:9:25","nodeType":"VariableDeclaration","scope":7873,"src":"2830:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2830:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7867,"indexed":false,"mutability":"mutable","name":"evidenceHash","nameLocation":"2865:12:25","nodeType":"VariableDeclaration","scope":7873,"src":"2857:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2857:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7869,"indexed":false,"mutability":"mutable","name":"evidenceURI","nameLocation":"2886:11:25","nodeType":"VariableDeclaration","scope":7873,"src":"2879:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7868,"name":"string","nodeType":"ElementaryTypeName","src":"2879:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7871,"indexed":false,"mutability":"mutable","name":"uploader","nameLocation":"2907:8:25","nodeType":"VariableDeclaration","scope":7873,"src":"2899:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7870,"name":"address","nodeType":"ElementaryTypeName","src":"2899:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2801:115:25"},"src":"2779:138:25"},{"anonymous":false,"eventSelector":"268daa65823d8fa0335b05c9de4adf451d91e6feee90c955137643b9a98625cf","id":7883,"name":"EvidenceVerified","nameLocation":"2929:16:25","nodeType":"EventDefinition","parameters":{"id":7882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7875,"indexed":true,"mutability":"mutable","name":"evidenceId","nameLocation":"2962:10:25","nodeType":"VariableDeclaration","scope":7883,"src":"2946:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7877,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"2990:9:25","nodeType":"VariableDeclaration","scope":7883,"src":"2974:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2974:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7879,"indexed":false,"mutability":"mutable","name":"verifier","nameLocation":"3009:8:25","nodeType":"VariableDeclaration","scope":7883,"src":"3001:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7878,"name":"address","nodeType":"ElementaryTypeName","src":"3001:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7881,"indexed":false,"mutability":"mutable","name":"receiptTokenId","nameLocation":"3027:14:25","nodeType":"VariableDeclaration","scope":7883,"src":"3019:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2945:97:25"},"src":"2923:120:25"},{"anonymous":false,"eventSelector":"921c08e825069e4d980f75f8c9d39ab505649f98d18f620f19759e16f0e3ba6b","id":7891,"name":"CreditsMinted","nameLocation":"3055:13:25","nodeType":"EventDefinition","parameters":{"id":7890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7885,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"3085:9:25","nodeType":"VariableDeclaration","scope":7891,"src":"3069:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7887,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3112:2:25","nodeType":"VariableDeclaration","scope":7891,"src":"3096:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7886,"name":"address","nodeType":"ElementaryTypeName","src":"3096:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7889,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3124:6:25","nodeType":"VariableDeclaration","scope":7891,"src":"3116:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:63:25"},"src":"3049:83:25"},{"anonymous":false,"eventSelector":"ddbf9d9b2b8ec52d81ebdd4358971424e6dcfd1343b0f03b2dceb9c85c168e35","id":7899,"name":"ReceiptMinted","nameLocation":"3144:13:25","nodeType":"EventDefinition","parameters":{"id":7898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"3174:7:25","nodeType":"VariableDeclaration","scope":7899,"src":"3158:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3158:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7895,"indexed":true,"mutability":"mutable","name":"evidenceId","nameLocation":"3199:10:25","nodeType":"VariableDeclaration","scope":7899,"src":"3183:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3227:2:25","nodeType":"VariableDeclaration","scope":7899,"src":"3211:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7896,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3157:73:25"},"src":"3138:93:25"},{"anonymous":false,"eventSelector":"675f826c7b38aa0548de6f37e8e4cf39a6f9a62f7bcd3828bcb6fc7be280233e","id":7905,"name":"ReceiptRetired","nameLocation":"3243:14:25","nodeType":"EventDefinition","parameters":{"id":7904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7901,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"3274:7:25","nodeType":"VariableDeclaration","scope":7905,"src":"3258:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7903,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3299:5:25","nodeType":"VariableDeclaration","scope":7905,"src":"3283:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7902,"name":"address","nodeType":"ElementaryTypeName","src":"3283:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3257:48:25"},"src":"3237:69:25"},{"body":{"id":7931,"nodeType":"Block","src":"3411:209:25","statements":[{"expression":{"arguments":[{"id":7918,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3475:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7919,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"3495:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7917,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3464:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7921,"nodeType":"ExpressionStatement","src":"3464:37:25"},{"expression":{"arguments":[{"id":7923,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"3523:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7924,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"3538:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7922,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3512:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3512:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7926,"nodeType":"ExpressionStatement","src":"3512:32:25"},{"expression":{"arguments":[{"id":7928,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"3606:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7927,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3588:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3588:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7930,"nodeType":"ExpressionStatement","src":"3588:24:25"}]},"id":7932,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"426c7565436172626f6e52656365697074","id":7910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3368:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c8a6c1c8fb1f4e1423d27b3799b31fe9fe0e249a5748caeb093a4af7cdccb7d","typeString":"literal_string \"BlueCarbonReceipt\""},"value":"BlueCarbonReceipt"},{"hexValue":"424352","id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3389:5:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d7752df51d23705baaba68394095e4f1c650fbbb4ed7490591dff69244ca365a","typeString":"literal_string \"BCR\""},"value":"BCR"}],"id":7912,"kind":"baseConstructorSpecifier","modifierName":{"id":7909,"name":"ERC721","nameLocations":["3361:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"3361:6:25"},"nodeType":"ModifierInvocation","src":"3361:34:25"},{"arguments":[{"id":7914,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"3404:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7915,"kind":"baseConstructorSpecifier","modifierName":{"id":7913,"name":"Ownable","nameLocations":["3396:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3396:7:25"},"nodeType":"ModifierInvocation","src":"3396:14:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7907,"mutability":"mutable","name":"admin","nameLocation":"3354:5:25","nodeType":"VariableDeclaration","scope":7932,"src":"3346:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7906,"name":"address","nodeType":"ElementaryTypeName","src":"3346:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:15:25"},"returnParameters":{"id":7916,"nodeType":"ParameterList","parameters":[],"src":"3411:0:25"},"scope":8473,"src":"3334:286:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7955,"nodeType":"Block","src":"3795:129:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7940,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"3814:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3838:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7941,"name":"address","nodeType":"ElementaryTypeName","src":"3830:7:25","typeDescriptions":{}}},"id":7944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3814:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":7946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3842:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":7939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3806:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:60:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7948,"nodeType":"ExpressionStatement","src":"3806:60:25"},{"expression":{"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7949,"name":"carbonToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"3877:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7951,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"3903:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7950,"name":"CarbonToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"3891:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CarbonToken_$7790_$","typeString":"type(contract CarbonToken)"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3891:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}},"src":"3877:39:25","typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}},"id":7954,"nodeType":"ExpressionStatement","src":"3877:39:25"}]},"functionSelector":"c6bdee61","id":7956,"implemented":true,"kind":"function","modifiers":[{"id":7937,"kind":"modifierInvocation","modifierName":{"id":7936,"name":"onlyOwner","nameLocations":["3785:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"3785:9:25"},"nodeType":"ModifierInvocation","src":"3785:9:25"}],"name":"setCarbonToken","nameLocation":"3739:14:25","nodeType":"FunctionDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"tokenAddress","nameLocation":"3762:12:25","nodeType":"VariableDeclaration","scope":7956,"src":"3754:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7933,"name":"address","nodeType":"ElementaryTypeName","src":"3754:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3753:22:25"},"returnParameters":{"id":7938,"nodeType":"ParameterList","parameters":[],"src":"3795:0:25"},"scope":8473,"src":"3730:194:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7969,"nodeType":"Block","src":"4009:53:25","statements":[{"expression":{"arguments":[{"id":7965,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"4030:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7966,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"4045:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7964,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"4020:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7968,"nodeType":"ExpressionStatement","src":"4020:34:25"}]},"functionSelector":"9000b3d6","id":7970,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7961,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3989:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7962,"kind":"modifierInvocation","modifierName":{"id":7960,"name":"onlyRole","nameLocations":["3980:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"3980:8:25"},"nodeType":"ModifierInvocation","src":"3980:28:25"}],"name":"addVerifier","nameLocation":"3941:11:25","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"verifier","nameLocation":"3961:8:25","nodeType":"VariableDeclaration","scope":7970,"src":"3953:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7957,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:18:25"},"returnParameters":{"id":7963,"nodeType":"ParameterList","parameters":[],"src":"4009:0:25"},"scope":8473,"src":"3932:130:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7983,"nodeType":"Block","src":"4150:54:25","statements":[{"expression":{"arguments":[{"id":7979,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"4172:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7980,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4187:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7978,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4161:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4161:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7982,"nodeType":"ExpressionStatement","src":"4161:35:25"}]},"functionSelector":"ca2dfd0a","id":7984,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7975,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"4130:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7976,"kind":"modifierInvocation","modifierName":{"id":7974,"name":"onlyRole","nameLocations":["4121:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4121:8:25"},"nodeType":"ModifierInvocation","src":"4121:28:25"}],"name":"removeVerifier","nameLocation":"4079:14:25","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"verifier","nameLocation":"4102:8:25","nodeType":"VariableDeclaration","scope":7984,"src":"4094:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7971,"name":"address","nodeType":"ElementaryTypeName","src":"4094:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4093:18:25"},"returnParameters":{"id":7977,"nodeType":"ParameterList","parameters":[],"src":"4150:0:25"},"scope":8473,"src":"4070:134:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8043,"nodeType":"Block","src":"4940:498:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8003,"name":"ownerAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"4959:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4980:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4972:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8004,"name":"address","nodeType":"ElementaryTypeName","src":"4972:7:25","typeDescriptions":{}}},"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4959:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e65722061646472657373207265717569726564","id":8009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4984:24:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a","typeString":"literal_string \"Owner address required\""},"value":"Owner address required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a","typeString":"literal_string \"Owner address required\""}],"id":8002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4951:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4951:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8011,"nodeType":"ExpressionStatement","src":"4951:58:25"},{"expression":{"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8012,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"5020:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8013,"name":"totalProjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"5032:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5048:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5032:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5020:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8017,"nodeType":"ExpressionStatement","src":"5020:29:25"},{"expression":{"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8018,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"5060:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8020,"indexExpression":{"id":8019,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"5069:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5060:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8022,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"5111:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8023,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"5140:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8024,"name":"area","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"5169:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8025,"name":"ownerAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"5195:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8026,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"5232:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5266:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":8028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5305:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8021,"name":"Project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"5082:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Project_$7826_storage_ptr_$","typeString":"type(struct BlueCarbonRegistry.Project storage pointer)"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5105:4:25","5130:8:25","5163:4:25","5188:5:25","5219:11:25","5258:6:25","5285:18:25"],"names":["name","location","area","owner","metadataURI","exists","totalIssuedCredits"],"nodeType":"FunctionCall","src":"5082:236:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"src":"5060:258:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8031,"nodeType":"ExpressionStatement","src":"5060:258:25"},{"expression":{"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8032,"name":"totalProjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"5329:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8033,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"5345:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5329:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8035,"nodeType":"ExpressionStatement","src":"5329:25:25"},{"eventCall":{"arguments":[{"id":8037,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"5390:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8038,"name":"ownerAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"5401:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8039,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"5412:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8040,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"5418:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8036,"name":"ProjectRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"5372:17:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory,string memory)"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8042,"nodeType":"EmitStatement","src":"5367:63:25"}]},"documentation":{"id":7985,"nodeType":"StructuredDocumentation","src":"4308:398:25","text":" @notice Register a new restoration project\n @param name Project name\n @param location Human readable location or geojson\n @param area Area measure (units documented by off-chain)\n @param ownerAddr Wallet address that will receive credits\n @param metadataURI IPFS metadata URI describing the project\n @return projectId newly assigned id"},"functionSelector":"80aba8fe","id":8044,"implemented":true,"kind":"function","modifiers":[{"id":7998,"kind":"modifierInvocation","modifierName":{"id":7997,"name":"onlyOwner","nameLocations":["4902:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"4902:9:25"},"nodeType":"ModifierInvocation","src":"4902:9:25"}],"name":"registerProject","nameLocation":"4721:15:25","nodeType":"FunctionDefinition","parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7987,"mutability":"mutable","name":"name","nameLocation":"4761:4:25","nodeType":"VariableDeclaration","scope":8044,"src":"4747:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7986,"name":"string","nodeType":"ElementaryTypeName","src":"4747:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7989,"mutability":"mutable","name":"location","nameLocation":"4790:8:25","nodeType":"VariableDeclaration","scope":8044,"src":"4776:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7988,"name":"string","nodeType":"ElementaryTypeName","src":"4776:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7991,"mutability":"mutable","name":"area","nameLocation":"4817:4:25","nodeType":"VariableDeclaration","scope":8044,"src":"4809:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7993,"mutability":"mutable","name":"ownerAddr","nameLocation":"4840:9:25","nodeType":"VariableDeclaration","scope":8044,"src":"4832:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7992,"name":"address","nodeType":"ElementaryTypeName","src":"4832:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7995,"mutability":"mutable","name":"metadataURI","nameLocation":"4874:11:25","nodeType":"VariableDeclaration","scope":8044,"src":"4860:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7994,"name":"string","nodeType":"ElementaryTypeName","src":"4860:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4736:156:25"},"returnParameters":{"id":8001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"mutability":"mutable","name":"projectId","nameLocation":"4929:9:25","nodeType":"VariableDeclaration","scope":8044,"src":"4921:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4921:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4920:19:25"},"scope":8473,"src":"4712:726:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8083,"nodeType":"Block","src":"5532:246:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8052,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"5551:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8054,"indexExpression":{"id":8053,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"5560:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5551:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5571:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7823,"src":"5551:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a656374206e6f7420666f756e64","id":8056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5579:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611","typeString":"literal_string \"Project not found\""},"value":"Project not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611","typeString":"literal_string \"Project not found\""}],"id":8051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5543:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5543:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8058,"nodeType":"ExpressionStatement","src":"5543:56:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5618:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5622:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5618:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8062,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5632:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5618:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5643:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5647:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5643:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":8067,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"5657:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8069,"indexExpression":{"id":8068,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"5666:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5657:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5677:5:25","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7819,"src":"5657:25:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5643:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5618:64:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572206f722070726f6a656374206f776e6572","id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5684:29:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72","typeString":"literal_string \"Only owner or project owner\""},"value":"Only owner or project owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72","typeString":"literal_string \"Only owner or project owner\""}],"id":8059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5610:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:104:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8075,"nodeType":"ExpressionStatement","src":"5610:104:25"},{"expression":{"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8076,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"5725:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8078,"indexExpression":{"id":8077,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"5734:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5725:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5745:11:25","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":7821,"src":"5725:31:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8080,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"5759:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5725:45:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8082,"nodeType":"ExpressionStatement","src":"5725:45:25"}]},"functionSelector":"91546c34","id":8084,"implemented":true,"kind":"function","modifiers":[],"name":"updateProjectMetadata","nameLocation":"5455:21:25","nodeType":"FunctionDefinition","parameters":{"id":8049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8046,"mutability":"mutable","name":"projectId","nameLocation":"5485:9:25","nodeType":"VariableDeclaration","scope":8084,"src":"5477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5477:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8048,"mutability":"mutable","name":"metadataURI","nameLocation":"5510:11:25","nodeType":"VariableDeclaration","scope":8084,"src":"5496:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8047,"name":"string","nodeType":"ElementaryTypeName","src":"5496:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5476:46:25"},"returnParameters":{"id":8050,"nodeType":"ParameterList","parameters":[],"src":"5532:0:25"},"scope":8473,"src":"5446:332:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8134,"nodeType":"Block","src":"6360:521:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8097,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"6379:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8099,"indexExpression":{"id":8098,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"6388:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6399:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7823,"src":"6379:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a656374206e6f7420666f756e64","id":8101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6407:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611","typeString":"literal_string \"Project not found\""},"value":"Project not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611","typeString":"literal_string \"Project not found\""}],"id":8096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6371:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6371:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8103,"nodeType":"ExpressionStatement","src":"6371:56:25"},{"expression":{"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8104,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"6438:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6451:17:25","subExpression":{"id":8105,"name":"_nextEvidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"6453:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6438:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8108,"nodeType":"ExpressionStatement","src":"6438:30:25"},{"expression":{"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8109,"name":"evidences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"6479:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Evidence_$7841_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Evidence storage ref)"}},"id":8111,"indexExpression":{"id":8110,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"6489:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6479:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage","typeString":"struct BlueCarbonRegistry.Evidence storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8113,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"6538:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8114,"name":"evidenceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"6576:12:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8115,"name":"evidenceURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"6616:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8116,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6652:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6656:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6652:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6687:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":8119,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6718:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6724:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"6718:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":8121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6764:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8112,"name":"Evidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"6503:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Evidence_$7841_storage_ptr_$","typeString":"type(struct BlueCarbonRegistry.Evidence storage pointer)"}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6527:9:25","6562:12:25","6603:11:25","6642:8:25","6677:8:25","6707:9:25","6748:14:25"],"names":["projectId","evidenceHash","evidenceURI","uploader","verified","timestamp","receiptTokenId"],"nodeType":"FunctionCall","src":"6503:274:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"src":"6479:298:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage","typeString":"struct BlueCarbonRegistry.Evidence storage ref"}},"id":8124,"nodeType":"ExpressionStatement","src":"6479:298:25"},{"eventCall":{"arguments":[{"id":8126,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"6812:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8127,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"6824:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8128,"name":"evidenceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"6835:12:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8129,"name":"evidenceURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"6849:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8130,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6862:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6866:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6862:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8125,"name":"EvidenceUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"6795:16:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,uint256,bytes32,string memory,address)"}},"id":8132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6795:78:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8133,"nodeType":"EmitStatement","src":"6790:83:25"}]},"documentation":{"id":8085,"nodeType":"StructuredDocumentation","src":"5879:311:25","text":" @notice Upload an evidence anchor (off-chain file hashed + stored in IPFS)\n @param projectId project the evidence belongs to\n @param evidenceHash SHA-256 (or chosen) hash of the evidence payload\n @param evidenceURI IPFS CID or URI for details\n @return evidenceId"},"functionSelector":"83f8187c","id":8135,"implemented":true,"kind":"function","modifiers":[],"name":"uploadEvidence","nameLocation":"6205:14:25","nodeType":"FunctionDefinition","parameters":{"id":8092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8087,"mutability":"mutable","name":"projectId","nameLocation":"6238:9:25","nodeType":"VariableDeclaration","scope":8135,"src":"6230:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"6230:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8089,"mutability":"mutable","name":"evidenceHash","nameLocation":"6266:12:25","nodeType":"VariableDeclaration","scope":8135,"src":"6258:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6258:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8091,"mutability":"mutable","name":"evidenceURI","nameLocation":"6303:11:25","nodeType":"VariableDeclaration","scope":8135,"src":"6289:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8090,"name":"string","nodeType":"ElementaryTypeName","src":"6289:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6219:102:25"},"returnParameters":{"id":8095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8094,"mutability":"mutable","name":"evidenceId","nameLocation":"6348:10:25","nodeType":"VariableDeclaration","scope":8135,"src":"6340:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8093,"name":"uint256","nodeType":"ElementaryTypeName","src":"6340:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6339:20:25"},"scope":8473,"src":"6196:685:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8281,"nodeType":"Block","src":"7553:1424:25","statements":[{"assignments":[8154],"declarations":[{"constant":false,"id":8154,"mutability":"mutable","name":"ev","nameLocation":"7581:2:25","nodeType":"VariableDeclaration","scope":8281,"src":"7564:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence"},"typeName":{"id":8153,"nodeType":"UserDefinedTypeName","pathNode":{"id":8152,"name":"Evidence","nameLocations":["7564:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7841,"src":"7564:8:25"},"referencedDeclaration":7841,"src":"7564:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence"}},"visibility":"internal"}],"id":8158,"initialValue":{"baseExpression":{"id":8155,"name":"evidences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"7586:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Evidence_$7841_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Evidence storage ref)"}},"id":8157,"indexExpression":{"id":8156,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"7596:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7586:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage","typeString":"struct BlueCarbonRegistry.Evidence storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7564:43:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8160,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"7626:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7629:9:25","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7838,"src":"7626:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7642:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7626:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45766964656e6365206e6f7420666f756e64","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7645:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb","typeString":"literal_string \"Evidence not found\""},"value":"Evidence not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb","typeString":"literal_string \"Evidence not found\""}],"id":8159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7618:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8166,"nodeType":"ExpressionStatement","src":"7618:48:25"},{"expression":{"arguments":[{"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7685:12:25","subExpression":{"expression":{"id":8168,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"7686:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7689:8:25","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":7836,"src":"7686:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207665726966696564","id":8171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7699:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","typeString":"literal_string \"Already verified\""},"value":"Already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","typeString":"literal_string \"Already verified\""}],"id":8167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7677:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7677:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8173,"nodeType":"ExpressionStatement","src":"7677:41:25"},{"expression":{"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8174,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"7731:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7734:8:25","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":7836,"src":"7731:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7745:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7731:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8179,"nodeType":"ExpressionStatement","src":"7731:18:25"},{"condition":{"id":8180,"name":"mintReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"7808:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8222,"nodeType":"IfStatement","src":"7804:482:25","trueBody":{"id":8221,"nodeType":"Block","src":"7821:465:25","statements":[{"expression":{"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7836:21:25","subExpression":{"id":8181,"name":"_nextReceiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"7836:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8183,"nodeType":"ExpressionStatement","src":"7836:21:25"},{"expression":{"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8184,"name":"receiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"7872:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8185,"name":"_nextReceiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"7889:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8187,"nodeType":"ExpressionStatement","src":"7872:36:25"},{"expression":{"arguments":[{"expression":{"id":8189,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"7933:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7936:8:25","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7834,"src":"7933:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8191,"name":"receiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"7946:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8188,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1996,2026],"referencedDeclaration":1996,"src":"7923:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8193,"nodeType":"ExpressionStatement","src":"7923:38:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8196,"name":"receiptTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"8043:15:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8037:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8194,"name":"bytes","nodeType":"ElementaryTypeName","src":"8037:5:25","typeDescriptions":{}}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8037:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8060:6:25","memberName":"length","nodeType":"MemberAccess","src":"8037:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8069:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8037:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8207,"nodeType":"IfStatement","src":"8033:119:25","trueBody":{"id":8206,"nodeType":"Block","src":"8072:80:25","statements":[{"expression":{"arguments":[{"id":8202,"name":"receiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"8104:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8203,"name":"receiptTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"8120:15:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8201,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"8091:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8091:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8205,"nodeType":"ExpressionStatement","src":"8091:45:25"}]}},{"expression":{"id":8212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8208,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8166:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8169:14:25","memberName":"receiptTokenId","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"8166:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8211,"name":"receiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"8186:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8166:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8213,"nodeType":"ExpressionStatement","src":"8166:34:25"},{"eventCall":{"arguments":[{"id":8215,"name":"receiptTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"8234:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8216,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"8250:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8217,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8262:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8265:8:25","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7834,"src":"8262:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8214,"name":"ReceiptMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"8220:13:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8220:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8220,"nodeType":"EmitStatement","src":"8215:59:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8223,"name":"mintFungibleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"8372:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8372:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8270,"nodeType":"IfStatement","src":"8368:511:25","trueBody":{"id":8269,"nodeType":"Block","src":"8396:483:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8229,"name":"carbonToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"8427:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}],"id":8228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8419:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8227,"name":"address","nodeType":"ElementaryTypeName","src":"8419:7:25","typeDescriptions":{}}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8451:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8231,"name":"address","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":8234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8419:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172626f6e20746f6b656e206e6f7420736574","id":8236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8455:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f","typeString":"literal_string \"Carbon token not set\""},"value":"Carbon token not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f","typeString":"literal_string \"Carbon token not set\""}],"id":8226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8411:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8238,"nodeType":"ExpressionStatement","src":"8411:67:25"},{"assignments":[8240],"declarations":[{"constant":false,"id":8240,"mutability":"mutable","name":"projectOwner","nameLocation":"8501:12:25","nodeType":"VariableDeclaration","scope":8269,"src":"8493:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8239,"name":"address","nodeType":"ElementaryTypeName","src":"8493:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8246,"initialValue":{"expression":{"baseExpression":{"id":8241,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"8516:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8244,"indexExpression":{"expression":{"id":8242,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8525:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8528:9:25","memberName":"projectId","nodeType":"MemberAccess","referencedDeclaration":7828,"src":"8525:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8516:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8539:5:25","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7819,"src":"8516:28:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8493:51:25"},{"expression":{"arguments":[{"id":8250,"name":"projectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"8675:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8251,"name":"mintFungibleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"8689:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8247,"name":"carbonToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"8658:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_CarbonToken_$7790","typeString":"contract CarbonToken"}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8670:4:25","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":7789,"src":"8658:16:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8658:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8253,"nodeType":"ExpressionStatement","src":"8658:50:25"},{"expression":{"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8254,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"8723:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8257,"indexExpression":{"expression":{"id":8255,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8732:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8735:9:25","memberName":"projectId","nodeType":"MemberAccess","referencedDeclaration":7828,"src":"8732:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8723:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"id":8258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8746:18:25","memberName":"totalIssuedCredits","nodeType":"MemberAccess","referencedDeclaration":7825,"src":"8723:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8259,"name":"mintFungibleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"8768:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8723:63:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8261,"nodeType":"ExpressionStatement","src":"8723:63:25"},{"eventCall":{"arguments":[{"expression":{"id":8263,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8820:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8823:9:25","memberName":"projectId","nodeType":"MemberAccess","referencedDeclaration":7828,"src":"8820:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8265,"name":"projectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"8834:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8266,"name":"mintFungibleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"8848:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8262,"name":"CreditsMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"8806:13:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8806:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8268,"nodeType":"EmitStatement","src":"8801:66:25"}]}},{"eventCall":{"arguments":[{"id":8272,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"8913:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8273,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8925:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8928:9:25","memberName":"projectId","nodeType":"MemberAccess","referencedDeclaration":7828,"src":"8925:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8939:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8943:6:25","memberName":"sender","nodeType":"MemberAccess","src":"8939:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8277,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"8951:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence storage pointer"}},"id":8278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8954:14:25","memberName":"receiptTokenId","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"8951:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8271,"name":"EvidenceVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"8896:16:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,uint256)"}},"id":8279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8896:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8280,"nodeType":"EmitStatement","src":"8891:78:25"}]},"documentation":{"id":8136,"nodeType":"StructuredDocumentation","src":"6889:420:25","text":" @notice Verifier approves evidence -> optional mint receipt NFT and/or mint fungible credits\n @param evidenceId evidence to verify\n @param mintReceipt whether to mint an NFT receipt for the evidence (true = mint)\n @param receiptTokenURI tokenURI for the NFT receipt if minted\n @param mintFungibleAmount amount of ERC20 token to mint to project owner (in token base units)"},"functionSelector":"e4a49b46","id":8282,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8147,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"7505:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8148,"kind":"modifierInvocation","modifierName":{"id":8146,"name":"onlyRole","nameLocations":["7496:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"7496:8:25"},"nodeType":"ModifierInvocation","src":"7496:23:25"}],"name":"verifyEvidenceAndIssue","nameLocation":"7324:22:25","nodeType":"FunctionDefinition","parameters":{"id":8145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8138,"mutability":"mutable","name":"evidenceId","nameLocation":"7365:10:25","nodeType":"VariableDeclaration","scope":8282,"src":"7357:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8137,"name":"uint256","nodeType":"ElementaryTypeName","src":"7357:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8140,"mutability":"mutable","name":"mintReceipt","nameLocation":"7391:11:25","nodeType":"VariableDeclaration","scope":8282,"src":"7386:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8139,"name":"bool","nodeType":"ElementaryTypeName","src":"7386:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8142,"mutability":"mutable","name":"receiptTokenURI","nameLocation":"7427:15:25","nodeType":"VariableDeclaration","scope":8282,"src":"7413:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8141,"name":"string","nodeType":"ElementaryTypeName","src":"7413:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8144,"mutability":"mutable","name":"mintFungibleAmount","nameLocation":"7461:18:25","nodeType":"VariableDeclaration","scope":8282,"src":"7453:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"7453:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:140:25"},"returnParameters":{"id":8151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8150,"mutability":"mutable","name":"receiptTokenId","nameLocation":"7537:14:25","nodeType":"VariableDeclaration","scope":8282,"src":"7529:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8149,"name":"uint256","nodeType":"ElementaryTypeName","src":"7529:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7528:24:25"},"scope":8473,"src":"7315:1662:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8313,"nodeType":"Block","src":"9231:246:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8292,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"9258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8291,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9250:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9250:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9270:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9274:6:25","memberName":"sender","nodeType":"MemberAccess","src":"9270:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9250:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":8297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9282:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":8290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9242:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9242:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8299,"nodeType":"ExpressionStatement","src":"9242:58:25"},{"expression":{"arguments":[{"expression":{"id":8301,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9328:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9332:6:25","memberName":"sender","nodeType":"MemberAccess","src":"9328:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8303,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"9340:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8304,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"9344:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8300,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1696,1726],"referencedDeclaration":1696,"src":"9311:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9311:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8306,"nodeType":"ExpressionStatement","src":"9311:41:25"},{"eventCall":{"arguments":[{"id":8308,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"9382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9391:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"9394:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8307,"name":"ReceiptMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"9368:13:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9368:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8312,"nodeType":"EmitStatement","src":"9363:34:25"}]},"documentation":{"id":8283,"nodeType":"StructuredDocumentation","src":"9086:76:25","text":"Wrapper to transfer a receipt NFT (standard ERC721 transfer allowed too)"},"functionSelector":"f7f7229e","id":8314,"implemented":true,"kind":"function","modifiers":[],"name":"transferReceipt","nameLocation":"9177:15:25","nodeType":"FunctionDefinition","parameters":{"id":8288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"to","nameLocation":"9201:2:25","nodeType":"VariableDeclaration","scope":8314,"src":"9193:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8284,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"tokenId","nameLocation":"9213:7:25","nodeType":"VariableDeclaration","scope":8314,"src":"9205:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9205:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9192:29:25"},"returnParameters":{"id":8289,"nodeType":"ParameterList","parameters":[],"src":"9231:0:25"},"scope":8473,"src":"9168:309:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8340,"nodeType":"Block","src":"9571:153:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"9598:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8321,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9590:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9590:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9610:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9614:6:25","memberName":"sender","nodeType":"MemberAccess","src":"9610:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9590:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":8327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9622:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":8320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9582:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9582:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8329,"nodeType":"ExpressionStatement","src":"9582:58:25"},{"expression":{"arguments":[{"id":8331,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"9657:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8330,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"9651:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9651:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8333,"nodeType":"ExpressionStatement","src":"9651:14:25"},{"eventCall":{"arguments":[{"id":8335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"9696:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9705:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9709:6:25","memberName":"sender","nodeType":"MemberAccess","src":"9705:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8334,"name":"ReceiptRetired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"9681:14:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9681:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8339,"nodeType":"EmitStatement","src":"9676:40:25"}]},"documentation":{"id":8315,"nodeType":"StructuredDocumentation","src":"9485:31:25","text":"Retire (burn) a receipt NFT"},"functionSelector":"40c80852","id":8341,"implemented":true,"kind":"function","modifiers":[],"name":"retireReceipt","nameLocation":"9531:13:25","nodeType":"FunctionDefinition","parameters":{"id":8318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"tokenId","nameLocation":"9553:7:25","nodeType":"VariableDeclaration","scope":8341,"src":"9545:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8316,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9544:17:25"},"returnParameters":{"id":8319,"nodeType":"ParameterList","parameters":[],"src":"9571:0:25"},"scope":8473,"src":"9522:202:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8361,"nodeType":"Block","src":"9895:57:25","statements":[{"expression":{"arguments":[{"id":8357,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"9933:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8358,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"9937:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8354,"name":"tokenAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8344,"src":"9913:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8353,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9906:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1289_$","typeString":"type(contract IERC20)"}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1289","typeString":"contract IERC20"}},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9924:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"9906:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8360,"nodeType":"ExpressionStatement","src":"9906:38:25"}]},"documentation":{"id":8342,"nodeType":"StructuredDocumentation","src":"9732:70:25","text":"Admin / owner can withdraw accidentally sent ERC20 tokens (safety)"},"functionSelector":"b2118a8d","id":8362,"implemented":true,"kind":"function","modifiers":[{"id":8351,"kind":"modifierInvocation","modifierName":{"id":8350,"name":"onlyOwner","nameLocations":["9885:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"9885:9:25"},"nodeType":"ModifierInvocation","src":"9885:9:25"}],"name":"rescueERC20","nameLocation":"9817:11:25","nodeType":"FunctionDefinition","parameters":{"id":8349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8344,"mutability":"mutable","name":"tokenAddr","nameLocation":"9837:9:25","nodeType":"VariableDeclaration","scope":8362,"src":"9829:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8343,"name":"address","nodeType":"ElementaryTypeName","src":"9829:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8346,"mutability":"mutable","name":"to","nameLocation":"9856:2:25","nodeType":"VariableDeclaration","scope":8362,"src":"9848:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8345,"name":"address","nodeType":"ElementaryTypeName","src":"9848:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8348,"mutability":"mutable","name":"amount","nameLocation":"9868:6:25","nodeType":"VariableDeclaration","scope":8362,"src":"9860:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8347,"name":"uint256","nodeType":"ElementaryTypeName","src":"9860:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9828:47:25"},"returnParameters":{"id":8352,"nodeType":"ParameterList","parameters":[],"src":"9895:0:25"},"scope":8473,"src":"9808:144:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8404,"nodeType":"Block","src":"10321:159:25","statements":[{"assignments":[8383],"declarations":[{"constant":false,"id":8383,"mutability":"mutable","name":"p","nameLocation":"10347:1:25","nodeType":"VariableDeclaration","scope":8404,"src":"10332:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project"},"typeName":{"id":8382,"nodeType":"UserDefinedTypeName","pathNode":{"id":8381,"name":"Project","nameLocations":["10332:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":7826,"src":"10332:7:25"},"referencedDeclaration":7826,"src":"10332:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage_ptr","typeString":"struct BlueCarbonRegistry.Project"}},"visibility":"internal"}],"id":8387,"initialValue":{"baseExpression":{"id":8384,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"10351:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$7826_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Project storage ref)"}},"id":8386,"indexExpression":{"id":8385,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"10360:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10351:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_storage","typeString":"struct BlueCarbonRegistry.Project storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10332:38:25"},{"expression":{"components":[{"expression":{"id":8388,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10389:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10391:4:25","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":7813,"src":"10389:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8390,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10397:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10399:8:25","memberName":"location","nodeType":"MemberAccess","referencedDeclaration":7815,"src":"10397:10:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8392,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10409:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10411:4:25","memberName":"area","nodeType":"MemberAccess","referencedDeclaration":7817,"src":"10409:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8394,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10417:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10419:5:25","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7819,"src":"10417:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8396,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10426:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10428:11:25","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":7821,"src":"10426:13:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8398,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10441:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10443:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7823,"src":"10441:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8400,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"10451:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$7826_memory_ptr","typeString":"struct BlueCarbonRegistry.Project memory"}},"id":8401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10453:18:25","memberName":"totalIssuedCredits","nodeType":"MemberAccess","referencedDeclaration":7825,"src":"10451:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10388:84:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(string memory,string memory,uint256,address,string memory,bool,uint256)"}},"functionReturnParameters":8380,"id":8403,"nodeType":"Return","src":"10381:91:25"}]},"functionSelector":"f0f3f2c8","id":8405,"implemented":true,"kind":"function","modifiers":[],"name":"getProject","nameLocation":"10060:10:25","nodeType":"FunctionDefinition","parameters":{"id":8365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8364,"mutability":"mutable","name":"projectId","nameLocation":"10079:9:25","nodeType":"VariableDeclaration","scope":8405,"src":"10071:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8363,"name":"uint256","nodeType":"ElementaryTypeName","src":"10071:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10070:19:25"},"returnParameters":{"id":8380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8367,"mutability":"mutable","name":"name","nameLocation":"10137:4:25","nodeType":"VariableDeclaration","scope":8405,"src":"10123:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8366,"name":"string","nodeType":"ElementaryTypeName","src":"10123:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8369,"mutability":"mutable","name":"location","nameLocation":"10166:8:25","nodeType":"VariableDeclaration","scope":8405,"src":"10152:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8368,"name":"string","nodeType":"ElementaryTypeName","src":"10152:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8371,"mutability":"mutable","name":"area","nameLocation":"10193:4:25","nodeType":"VariableDeclaration","scope":8405,"src":"10185:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8370,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8373,"mutability":"mutable","name":"ownerAddr","nameLocation":"10216:9:25","nodeType":"VariableDeclaration","scope":8405,"src":"10208:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8372,"name":"address","nodeType":"ElementaryTypeName","src":"10208:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8375,"mutability":"mutable","name":"metadataURI","nameLocation":"10250:11:25","nodeType":"VariableDeclaration","scope":8405,"src":"10236:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8374,"name":"string","nodeType":"ElementaryTypeName","src":"10236:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8377,"mutability":"mutable","name":"exists","nameLocation":"10277:6:25","nodeType":"VariableDeclaration","scope":8405,"src":"10272:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8376,"name":"bool","nodeType":"ElementaryTypeName","src":"10272:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8379,"mutability":"mutable","name":"totalIssued","nameLocation":"10302:11:25","nodeType":"VariableDeclaration","scope":8405,"src":"10294:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8378,"name":"uint256","nodeType":"ElementaryTypeName","src":"10294:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10112:208:25"},"scope":8473,"src":"10051:429:25","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[63,2504],"body":{"id":8420,"nodeType":"Block","src":"10643:62:25","statements":[{"expression":{"arguments":[{"id":8417,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"10685:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8415,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10661:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BlueCarbonRegistry_$8473_$","typeString":"type(contract super BlueCarbonRegistry)"}},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10667:17:25","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":63,"src":"10661:23:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10661:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8414,"id":8419,"nodeType":"Return","src":"10654:43:25"}]},"functionSelector":"01ffc9a7","id":8421,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"10495:17:25","nodeType":"FunctionDefinition","overrides":{"id":8411,"nodeType":"OverrideSpecifier","overrides":[{"id":8409,"name":"ERC721URIStorage","nameLocations":["10581:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":2581,"src":"10581:16:25"},{"id":8410,"name":"AccessControl","nameLocations":["10599:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"10599:13:25"}],"src":"10572:41:25"},"parameters":{"id":8408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8407,"mutability":"mutable","name":"interfaceId","nameLocation":"10520:11:25","nodeType":"VariableDeclaration","scope":8421,"src":"10513:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8406,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10513:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10512:20:25"},"returnParameters":{"id":8414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8421,"src":"10632:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8412,"name":"bool","nodeType":"ElementaryTypeName","src":"10632:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10631:6:25"},"scope":8473,"src":"10486:219:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8463,"nodeType":"Block","src":"10991:177:25","statements":[{"assignments":[8442],"declarations":[{"constant":false,"id":8442,"mutability":"mutable","name":"e","nameLocation":"11018:1:25","nodeType":"VariableDeclaration","scope":8463,"src":"11002:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence"},"typeName":{"id":8441,"nodeType":"UserDefinedTypeName","pathNode":{"id":8440,"name":"Evidence","nameLocations":["11002:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":7841,"src":"11002:8:25"},"referencedDeclaration":7841,"src":"11002:8:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage_ptr","typeString":"struct BlueCarbonRegistry.Evidence"}},"visibility":"internal"}],"id":8446,"initialValue":{"baseExpression":{"id":8443,"name":"evidences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"11022:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Evidence_$7841_storage_$","typeString":"mapping(uint256 => struct BlueCarbonRegistry.Evidence storage ref)"}},"id":8445,"indexExpression":{"id":8444,"name":"evidenceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"11032:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11022:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_storage","typeString":"struct BlueCarbonRegistry.Evidence storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11002:41:25"},{"expression":{"components":[{"expression":{"id":8447,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11062:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11064:9:25","memberName":"projectId","nodeType":"MemberAccess","referencedDeclaration":7828,"src":"11062:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8449,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11075:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11077:12:25","memberName":"evidenceHash","nodeType":"MemberAccess","referencedDeclaration":7830,"src":"11075:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8451,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11091:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11093:11:25","memberName":"evidenceURI","nodeType":"MemberAccess","referencedDeclaration":7832,"src":"11091:13:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8453,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11106:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11108:8:25","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7834,"src":"11106:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8455,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11118:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11120:8:25","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":7836,"src":"11118:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8457,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11130:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11132:9:25","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7838,"src":"11130:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8459,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"11143:1:25","typeDescriptions":{"typeIdentifier":"t_struct$_Evidence_$7841_memory_ptr","typeString":"struct BlueCarbonRegistry.Evidence memory"}},"id":8460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11145:14:25","memberName":"receiptTokenId","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"11143:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11061:99:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,bytes32,string memory,address,bool,uint256,uint256)"}},"functionReturnParameters":8439,"id":8462,"nodeType":"Return","src":"11054:106:25"}]},"functionSelector":"c956f143","id":8464,"implemented":true,"kind":"function","modifiers":[],"name":"getEvidence","nameLocation":"10722:11:25","nodeType":"FunctionDefinition","parameters":{"id":8424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8423,"mutability":"mutable","name":"evidenceId","nameLocation":"10742:10:25","nodeType":"VariableDeclaration","scope":8464,"src":"10734:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10734:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10733:20:25"},"returnParameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8426,"mutability":"mutable","name":"projectId","nameLocation":"10795:9:25","nodeType":"VariableDeclaration","scope":8464,"src":"10787:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8428,"mutability":"mutable","name":"evidenceHash","nameLocation":"10823:12:25","nodeType":"VariableDeclaration","scope":8464,"src":"10815:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10815:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8430,"mutability":"mutable","name":"evidenceURI","nameLocation":"10860:11:25","nodeType":"VariableDeclaration","scope":8464,"src":"10846:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8429,"name":"string","nodeType":"ElementaryTypeName","src":"10846:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8432,"mutability":"mutable","name":"uploader","nameLocation":"10890:8:25","nodeType":"VariableDeclaration","scope":8464,"src":"10882:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8431,"name":"address","nodeType":"ElementaryTypeName","src":"10882:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8434,"mutability":"mutable","name":"verified","nameLocation":"10914:8:25","nodeType":"VariableDeclaration","scope":8464,"src":"10909:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8433,"name":"bool","nodeType":"ElementaryTypeName","src":"10909:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8436,"mutability":"mutable","name":"timestamp","nameLocation":"10941:9:25","nodeType":"VariableDeclaration","scope":8464,"src":"10933:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8435,"name":"uint256","nodeType":"ElementaryTypeName","src":"10933:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8438,"mutability":"mutable","name":"receiptTokenId","nameLocation":"10969:14:25","nodeType":"VariableDeclaration","scope":8464,"src":"10961:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10961:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10776:214:25"},"scope":8473,"src":"10713:455:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8467,"nodeType":"Block","src":"11284:2:25","statements":[]},"id":8468,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8465,"nodeType":"ParameterList","parameters":[],"src":"11264:2:25"},"returnParameters":{"id":8466,"nodeType":"ParameterList","parameters":[],"src":"11284:0:25"},"scope":8473,"src":"11257:29:25","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8471,"nodeType":"Block","src":"11320:2:25","statements":[]},"id":8472,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8469,"nodeType":"ParameterList","parameters":[],"src":"11300:2:25"},"returnParameters":{"id":8470,"nodeType":"ParameterList","parameters":[],"src":"11320:0:25"},"scope":8473,"src":"11292:30:25","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8474,"src":"1362:9963:25","usedErrors":[306,309,393,398,607,612,621,626,631,638,643,648],"usedEvents":[318,327,336,404,547,554,2334,2343,2352,7861,7873,7883,7891,7899,7905]}],"src":"33:11294:25"},"id":25}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220efdf9e4d24a8729c401f0053652df6f272a08b58cec6892e12102244b6fcf93664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xDF SWAP15 0x4D 0x24 0xA8 PUSH19 0x9C401F0053652DF6F272A08B58CEC6892E1210 0x22 PREVRANDAO 0xB6 0xFC 0xF9 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220efdf9e4d24a8729c401f0053652df6f272a08b58cec6892e12102244b6fcf93664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xDF SWAP15 0x4D 0x24 0xA8 PUSH19 0x9C401F0053652DF6F272A08B58CEC6892E1210 0x22 PREVRANDAO 0xB6 0xFC 0xF9 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060a210c8d3a84e178719f272931735caf2c87daf5df0ddad351f335a6d3da2ac64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xA2 LT 0xC8 0xD3 0xA8 0x4E OR DUP8 NOT CALLCODE PUSH19 0x931735CAF2C87DAF5DF0DDAD351F335A6D3DA2 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060a210c8d3a84e178719f272931735caf2c87daf5df0ddad351f335a6d3da2ac64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xA2 LT 0xC8 0xD3 0xA8 0x4E OR DUP8 NOT CALLCODE PUSH19 0x931735CAF2C87DAF5DF0DDAD351F335A6D3DA2 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/BlueCarbonRegistry.sol":{"BlueCarbonRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CreditsMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"evidenceId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"evidenceHash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"evidenceURI","type":"string"},{"indexed":false,"internalType":"address","name":"uploader","type":"address"}],"name":"EvidenceUploaded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"evidenceId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":false,"internalType":"address","name":"verifier","type":"address"},{"indexed":false,"internalType":"uint256","name":"receiptTokenId","type":"uint256"}],"name":"EvidenceVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"ProjectRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"evidenceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ReceiptMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"ReceiptRetired","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERIFIER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"name":"addVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"carbonToken","outputs":[{"internalType":"contract CarbonToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"evidences","outputs":[{"internalType":"uint256","name":"projectId","type":"uint256"},{"internalType":"bytes32","name":"evidenceHash","type":"bytes32"},{"internalType":"string","name":"evidenceURI","type":"string"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"bool","name":"verified","type":"bool"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"receiptTokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"evidenceId","type":"uint256"}],"name":"getEvidence","outputs":[{"internalType":"uint256","name":"projectId","type":"uint256"},{"internalType":"bytes32","name":"evidenceHash","type":"bytes32"},{"internalType":"string","name":"evidenceURI","type":"string"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"bool","name":"verified","type":"bool"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"receiptTokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256"}],"name":"getProject","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"uint256","name":"area","type":"uint256"},{"internalType":"address","name":"ownerAddr","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"totalIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"projects","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"uint256","name":"area","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"totalIssuedCredits","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"uint256","name":"area","type":"uint256"},{"internalType":"address","name":"ownerAddr","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"}],"name":"registerProject","outputs":[{"internalType":"uint256","name":"projectId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"name":"removeVerifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddr","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"retireReceipt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"setCarbonToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalProjects","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferReceipt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256"},{"internalType":"string","name":"metadataURI","type":"string"}],"name":"updateProjectMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256"},{"internalType":"bytes32","name":"evidenceHash","type":"bytes32"},{"internalType":"string","name":"evidenceURI","type":"string"}],"name":"uploadEvidence","outputs":[{"internalType":"uint256","name":"evidenceId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"evidenceId","type":"uint256"},{"internalType":"bool","name":"mintReceipt","type":"bool"},{"internalType":"string","name":"receiptTokenURI","type":"string"},{"internalType":"uint256","name":"mintFungibleAmount","type":"uint256"}],"name":"verifyEvidenceAndIssue","outputs":[{"internalType":"uint256","name":"receiptTokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1431":{"entryPoint":null,"id":1431,"parameterSlots":2,"returnSlots":0},"@_430":{"entryPoint":null,"id":430,"parameterSlots":1,"returnSlots":0},"@_7932":{"entryPoint":null,"id":7932,"parameterSlots":1,"returnSlots":0},"@_checkOwner_464":{"entryPoint":1126,"id":464,"parameterSlots":0,"returnSlots":0},"@_grantRole_257":{"entryPoint":611,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_2698":{"entryPoint":1118,"id":2698,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_526":{"entryPoint":413,"id":526,"parameterSlots":1,"returnSlots":0},"@hasRole_81":{"entryPoint":1011,"id":81,"parameterSlots":2,"returnSlots":1},"@owner_447":{"entryPoint":1279,"id":447,"parameterSlots":0,"returnSlots":1},"@transferOwnership_506":{"entryPoint":865,"id":506,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2267,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2282,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1619,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1916,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1358,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1326,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1751,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1881,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1771,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2057,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1640,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1570,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2029,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1761,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1999,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1523,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1476,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1805,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1321,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1656,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1986,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1857,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1669,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1815,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1376,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1852,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:6778:26","nodeType":"YulBlock","src":"0:6778:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"379:81:26","nodeType":"YulBlock","src":"379:81:26","statements":[{"nativeSrc":"389:65:26","nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nativeSrc":"404:5:26","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nativeSrc":"411:42:26","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:26","nodeType":"YulIdentifier","src":"400:3:26"},"nativeSrc":"400:54:26","nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:26","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:26","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:26","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nativeSrc":"511:51:26","nodeType":"YulBlock","src":"511:51:26","statements":[{"nativeSrc":"521:35:26","nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nativeSrc":"550:5:26","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:26","nodeType":"YulIdentifier","src":"532:17:26"},"nativeSrc":"532:24:26","nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:26","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:26","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:26","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nativeSrc":"611:79:26","nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nativeSrc":"668:16:26","nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:26","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:26","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:26","nodeType":"YulIdentifier","src":"670:6:26"},"nativeSrc":"670:12:26","nodeType":"YulFunctionCall","src":"670:12:26"},"nativeSrc":"670:12:26","nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:26","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nativeSrc":"659:5:26","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:26","nodeType":"YulIdentifier","src":"641:17:26"},"nativeSrc":"641:24:26","nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nativeSrc":"631:2:26","nodeType":"YulIdentifier","src":"631:2:26"},"nativeSrc":"631:35:26","nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nativeSrc":"624:6:26","nodeType":"YulIdentifier","src":"624:6:26"},"nativeSrc":"624:43:26","nodeType":"YulFunctionCall","src":"624:43:26"},"nativeSrc":"621:63:26","nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:26","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nativeSrc":"759:80:26","nodeType":"YulBlock","src":"759:80:26","statements":[{"nativeSrc":"769:22:26","nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:26","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nativeSrc":"778:5:26","nodeType":"YulIdentifier","src":"778:5:26"},"nativeSrc":"778:13:26","nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nativeSrc":"769:5:26","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:26","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:26","nodeType":"YulIdentifier","src":"800:26:26"},"nativeSrc":"800:33:26","nodeType":"YulFunctionCall","src":"800:33:26"},"nativeSrc":"800:33:26","nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:26","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nativeSrc":"745:3:26","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:26","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nativeSrc":"922:274:26","nodeType":"YulBlock","src":"922:274:26","statements":[{"body":{"nativeSrc":"968:83:26","nodeType":"YulBlock","src":"968:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:26","nodeType":"YulIdentifier","src":"970:77:26"},"nativeSrc":"970:79:26","nodeType":"YulFunctionCall","src":"970:79:26"},"nativeSrc":"970:79:26","nodeType":"YulExpressionStatement","src":"970:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:26","nodeType":"YulIdentifier","src":"943:7:26"},{"name":"headStart","nativeSrc":"952:9:26","nodeType":"YulIdentifier","src":"952:9:26"}],"functionName":{"name":"sub","nativeSrc":"939:3:26","nodeType":"YulIdentifier","src":"939:3:26"},"nativeSrc":"939:23:26","nodeType":"YulFunctionCall","src":"939:23:26"},{"kind":"number","nativeSrc":"964:2:26","nodeType":"YulLiteral","src":"964:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:26","nodeType":"YulIdentifier","src":"935:3:26"},"nativeSrc":"935:32:26","nodeType":"YulFunctionCall","src":"935:32:26"},"nativeSrc":"932:119:26","nodeType":"YulIf","src":"932:119:26"},{"nativeSrc":"1061:128:26","nodeType":"YulBlock","src":"1061:128:26","statements":[{"nativeSrc":"1076:15:26","nodeType":"YulVariableDeclaration","src":"1076:15:26","value":{"kind":"number","nativeSrc":"1090:1:26","nodeType":"YulLiteral","src":"1090:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:26","nodeType":"YulTypedName","src":"1080:6:26","type":""}]},{"nativeSrc":"1105:74:26","nodeType":"YulAssignment","src":"1105:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:26","nodeType":"YulIdentifier","src":"1151:9:26"},{"name":"offset","nativeSrc":"1162:6:26","nodeType":"YulIdentifier","src":"1162:6:26"}],"functionName":{"name":"add","nativeSrc":"1147:3:26","nodeType":"YulIdentifier","src":"1147:3:26"},"nativeSrc":"1147:22:26","nodeType":"YulFunctionCall","src":"1147:22:26"},{"name":"dataEnd","nativeSrc":"1171:7:26","nodeType":"YulIdentifier","src":"1171:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:26","nodeType":"YulIdentifier","src":"1115:31:26"},"nativeSrc":"1115:64:26","nodeType":"YulFunctionCall","src":"1115:64:26"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:26","nodeType":"YulIdentifier","src":"1105:6:26"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:26","nodeType":"YulTypedName","src":"892:9:26","type":""},{"name":"dataEnd","nativeSrc":"903:7:26","nodeType":"YulTypedName","src":"903:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:26","nodeType":"YulTypedName","src":"915:6:26","type":""}],"src":"845:351:26"},{"body":{"nativeSrc":"1261:40:26","nodeType":"YulBlock","src":"1261:40:26","statements":[{"nativeSrc":"1272:22:26","nodeType":"YulAssignment","src":"1272:22:26","value":{"arguments":[{"name":"value","nativeSrc":"1288:5:26","nodeType":"YulIdentifier","src":"1288:5:26"}],"functionName":{"name":"mload","nativeSrc":"1282:5:26","nodeType":"YulIdentifier","src":"1282:5:26"},"nativeSrc":"1282:12:26","nodeType":"YulFunctionCall","src":"1282:12:26"},"variableNames":[{"name":"length","nativeSrc":"1272:6:26","nodeType":"YulIdentifier","src":"1272:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1202:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1244:5:26","nodeType":"YulTypedName","src":"1244:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1254:6:26","nodeType":"YulTypedName","src":"1254:6:26","type":""}],"src":"1202:99:26"},{"body":{"nativeSrc":"1335:152:26","nodeType":"YulBlock","src":"1335:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1352:1:26","nodeType":"YulLiteral","src":"1352:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1355:77:26","nodeType":"YulLiteral","src":"1355:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1345:6:26","nodeType":"YulIdentifier","src":"1345:6:26"},"nativeSrc":"1345:88:26","nodeType":"YulFunctionCall","src":"1345:88:26"},"nativeSrc":"1345:88:26","nodeType":"YulExpressionStatement","src":"1345:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1449:1:26","nodeType":"YulLiteral","src":"1449:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"1452:4:26","nodeType":"YulLiteral","src":"1452:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:26","nodeType":"YulIdentifier","src":"1442:6:26"},"nativeSrc":"1442:15:26","nodeType":"YulFunctionCall","src":"1442:15:26"},"nativeSrc":"1442:15:26","nodeType":"YulExpressionStatement","src":"1442:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:26","nodeType":"YulLiteral","src":"1473:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:4:26","nodeType":"YulLiteral","src":"1476:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1466:6:26","nodeType":"YulIdentifier","src":"1466:6:26"},"nativeSrc":"1466:15:26","nodeType":"YulFunctionCall","src":"1466:15:26"},"nativeSrc":"1466:15:26","nodeType":"YulExpressionStatement","src":"1466:15:26"}]},"name":"panic_error_0x41","nativeSrc":"1307:180:26","nodeType":"YulFunctionDefinition","src":"1307:180:26"},{"body":{"nativeSrc":"1521:152:26","nodeType":"YulBlock","src":"1521:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:26","nodeType":"YulLiteral","src":"1538:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:77:26","nodeType":"YulLiteral","src":"1541:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1531:6:26","nodeType":"YulIdentifier","src":"1531:6:26"},"nativeSrc":"1531:88:26","nodeType":"YulFunctionCall","src":"1531:88:26"},"nativeSrc":"1531:88:26","nodeType":"YulExpressionStatement","src":"1531:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1635:1:26","nodeType":"YulLiteral","src":"1635:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"1638:4:26","nodeType":"YulLiteral","src":"1638:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1628:6:26","nodeType":"YulIdentifier","src":"1628:6:26"},"nativeSrc":"1628:15:26","nodeType":"YulFunctionCall","src":"1628:15:26"},"nativeSrc":"1628:15:26","nodeType":"YulExpressionStatement","src":"1628:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:26","nodeType":"YulLiteral","src":"1659:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:4:26","nodeType":"YulLiteral","src":"1662:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1652:6:26","nodeType":"YulIdentifier","src":"1652:6:26"},"nativeSrc":"1652:15:26","nodeType":"YulFunctionCall","src":"1652:15:26"},"nativeSrc":"1652:15:26","nodeType":"YulExpressionStatement","src":"1652:15:26"}]},"name":"panic_error_0x22","nativeSrc":"1493:180:26","nodeType":"YulFunctionDefinition","src":"1493:180:26"},{"body":{"nativeSrc":"1730:269:26","nodeType":"YulBlock","src":"1730:269:26","statements":[{"nativeSrc":"1740:22:26","nodeType":"YulAssignment","src":"1740:22:26","value":{"arguments":[{"name":"data","nativeSrc":"1754:4:26","nodeType":"YulIdentifier","src":"1754:4:26"},{"kind":"number","nativeSrc":"1760:1:26","nodeType":"YulLiteral","src":"1760:1:26","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1750:3:26","nodeType":"YulIdentifier","src":"1750:3:26"},"nativeSrc":"1750:12:26","nodeType":"YulFunctionCall","src":"1750:12:26"},"variableNames":[{"name":"length","nativeSrc":"1740:6:26","nodeType":"YulIdentifier","src":"1740:6:26"}]},{"nativeSrc":"1771:38:26","nodeType":"YulVariableDeclaration","src":"1771:38:26","value":{"arguments":[{"name":"data","nativeSrc":"1801:4:26","nodeType":"YulIdentifier","src":"1801:4:26"},{"kind":"number","nativeSrc":"1807:1:26","nodeType":"YulLiteral","src":"1807:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1797:3:26","nodeType":"YulIdentifier","src":"1797:3:26"},"nativeSrc":"1797:12:26","nodeType":"YulFunctionCall","src":"1797:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1775:18:26","nodeType":"YulTypedName","src":"1775:18:26","type":""}]},{"body":{"nativeSrc":"1848:51:26","nodeType":"YulBlock","src":"1848:51:26","statements":[{"nativeSrc":"1862:27:26","nodeType":"YulAssignment","src":"1862:27:26","value":{"arguments":[{"name":"length","nativeSrc":"1876:6:26","nodeType":"YulIdentifier","src":"1876:6:26"},{"kind":"number","nativeSrc":"1884:4:26","nodeType":"YulLiteral","src":"1884:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1872:3:26","nodeType":"YulIdentifier","src":"1872:3:26"},"nativeSrc":"1872:17:26","nodeType":"YulFunctionCall","src":"1872:17:26"},"variableNames":[{"name":"length","nativeSrc":"1862:6:26","nodeType":"YulIdentifier","src":"1862:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1828:18:26","nodeType":"YulIdentifier","src":"1828:18:26"}],"functionName":{"name":"iszero","nativeSrc":"1821:6:26","nodeType":"YulIdentifier","src":"1821:6:26"},"nativeSrc":"1821:26:26","nodeType":"YulFunctionCall","src":"1821:26:26"},"nativeSrc":"1818:81:26","nodeType":"YulIf","src":"1818:81:26"},{"body":{"nativeSrc":"1951:42:26","nodeType":"YulBlock","src":"1951:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1965:16:26","nodeType":"YulIdentifier","src":"1965:16:26"},"nativeSrc":"1965:18:26","nodeType":"YulFunctionCall","src":"1965:18:26"},"nativeSrc":"1965:18:26","nodeType":"YulExpressionStatement","src":"1965:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1915:18:26","nodeType":"YulIdentifier","src":"1915:18:26"},{"arguments":[{"name":"length","nativeSrc":"1938:6:26","nodeType":"YulIdentifier","src":"1938:6:26"},{"kind":"number","nativeSrc":"1946:2:26","nodeType":"YulLiteral","src":"1946:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1935:2:26","nodeType":"YulIdentifier","src":"1935:2:26"},"nativeSrc":"1935:14:26","nodeType":"YulFunctionCall","src":"1935:14:26"}],"functionName":{"name":"eq","nativeSrc":"1912:2:26","nodeType":"YulIdentifier","src":"1912:2:26"},"nativeSrc":"1912:38:26","nodeType":"YulFunctionCall","src":"1912:38:26"},"nativeSrc":"1909:84:26","nodeType":"YulIf","src":"1909:84:26"}]},"name":"extract_byte_array_length","nativeSrc":"1679:320:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1714:4:26","nodeType":"YulTypedName","src":"1714:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1723:6:26","nodeType":"YulTypedName","src":"1723:6:26","type":""}],"src":"1679:320:26"},{"body":{"nativeSrc":"2059:87:26","nodeType":"YulBlock","src":"2059:87:26","statements":[{"nativeSrc":"2069:11:26","nodeType":"YulAssignment","src":"2069:11:26","value":{"name":"ptr","nativeSrc":"2077:3:26","nodeType":"YulIdentifier","src":"2077:3:26"},"variableNames":[{"name":"data","nativeSrc":"2069:4:26","nodeType":"YulIdentifier","src":"2069:4:26"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2097:1:26","nodeType":"YulLiteral","src":"2097:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"2100:3:26","nodeType":"YulIdentifier","src":"2100:3:26"}],"functionName":{"name":"mstore","nativeSrc":"2090:6:26","nodeType":"YulIdentifier","src":"2090:6:26"},"nativeSrc":"2090:14:26","nodeType":"YulFunctionCall","src":"2090:14:26"},"nativeSrc":"2090:14:26","nodeType":"YulExpressionStatement","src":"2090:14:26"},{"nativeSrc":"2113:26:26","nodeType":"YulAssignment","src":"2113:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"2131:1:26","nodeType":"YulLiteral","src":"2131:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2134:4:26","nodeType":"YulLiteral","src":"2134:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2121:9:26","nodeType":"YulIdentifier","src":"2121:9:26"},"nativeSrc":"2121:18:26","nodeType":"YulFunctionCall","src":"2121:18:26"},"variableNames":[{"name":"data","nativeSrc":"2113:4:26","nodeType":"YulIdentifier","src":"2113:4:26"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2005:141:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2046:3:26","nodeType":"YulTypedName","src":"2046:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2054:4:26","nodeType":"YulTypedName","src":"2054:4:26","type":""}],"src":"2005:141:26"},{"body":{"nativeSrc":"2196:49:26","nodeType":"YulBlock","src":"2196:49:26","statements":[{"nativeSrc":"2206:33:26","nodeType":"YulAssignment","src":"2206:33:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2224:5:26","nodeType":"YulIdentifier","src":"2224:5:26"},{"kind":"number","nativeSrc":"2231:2:26","nodeType":"YulLiteral","src":"2231:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2220:3:26","nodeType":"YulIdentifier","src":"2220:3:26"},"nativeSrc":"2220:14:26","nodeType":"YulFunctionCall","src":"2220:14:26"},{"kind":"number","nativeSrc":"2236:2:26","nodeType":"YulLiteral","src":"2236:2:26","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2216:3:26","nodeType":"YulIdentifier","src":"2216:3:26"},"nativeSrc":"2216:23:26","nodeType":"YulFunctionCall","src":"2216:23:26"},"variableNames":[{"name":"result","nativeSrc":"2206:6:26","nodeType":"YulIdentifier","src":"2206:6:26"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2152:93:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2179:5:26","nodeType":"YulTypedName","src":"2179:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2189:6:26","nodeType":"YulTypedName","src":"2189:6:26","type":""}],"src":"2152:93:26"},{"body":{"nativeSrc":"2304:54:26","nodeType":"YulBlock","src":"2304:54:26","statements":[{"nativeSrc":"2314:37:26","nodeType":"YulAssignment","src":"2314:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"2339:4:26","nodeType":"YulIdentifier","src":"2339:4:26"},{"name":"value","nativeSrc":"2345:5:26","nodeType":"YulIdentifier","src":"2345:5:26"}],"functionName":{"name":"shl","nativeSrc":"2335:3:26","nodeType":"YulIdentifier","src":"2335:3:26"},"nativeSrc":"2335:16:26","nodeType":"YulFunctionCall","src":"2335:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"2314:8:26","nodeType":"YulIdentifier","src":"2314:8:26"}]}]},"name":"shift_left_dynamic","nativeSrc":"2251:107:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2279:4:26","nodeType":"YulTypedName","src":"2279:4:26","type":""},{"name":"value","nativeSrc":"2285:5:26","nodeType":"YulTypedName","src":"2285:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2295:8:26","nodeType":"YulTypedName","src":"2295:8:26","type":""}],"src":"2251:107:26"},{"body":{"nativeSrc":"2440:317:26","nodeType":"YulBlock","src":"2440:317:26","statements":[{"nativeSrc":"2450:35:26","nodeType":"YulVariableDeclaration","src":"2450:35:26","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2471:10:26","nodeType":"YulIdentifier","src":"2471:10:26"},{"kind":"number","nativeSrc":"2483:1:26","nodeType":"YulLiteral","src":"2483:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2467:3:26","nodeType":"YulIdentifier","src":"2467:3:26"},"nativeSrc":"2467:18:26","nodeType":"YulFunctionCall","src":"2467:18:26"},"variables":[{"name":"shiftBits","nativeSrc":"2454:9:26","nodeType":"YulTypedName","src":"2454:9:26","type":""}]},{"nativeSrc":"2494:109:26","nodeType":"YulVariableDeclaration","src":"2494:109:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2525:9:26","nodeType":"YulIdentifier","src":"2525:9:26"},{"kind":"number","nativeSrc":"2536:66:26","nodeType":"YulLiteral","src":"2536:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2506:18:26","nodeType":"YulIdentifier","src":"2506:18:26"},"nativeSrc":"2506:97:26","nodeType":"YulFunctionCall","src":"2506:97:26"},"variables":[{"name":"mask","nativeSrc":"2498:4:26","nodeType":"YulTypedName","src":"2498:4:26","type":""}]},{"nativeSrc":"2612:51:26","nodeType":"YulAssignment","src":"2612:51:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2643:9:26","nodeType":"YulIdentifier","src":"2643:9:26"},{"name":"toInsert","nativeSrc":"2654:8:26","nodeType":"YulIdentifier","src":"2654:8:26"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2624:18:26","nodeType":"YulIdentifier","src":"2624:18:26"},"nativeSrc":"2624:39:26","nodeType":"YulFunctionCall","src":"2624:39:26"},"variableNames":[{"name":"toInsert","nativeSrc":"2612:8:26","nodeType":"YulIdentifier","src":"2612:8:26"}]},{"nativeSrc":"2672:30:26","nodeType":"YulAssignment","src":"2672:30:26","value":{"arguments":[{"name":"value","nativeSrc":"2685:5:26","nodeType":"YulIdentifier","src":"2685:5:26"},{"arguments":[{"name":"mask","nativeSrc":"2696:4:26","nodeType":"YulIdentifier","src":"2696:4:26"}],"functionName":{"name":"not","nativeSrc":"2692:3:26","nodeType":"YulIdentifier","src":"2692:3:26"},"nativeSrc":"2692:9:26","nodeType":"YulFunctionCall","src":"2692:9:26"}],"functionName":{"name":"and","nativeSrc":"2681:3:26","nodeType":"YulIdentifier","src":"2681:3:26"},"nativeSrc":"2681:21:26","nodeType":"YulFunctionCall","src":"2681:21:26"},"variableNames":[{"name":"value","nativeSrc":"2672:5:26","nodeType":"YulIdentifier","src":"2672:5:26"}]},{"nativeSrc":"2711:40:26","nodeType":"YulAssignment","src":"2711:40:26","value":{"arguments":[{"name":"value","nativeSrc":"2724:5:26","nodeType":"YulIdentifier","src":"2724:5:26"},{"arguments":[{"name":"toInsert","nativeSrc":"2735:8:26","nodeType":"YulIdentifier","src":"2735:8:26"},{"name":"mask","nativeSrc":"2745:4:26","nodeType":"YulIdentifier","src":"2745:4:26"}],"functionName":{"name":"and","nativeSrc":"2731:3:26","nodeType":"YulIdentifier","src":"2731:3:26"},"nativeSrc":"2731:19:26","nodeType":"YulFunctionCall","src":"2731:19:26"}],"functionName":{"name":"or","nativeSrc":"2721:2:26","nodeType":"YulIdentifier","src":"2721:2:26"},"nativeSrc":"2721:30:26","nodeType":"YulFunctionCall","src":"2721:30:26"},"variableNames":[{"name":"result","nativeSrc":"2711:6:26","nodeType":"YulIdentifier","src":"2711:6:26"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2364:393:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2401:5:26","nodeType":"YulTypedName","src":"2401:5:26","type":""},{"name":"shiftBytes","nativeSrc":"2408:10:26","nodeType":"YulTypedName","src":"2408:10:26","type":""},{"name":"toInsert","nativeSrc":"2420:8:26","nodeType":"YulTypedName","src":"2420:8:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2433:6:26","nodeType":"YulTypedName","src":"2433:6:26","type":""}],"src":"2364:393:26"},{"body":{"nativeSrc":"2808:32:26","nodeType":"YulBlock","src":"2808:32:26","statements":[{"nativeSrc":"2818:16:26","nodeType":"YulAssignment","src":"2818:16:26","value":{"name":"value","nativeSrc":"2829:5:26","nodeType":"YulIdentifier","src":"2829:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"2818:7:26","nodeType":"YulIdentifier","src":"2818:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2763:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2790:5:26","nodeType":"YulTypedName","src":"2790:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2800:7:26","nodeType":"YulTypedName","src":"2800:7:26","type":""}],"src":"2763:77:26"},{"body":{"nativeSrc":"2878:28:26","nodeType":"YulBlock","src":"2878:28:26","statements":[{"nativeSrc":"2888:12:26","nodeType":"YulAssignment","src":"2888:12:26","value":{"name":"value","nativeSrc":"2895:5:26","nodeType":"YulIdentifier","src":"2895:5:26"},"variableNames":[{"name":"ret","nativeSrc":"2888:3:26","nodeType":"YulIdentifier","src":"2888:3:26"}]}]},"name":"identity","nativeSrc":"2846:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2864:5:26","nodeType":"YulTypedName","src":"2864:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2874:3:26","nodeType":"YulTypedName","src":"2874:3:26","type":""}],"src":"2846:60:26"},{"body":{"nativeSrc":"2972:82:26","nodeType":"YulBlock","src":"2972:82:26","statements":[{"nativeSrc":"2982:66:26","nodeType":"YulAssignment","src":"2982:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3040:5:26","nodeType":"YulIdentifier","src":"3040:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3022:17:26","nodeType":"YulIdentifier","src":"3022:17:26"},"nativeSrc":"3022:24:26","nodeType":"YulFunctionCall","src":"3022:24:26"}],"functionName":{"name":"identity","nativeSrc":"3013:8:26","nodeType":"YulIdentifier","src":"3013:8:26"},"nativeSrc":"3013:34:26","nodeType":"YulFunctionCall","src":"3013:34:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2995:17:26","nodeType":"YulIdentifier","src":"2995:17:26"},"nativeSrc":"2995:53:26","nodeType":"YulFunctionCall","src":"2995:53:26"},"variableNames":[{"name":"converted","nativeSrc":"2982:9:26","nodeType":"YulIdentifier","src":"2982:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2912:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2952:5:26","nodeType":"YulTypedName","src":"2952:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2962:9:26","nodeType":"YulTypedName","src":"2962:9:26","type":""}],"src":"2912:142:26"},{"body":{"nativeSrc":"3107:28:26","nodeType":"YulBlock","src":"3107:28:26","statements":[{"nativeSrc":"3117:12:26","nodeType":"YulAssignment","src":"3117:12:26","value":{"name":"value","nativeSrc":"3124:5:26","nodeType":"YulIdentifier","src":"3124:5:26"},"variableNames":[{"name":"ret","nativeSrc":"3117:3:26","nodeType":"YulIdentifier","src":"3117:3:26"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3060:75:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3093:5:26","nodeType":"YulTypedName","src":"3093:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3103:3:26","nodeType":"YulTypedName","src":"3103:3:26","type":""}],"src":"3060:75:26"},{"body":{"nativeSrc":"3217:193:26","nodeType":"YulBlock","src":"3217:193:26","statements":[{"nativeSrc":"3227:63:26","nodeType":"YulVariableDeclaration","src":"3227:63:26","value":{"arguments":[{"name":"value_0","nativeSrc":"3282:7:26","nodeType":"YulIdentifier","src":"3282:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3251:30:26","nodeType":"YulIdentifier","src":"3251:30:26"},"nativeSrc":"3251:39:26","nodeType":"YulFunctionCall","src":"3251:39:26"},"variables":[{"name":"convertedValue_0","nativeSrc":"3231:16:26","nodeType":"YulTypedName","src":"3231:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3306:4:26","nodeType":"YulIdentifier","src":"3306:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3346:4:26","nodeType":"YulIdentifier","src":"3346:4:26"}],"functionName":{"name":"sload","nativeSrc":"3340:5:26","nodeType":"YulIdentifier","src":"3340:5:26"},"nativeSrc":"3340:11:26","nodeType":"YulFunctionCall","src":"3340:11:26"},{"name":"offset","nativeSrc":"3353:6:26","nodeType":"YulIdentifier","src":"3353:6:26"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3385:16:26","nodeType":"YulIdentifier","src":"3385:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3361:23:26","nodeType":"YulIdentifier","src":"3361:23:26"},"nativeSrc":"3361:41:26","nodeType":"YulFunctionCall","src":"3361:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3312:27:26","nodeType":"YulIdentifier","src":"3312:27:26"},"nativeSrc":"3312:91:26","nodeType":"YulFunctionCall","src":"3312:91:26"}],"functionName":{"name":"sstore","nativeSrc":"3299:6:26","nodeType":"YulIdentifier","src":"3299:6:26"},"nativeSrc":"3299:105:26","nodeType":"YulFunctionCall","src":"3299:105:26"},"nativeSrc":"3299:105:26","nodeType":"YulExpressionStatement","src":"3299:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3141:269:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3194:4:26","nodeType":"YulTypedName","src":"3194:4:26","type":""},{"name":"offset","nativeSrc":"3200:6:26","nodeType":"YulTypedName","src":"3200:6:26","type":""},{"name":"value_0","nativeSrc":"3208:7:26","nodeType":"YulTypedName","src":"3208:7:26","type":""}],"src":"3141:269:26"},{"body":{"nativeSrc":"3465:24:26","nodeType":"YulBlock","src":"3465:24:26","statements":[{"nativeSrc":"3475:8:26","nodeType":"YulAssignment","src":"3475:8:26","value":{"kind":"number","nativeSrc":"3482:1:26","nodeType":"YulLiteral","src":"3482:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3475:3:26","nodeType":"YulIdentifier","src":"3475:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3416:73:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3461:3:26","nodeType":"YulTypedName","src":"3461:3:26","type":""}],"src":"3416:73:26"},{"body":{"nativeSrc":"3548:136:26","nodeType":"YulBlock","src":"3548:136:26","statements":[{"nativeSrc":"3558:46:26","nodeType":"YulVariableDeclaration","src":"3558:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:30:26","nodeType":"YulIdentifier","src":"3572:30:26"},"nativeSrc":"3572:32:26","nodeType":"YulFunctionCall","src":"3572:32:26"},"variables":[{"name":"zero_0","nativeSrc":"3562:6:26","nodeType":"YulTypedName","src":"3562:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3657:4:26","nodeType":"YulIdentifier","src":"3657:4:26"},{"name":"offset","nativeSrc":"3663:6:26","nodeType":"YulIdentifier","src":"3663:6:26"},{"name":"zero_0","nativeSrc":"3671:6:26","nodeType":"YulIdentifier","src":"3671:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3613:43:26","nodeType":"YulIdentifier","src":"3613:43:26"},"nativeSrc":"3613:65:26","nodeType":"YulFunctionCall","src":"3613:65:26"},"nativeSrc":"3613:65:26","nodeType":"YulExpressionStatement","src":"3613:65:26"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3495:189:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3534:4:26","nodeType":"YulTypedName","src":"3534:4:26","type":""},{"name":"offset","nativeSrc":"3540:6:26","nodeType":"YulTypedName","src":"3540:6:26","type":""}],"src":"3495:189:26"},{"body":{"nativeSrc":"3740:136:26","nodeType":"YulBlock","src":"3740:136:26","statements":[{"body":{"nativeSrc":"3807:63:26","nodeType":"YulBlock","src":"3807:63:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3851:5:26","nodeType":"YulIdentifier","src":"3851:5:26"},{"kind":"number","nativeSrc":"3858:1:26","nodeType":"YulLiteral","src":"3858:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3821:29:26","nodeType":"YulIdentifier","src":"3821:29:26"},"nativeSrc":"3821:39:26","nodeType":"YulFunctionCall","src":"3821:39:26"},"nativeSrc":"3821:39:26","nodeType":"YulExpressionStatement","src":"3821:39:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3760:5:26","nodeType":"YulIdentifier","src":"3760:5:26"},{"name":"end","nativeSrc":"3767:3:26","nodeType":"YulIdentifier","src":"3767:3:26"}],"functionName":{"name":"lt","nativeSrc":"3757:2:26","nodeType":"YulIdentifier","src":"3757:2:26"},"nativeSrc":"3757:14:26","nodeType":"YulFunctionCall","src":"3757:14:26"},"nativeSrc":"3750:120:26","nodeType":"YulForLoop","post":{"nativeSrc":"3772:26:26","nodeType":"YulBlock","src":"3772:26:26","statements":[{"nativeSrc":"3774:22:26","nodeType":"YulAssignment","src":"3774:22:26","value":{"arguments":[{"name":"start","nativeSrc":"3787:5:26","nodeType":"YulIdentifier","src":"3787:5:26"},{"kind":"number","nativeSrc":"3794:1:26","nodeType":"YulLiteral","src":"3794:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3783:3:26","nodeType":"YulIdentifier","src":"3783:3:26"},"nativeSrc":"3783:13:26","nodeType":"YulFunctionCall","src":"3783:13:26"},"variableNames":[{"name":"start","nativeSrc":"3774:5:26","nodeType":"YulIdentifier","src":"3774:5:26"}]}]},"pre":{"nativeSrc":"3754:2:26","nodeType":"YulBlock","src":"3754:2:26","statements":[]},"src":"3750:120:26"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3690:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3728:5:26","nodeType":"YulTypedName","src":"3728:5:26","type":""},{"name":"end","nativeSrc":"3735:3:26","nodeType":"YulTypedName","src":"3735:3:26","type":""}],"src":"3690:186:26"},{"body":{"nativeSrc":"3961:464:26","nodeType":"YulBlock","src":"3961:464:26","statements":[{"body":{"nativeSrc":"3987:431:26","nodeType":"YulBlock","src":"3987:431:26","statements":[{"nativeSrc":"4001:54:26","nodeType":"YulVariableDeclaration","src":"4001:54:26","value":{"arguments":[{"name":"array","nativeSrc":"4049:5:26","nodeType":"YulIdentifier","src":"4049:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4017:31:26","nodeType":"YulIdentifier","src":"4017:31:26"},"nativeSrc":"4017:38:26","nodeType":"YulFunctionCall","src":"4017:38:26"},"variables":[{"name":"dataArea","nativeSrc":"4005:8:26","nodeType":"YulTypedName","src":"4005:8:26","type":""}]},{"nativeSrc":"4068:63:26","nodeType":"YulVariableDeclaration","src":"4068:63:26","value":{"arguments":[{"name":"dataArea","nativeSrc":"4091:8:26","nodeType":"YulIdentifier","src":"4091:8:26"},{"arguments":[{"name":"startIndex","nativeSrc":"4119:10:26","nodeType":"YulIdentifier","src":"4119:10:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4101:17:26","nodeType":"YulIdentifier","src":"4101:17:26"},"nativeSrc":"4101:29:26","nodeType":"YulFunctionCall","src":"4101:29:26"}],"functionName":{"name":"add","nativeSrc":"4087:3:26","nodeType":"YulIdentifier","src":"4087:3:26"},"nativeSrc":"4087:44:26","nodeType":"YulFunctionCall","src":"4087:44:26"},"variables":[{"name":"deleteStart","nativeSrc":"4072:11:26","nodeType":"YulTypedName","src":"4072:11:26","type":""}]},{"body":{"nativeSrc":"4288:27:26","nodeType":"YulBlock","src":"4288:27:26","statements":[{"nativeSrc":"4290:23:26","nodeType":"YulAssignment","src":"4290:23:26","value":{"name":"dataArea","nativeSrc":"4305:8:26","nodeType":"YulIdentifier","src":"4305:8:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"4290:11:26","nodeType":"YulIdentifier","src":"4290:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4272:10:26","nodeType":"YulIdentifier","src":"4272:10:26"},{"kind":"number","nativeSrc":"4284:2:26","nodeType":"YulLiteral","src":"4284:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4269:2:26","nodeType":"YulIdentifier","src":"4269:2:26"},"nativeSrc":"4269:18:26","nodeType":"YulFunctionCall","src":"4269:18:26"},"nativeSrc":"4266:49:26","nodeType":"YulIf","src":"4266:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4357:11:26","nodeType":"YulIdentifier","src":"4357:11:26"},{"arguments":[{"name":"dataArea","nativeSrc":"4374:8:26","nodeType":"YulIdentifier","src":"4374:8:26"},{"arguments":[{"name":"len","nativeSrc":"4402:3:26","nodeType":"YulIdentifier","src":"4402:3:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4384:17:26","nodeType":"YulIdentifier","src":"4384:17:26"},"nativeSrc":"4384:22:26","nodeType":"YulFunctionCall","src":"4384:22:26"}],"functionName":{"name":"add","nativeSrc":"4370:3:26","nodeType":"YulIdentifier","src":"4370:3:26"},"nativeSrc":"4370:37:26","nodeType":"YulFunctionCall","src":"4370:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4328:28:26","nodeType":"YulIdentifier","src":"4328:28:26"},"nativeSrc":"4328:80:26","nodeType":"YulFunctionCall","src":"4328:80:26"},"nativeSrc":"4328:80:26","nodeType":"YulExpressionStatement","src":"4328:80:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3978:3:26","nodeType":"YulIdentifier","src":"3978:3:26"},{"kind":"number","nativeSrc":"3983:2:26","nodeType":"YulLiteral","src":"3983:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3975:2:26","nodeType":"YulIdentifier","src":"3975:2:26"},"nativeSrc":"3975:11:26","nodeType":"YulFunctionCall","src":"3975:11:26"},"nativeSrc":"3972:446:26","nodeType":"YulIf","src":"3972:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3882:543:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3937:5:26","nodeType":"YulTypedName","src":"3937:5:26","type":""},{"name":"len","nativeSrc":"3944:3:26","nodeType":"YulTypedName","src":"3944:3:26","type":""},{"name":"startIndex","nativeSrc":"3949:10:26","nodeType":"YulTypedName","src":"3949:10:26","type":""}],"src":"3882:543:26"},{"body":{"nativeSrc":"4494:54:26","nodeType":"YulBlock","src":"4494:54:26","statements":[{"nativeSrc":"4504:37:26","nodeType":"YulAssignment","src":"4504:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"4529:4:26","nodeType":"YulIdentifier","src":"4529:4:26"},{"name":"value","nativeSrc":"4535:5:26","nodeType":"YulIdentifier","src":"4535:5:26"}],"functionName":{"name":"shr","nativeSrc":"4525:3:26","nodeType":"YulIdentifier","src":"4525:3:26"},"nativeSrc":"4525:16:26","nodeType":"YulFunctionCall","src":"4525:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"4504:8:26","nodeType":"YulIdentifier","src":"4504:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4431:117:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4469:4:26","nodeType":"YulTypedName","src":"4469:4:26","type":""},{"name":"value","nativeSrc":"4475:5:26","nodeType":"YulTypedName","src":"4475:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4485:8:26","nodeType":"YulTypedName","src":"4485:8:26","type":""}],"src":"4431:117:26"},{"body":{"nativeSrc":"4605:118:26","nodeType":"YulBlock","src":"4605:118:26","statements":[{"nativeSrc":"4615:68:26","nodeType":"YulVariableDeclaration","src":"4615:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4664:1:26","nodeType":"YulLiteral","src":"4664:1:26","type":"","value":"8"},{"name":"bytes","nativeSrc":"4667:5:26","nodeType":"YulIdentifier","src":"4667:5:26"}],"functionName":{"name":"mul","nativeSrc":"4660:3:26","nodeType":"YulIdentifier","src":"4660:3:26"},"nativeSrc":"4660:13:26","nodeType":"YulFunctionCall","src":"4660:13:26"},{"arguments":[{"kind":"number","nativeSrc":"4679:1:26","nodeType":"YulLiteral","src":"4679:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4675:3:26","nodeType":"YulIdentifier","src":"4675:3:26"},"nativeSrc":"4675:6:26","nodeType":"YulFunctionCall","src":"4675:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4631:28:26","nodeType":"YulIdentifier","src":"4631:28:26"},"nativeSrc":"4631:51:26","nodeType":"YulFunctionCall","src":"4631:51:26"}],"functionName":{"name":"not","nativeSrc":"4627:3:26","nodeType":"YulIdentifier","src":"4627:3:26"},"nativeSrc":"4627:56:26","nodeType":"YulFunctionCall","src":"4627:56:26"},"variables":[{"name":"mask","nativeSrc":"4619:4:26","nodeType":"YulTypedName","src":"4619:4:26","type":""}]},{"nativeSrc":"4692:25:26","nodeType":"YulAssignment","src":"4692:25:26","value":{"arguments":[{"name":"data","nativeSrc":"4706:4:26","nodeType":"YulIdentifier","src":"4706:4:26"},{"name":"mask","nativeSrc":"4712:4:26","nodeType":"YulIdentifier","src":"4712:4:26"}],"functionName":{"name":"and","nativeSrc":"4702:3:26","nodeType":"YulIdentifier","src":"4702:3:26"},"nativeSrc":"4702:15:26","nodeType":"YulFunctionCall","src":"4702:15:26"},"variableNames":[{"name":"result","nativeSrc":"4692:6:26","nodeType":"YulIdentifier","src":"4692:6:26"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4554:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4582:4:26","nodeType":"YulTypedName","src":"4582:4:26","type":""},{"name":"bytes","nativeSrc":"4588:5:26","nodeType":"YulTypedName","src":"4588:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4598:6:26","nodeType":"YulTypedName","src":"4598:6:26","type":""}],"src":"4554:169:26"},{"body":{"nativeSrc":"4809:214:26","nodeType":"YulBlock","src":"4809:214:26","statements":[{"nativeSrc":"4942:37:26","nodeType":"YulAssignment","src":"4942:37:26","value":{"arguments":[{"name":"data","nativeSrc":"4969:4:26","nodeType":"YulIdentifier","src":"4969:4:26"},{"name":"len","nativeSrc":"4975:3:26","nodeType":"YulIdentifier","src":"4975:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4950:18:26","nodeType":"YulIdentifier","src":"4950:18:26"},"nativeSrc":"4950:29:26","nodeType":"YulFunctionCall","src":"4950:29:26"},"variableNames":[{"name":"data","nativeSrc":"4942:4:26","nodeType":"YulIdentifier","src":"4942:4:26"}]},{"nativeSrc":"4988:29:26","nodeType":"YulAssignment","src":"4988:29:26","value":{"arguments":[{"name":"data","nativeSrc":"4999:4:26","nodeType":"YulIdentifier","src":"4999:4:26"},{"arguments":[{"kind":"number","nativeSrc":"5009:1:26","nodeType":"YulLiteral","src":"5009:1:26","type":"","value":"2"},{"name":"len","nativeSrc":"5012:3:26","nodeType":"YulIdentifier","src":"5012:3:26"}],"functionName":{"name":"mul","nativeSrc":"5005:3:26","nodeType":"YulIdentifier","src":"5005:3:26"},"nativeSrc":"5005:11:26","nodeType":"YulFunctionCall","src":"5005:11:26"}],"functionName":{"name":"or","nativeSrc":"4996:2:26","nodeType":"YulIdentifier","src":"4996:2:26"},"nativeSrc":"4996:21:26","nodeType":"YulFunctionCall","src":"4996:21:26"},"variableNames":[{"name":"used","nativeSrc":"4988:4:26","nodeType":"YulIdentifier","src":"4988:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4728:295:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4790:4:26","nodeType":"YulTypedName","src":"4790:4:26","type":""},{"name":"len","nativeSrc":"4796:3:26","nodeType":"YulTypedName","src":"4796:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4804:4:26","nodeType":"YulTypedName","src":"4804:4:26","type":""}],"src":"4728:295:26"},{"body":{"nativeSrc":"5120:1303:26","nodeType":"YulBlock","src":"5120:1303:26","statements":[{"nativeSrc":"5131:51:26","nodeType":"YulVariableDeclaration","src":"5131:51:26","value":{"arguments":[{"name":"src","nativeSrc":"5178:3:26","nodeType":"YulIdentifier","src":"5178:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5145:32:26","nodeType":"YulIdentifier","src":"5145:32:26"},"nativeSrc":"5145:37:26","nodeType":"YulFunctionCall","src":"5145:37:26"},"variables":[{"name":"newLen","nativeSrc":"5135:6:26","nodeType":"YulTypedName","src":"5135:6:26","type":""}]},{"body":{"nativeSrc":"5267:22:26","nodeType":"YulBlock","src":"5267:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5269:16:26","nodeType":"YulIdentifier","src":"5269:16:26"},"nativeSrc":"5269:18:26","nodeType":"YulFunctionCall","src":"5269:18:26"},"nativeSrc":"5269:18:26","nodeType":"YulExpressionStatement","src":"5269:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5239:6:26","nodeType":"YulIdentifier","src":"5239:6:26"},{"kind":"number","nativeSrc":"5247:18:26","nodeType":"YulLiteral","src":"5247:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5236:2:26","nodeType":"YulIdentifier","src":"5236:2:26"},"nativeSrc":"5236:30:26","nodeType":"YulFunctionCall","src":"5236:30:26"},"nativeSrc":"5233:56:26","nodeType":"YulIf","src":"5233:56:26"},{"nativeSrc":"5299:52:26","nodeType":"YulVariableDeclaration","src":"5299:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5345:4:26","nodeType":"YulIdentifier","src":"5345:4:26"}],"functionName":{"name":"sload","nativeSrc":"5339:5:26","nodeType":"YulIdentifier","src":"5339:5:26"},"nativeSrc":"5339:11:26","nodeType":"YulFunctionCall","src":"5339:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5313:25:26","nodeType":"YulIdentifier","src":"5313:25:26"},"nativeSrc":"5313:38:26","nodeType":"YulFunctionCall","src":"5313:38:26"},"variables":[{"name":"oldLen","nativeSrc":"5303:6:26","nodeType":"YulTypedName","src":"5303:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5444:4:26","nodeType":"YulIdentifier","src":"5444:4:26"},{"name":"oldLen","nativeSrc":"5450:6:26","nodeType":"YulIdentifier","src":"5450:6:26"},{"name":"newLen","nativeSrc":"5458:6:26","nodeType":"YulIdentifier","src":"5458:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5398:45:26","nodeType":"YulIdentifier","src":"5398:45:26"},"nativeSrc":"5398:67:26","nodeType":"YulFunctionCall","src":"5398:67:26"},"nativeSrc":"5398:67:26","nodeType":"YulExpressionStatement","src":"5398:67:26"},{"nativeSrc":"5475:18:26","nodeType":"YulVariableDeclaration","src":"5475:18:26","value":{"kind":"number","nativeSrc":"5492:1:26","nodeType":"YulLiteral","src":"5492:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5479:9:26","nodeType":"YulTypedName","src":"5479:9:26","type":""}]},{"nativeSrc":"5503:17:26","nodeType":"YulAssignment","src":"5503:17:26","value":{"kind":"number","nativeSrc":"5516:4:26","nodeType":"YulLiteral","src":"5516:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5503:9:26","nodeType":"YulIdentifier","src":"5503:9:26"}]},{"cases":[{"body":{"nativeSrc":"5567:611:26","nodeType":"YulBlock","src":"5567:611:26","statements":[{"nativeSrc":"5581:37:26","nodeType":"YulVariableDeclaration","src":"5581:37:26","value":{"arguments":[{"name":"newLen","nativeSrc":"5600:6:26","nodeType":"YulIdentifier","src":"5600:6:26"},{"arguments":[{"kind":"number","nativeSrc":"5612:4:26","nodeType":"YulLiteral","src":"5612:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5608:3:26","nodeType":"YulIdentifier","src":"5608:3:26"},"nativeSrc":"5608:9:26","nodeType":"YulFunctionCall","src":"5608:9:26"}],"functionName":{"name":"and","nativeSrc":"5596:3:26","nodeType":"YulIdentifier","src":"5596:3:26"},"nativeSrc":"5596:22:26","nodeType":"YulFunctionCall","src":"5596:22:26"},"variables":[{"name":"loopEnd","nativeSrc":"5585:7:26","nodeType":"YulTypedName","src":"5585:7:26","type":""}]},{"nativeSrc":"5632:51:26","nodeType":"YulVariableDeclaration","src":"5632:51:26","value":{"arguments":[{"name":"slot","nativeSrc":"5678:4:26","nodeType":"YulIdentifier","src":"5678:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5646:31:26","nodeType":"YulIdentifier","src":"5646:31:26"},"nativeSrc":"5646:37:26","nodeType":"YulFunctionCall","src":"5646:37:26"},"variables":[{"name":"dstPtr","nativeSrc":"5636:6:26","nodeType":"YulTypedName","src":"5636:6:26","type":""}]},{"nativeSrc":"5696:10:26","nodeType":"YulVariableDeclaration","src":"5696:10:26","value":{"kind":"number","nativeSrc":"5705:1:26","nodeType":"YulLiteral","src":"5705:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5700:1:26","nodeType":"YulTypedName","src":"5700:1:26","type":""}]},{"body":{"nativeSrc":"5764:163:26","nodeType":"YulBlock","src":"5764:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5789:6:26","nodeType":"YulIdentifier","src":"5789:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5807:3:26","nodeType":"YulIdentifier","src":"5807:3:26"},{"name":"srcOffset","nativeSrc":"5812:9:26","nodeType":"YulIdentifier","src":"5812:9:26"}],"functionName":{"name":"add","nativeSrc":"5803:3:26","nodeType":"YulIdentifier","src":"5803:3:26"},"nativeSrc":"5803:19:26","nodeType":"YulFunctionCall","src":"5803:19:26"}],"functionName":{"name":"mload","nativeSrc":"5797:5:26","nodeType":"YulIdentifier","src":"5797:5:26"},"nativeSrc":"5797:26:26","nodeType":"YulFunctionCall","src":"5797:26:26"}],"functionName":{"name":"sstore","nativeSrc":"5782:6:26","nodeType":"YulIdentifier","src":"5782:6:26"},"nativeSrc":"5782:42:26","nodeType":"YulFunctionCall","src":"5782:42:26"},"nativeSrc":"5782:42:26","nodeType":"YulExpressionStatement","src":"5782:42:26"},{"nativeSrc":"5841:24:26","nodeType":"YulAssignment","src":"5841:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5855:6:26","nodeType":"YulIdentifier","src":"5855:6:26"},{"kind":"number","nativeSrc":"5863:1:26","nodeType":"YulLiteral","src":"5863:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5851:3:26","nodeType":"YulIdentifier","src":"5851:3:26"},"nativeSrc":"5851:14:26","nodeType":"YulFunctionCall","src":"5851:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"5841:6:26","nodeType":"YulIdentifier","src":"5841:6:26"}]},{"nativeSrc":"5882:31:26","nodeType":"YulAssignment","src":"5882:31:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5899:9:26","nodeType":"YulIdentifier","src":"5899:9:26"},{"kind":"number","nativeSrc":"5910:2:26","nodeType":"YulLiteral","src":"5910:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5895:3:26","nodeType":"YulIdentifier","src":"5895:3:26"},"nativeSrc":"5895:18:26","nodeType":"YulFunctionCall","src":"5895:18:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"5882:9:26","nodeType":"YulIdentifier","src":"5882:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5730:1:26","nodeType":"YulIdentifier","src":"5730:1:26"},{"name":"loopEnd","nativeSrc":"5733:7:26","nodeType":"YulIdentifier","src":"5733:7:26"}],"functionName":{"name":"lt","nativeSrc":"5727:2:26","nodeType":"YulIdentifier","src":"5727:2:26"},"nativeSrc":"5727:14:26","nodeType":"YulFunctionCall","src":"5727:14:26"},"nativeSrc":"5719:208:26","nodeType":"YulForLoop","post":{"nativeSrc":"5742:21:26","nodeType":"YulBlock","src":"5742:21:26","statements":[{"nativeSrc":"5744:17:26","nodeType":"YulAssignment","src":"5744:17:26","value":{"arguments":[{"name":"i","nativeSrc":"5753:1:26","nodeType":"YulIdentifier","src":"5753:1:26"},{"kind":"number","nativeSrc":"5756:4:26","nodeType":"YulLiteral","src":"5756:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5749:3:26","nodeType":"YulIdentifier","src":"5749:3:26"},"nativeSrc":"5749:12:26","nodeType":"YulFunctionCall","src":"5749:12:26"},"variableNames":[{"name":"i","nativeSrc":"5744:1:26","nodeType":"YulIdentifier","src":"5744:1:26"}]}]},"pre":{"nativeSrc":"5723:3:26","nodeType":"YulBlock","src":"5723:3:26","statements":[]},"src":"5719:208:26"},{"body":{"nativeSrc":"5963:156:26","nodeType":"YulBlock","src":"5963:156:26","statements":[{"nativeSrc":"5981:43:26","nodeType":"YulVariableDeclaration","src":"5981:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6008:3:26","nodeType":"YulIdentifier","src":"6008:3:26"},{"name":"srcOffset","nativeSrc":"6013:9:26","nodeType":"YulIdentifier","src":"6013:9:26"}],"functionName":{"name":"add","nativeSrc":"6004:3:26","nodeType":"YulIdentifier","src":"6004:3:26"},"nativeSrc":"6004:19:26","nodeType":"YulFunctionCall","src":"6004:19:26"}],"functionName":{"name":"mload","nativeSrc":"5998:5:26","nodeType":"YulIdentifier","src":"5998:5:26"},"nativeSrc":"5998:26:26","nodeType":"YulFunctionCall","src":"5998:26:26"},"variables":[{"name":"lastValue","nativeSrc":"5985:9:26","nodeType":"YulTypedName","src":"5985:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6048:6:26","nodeType":"YulIdentifier","src":"6048:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"6075:9:26","nodeType":"YulIdentifier","src":"6075:9:26"},{"arguments":[{"name":"newLen","nativeSrc":"6090:6:26","nodeType":"YulIdentifier","src":"6090:6:26"},{"kind":"number","nativeSrc":"6098:4:26","nodeType":"YulLiteral","src":"6098:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6086:3:26","nodeType":"YulIdentifier","src":"6086:3:26"},"nativeSrc":"6086:17:26","nodeType":"YulFunctionCall","src":"6086:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6056:18:26","nodeType":"YulIdentifier","src":"6056:18:26"},"nativeSrc":"6056:48:26","nodeType":"YulFunctionCall","src":"6056:48:26"}],"functionName":{"name":"sstore","nativeSrc":"6041:6:26","nodeType":"YulIdentifier","src":"6041:6:26"},"nativeSrc":"6041:64:26","nodeType":"YulFunctionCall","src":"6041:64:26"},"nativeSrc":"6041:64:26","nodeType":"YulExpressionStatement","src":"6041:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5946:7:26","nodeType":"YulIdentifier","src":"5946:7:26"},{"name":"newLen","nativeSrc":"5955:6:26","nodeType":"YulIdentifier","src":"5955:6:26"}],"functionName":{"name":"lt","nativeSrc":"5943:2:26","nodeType":"YulIdentifier","src":"5943:2:26"},"nativeSrc":"5943:19:26","nodeType":"YulFunctionCall","src":"5943:19:26"},"nativeSrc":"5940:179:26","nodeType":"YulIf","src":"5940:179:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6139:4:26","nodeType":"YulIdentifier","src":"6139:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6153:6:26","nodeType":"YulIdentifier","src":"6153:6:26"},{"kind":"number","nativeSrc":"6161:1:26","nodeType":"YulLiteral","src":"6161:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6149:3:26","nodeType":"YulIdentifier","src":"6149:3:26"},"nativeSrc":"6149:14:26","nodeType":"YulFunctionCall","src":"6149:14:26"},{"kind":"number","nativeSrc":"6165:1:26","nodeType":"YulLiteral","src":"6165:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6145:3:26","nodeType":"YulIdentifier","src":"6145:3:26"},"nativeSrc":"6145:22:26","nodeType":"YulFunctionCall","src":"6145:22:26"}],"functionName":{"name":"sstore","nativeSrc":"6132:6:26","nodeType":"YulIdentifier","src":"6132:6:26"},"nativeSrc":"6132:36:26","nodeType":"YulFunctionCall","src":"6132:36:26"},"nativeSrc":"6132:36:26","nodeType":"YulExpressionStatement","src":"6132:36:26"}]},"nativeSrc":"5560:618:26","nodeType":"YulCase","src":"5560:618:26","value":{"kind":"number","nativeSrc":"5565:1:26","nodeType":"YulLiteral","src":"5565:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"6195:222:26","nodeType":"YulBlock","src":"6195:222:26","statements":[{"nativeSrc":"6209:14:26","nodeType":"YulVariableDeclaration","src":"6209:14:26","value":{"kind":"number","nativeSrc":"6222:1:26","nodeType":"YulLiteral","src":"6222:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6213:5:26","nodeType":"YulTypedName","src":"6213:5:26","type":""}]},{"body":{"nativeSrc":"6246:67:26","nodeType":"YulBlock","src":"6246:67:26","statements":[{"nativeSrc":"6264:35:26","nodeType":"YulAssignment","src":"6264:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6283:3:26","nodeType":"YulIdentifier","src":"6283:3:26"},{"name":"srcOffset","nativeSrc":"6288:9:26","nodeType":"YulIdentifier","src":"6288:9:26"}],"functionName":{"name":"add","nativeSrc":"6279:3:26","nodeType":"YulIdentifier","src":"6279:3:26"},"nativeSrc":"6279:19:26","nodeType":"YulFunctionCall","src":"6279:19:26"}],"functionName":{"name":"mload","nativeSrc":"6273:5:26","nodeType":"YulIdentifier","src":"6273:5:26"},"nativeSrc":"6273:26:26","nodeType":"YulFunctionCall","src":"6273:26:26"},"variableNames":[{"name":"value","nativeSrc":"6264:5:26","nodeType":"YulIdentifier","src":"6264:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"6239:6:26","nodeType":"YulIdentifier","src":"6239:6:26"},"nativeSrc":"6236:77:26","nodeType":"YulIf","src":"6236:77:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6333:4:26","nodeType":"YulIdentifier","src":"6333:4:26"},{"arguments":[{"name":"value","nativeSrc":"6392:5:26","nodeType":"YulIdentifier","src":"6392:5:26"},{"name":"newLen","nativeSrc":"6399:6:26","nodeType":"YulIdentifier","src":"6399:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6339:52:26","nodeType":"YulIdentifier","src":"6339:52:26"},"nativeSrc":"6339:67:26","nodeType":"YulFunctionCall","src":"6339:67:26"}],"functionName":{"name":"sstore","nativeSrc":"6326:6:26","nodeType":"YulIdentifier","src":"6326:6:26"},"nativeSrc":"6326:81:26","nodeType":"YulFunctionCall","src":"6326:81:26"},"nativeSrc":"6326:81:26","nodeType":"YulExpressionStatement","src":"6326:81:26"}]},"nativeSrc":"6187:230:26","nodeType":"YulCase","src":"6187:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5540:6:26","nodeType":"YulIdentifier","src":"5540:6:26"},{"kind":"number","nativeSrc":"5548:2:26","nodeType":"YulLiteral","src":"5548:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5537:2:26","nodeType":"YulIdentifier","src":"5537:2:26"},"nativeSrc":"5537:14:26","nodeType":"YulFunctionCall","src":"5537:14:26"},"nativeSrc":"5530:887:26","nodeType":"YulSwitch","src":"5530:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5028:1395:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5109:4:26","nodeType":"YulTypedName","src":"5109:4:26","type":""},{"name":"src","nativeSrc":"5115:3:26","nodeType":"YulTypedName","src":"5115:3:26","type":""}],"src":"5028:1395:26"},{"body":{"nativeSrc":"6494:53:26","nodeType":"YulBlock","src":"6494:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:26","nodeType":"YulIdentifier","src":"6511:3:26"},{"arguments":[{"name":"value","nativeSrc":"6534:5:26","nodeType":"YulIdentifier","src":"6534:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:26","nodeType":"YulIdentifier","src":"6516:17:26"},"nativeSrc":"6516:24:26","nodeType":"YulFunctionCall","src":"6516:24:26"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:26","nodeType":"YulIdentifier","src":"6504:6:26"},"nativeSrc":"6504:37:26","nodeType":"YulFunctionCall","src":"6504:37:26"},"nativeSrc":"6504:37:26","nodeType":"YulExpressionStatement","src":"6504:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:26","nodeType":"YulTypedName","src":"6482:5:26","type":""},{"name":"pos","nativeSrc":"6489:3:26","nodeType":"YulTypedName","src":"6489:3:26","type":""}],"src":"6429:118:26"},{"body":{"nativeSrc":"6651:124:26","nodeType":"YulBlock","src":"6651:124:26","statements":[{"nativeSrc":"6661:26:26","nodeType":"YulAssignment","src":"6661:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:26","nodeType":"YulIdentifier","src":"6673:9:26"},{"kind":"number","nativeSrc":"6684:2:26","nodeType":"YulLiteral","src":"6684:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:26","nodeType":"YulIdentifier","src":"6669:3:26"},"nativeSrc":"6669:18:26","nodeType":"YulFunctionCall","src":"6669:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:26","nodeType":"YulIdentifier","src":"6661:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:26","nodeType":"YulIdentifier","src":"6741:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:26","nodeType":"YulIdentifier","src":"6754:9:26"},{"kind":"number","nativeSrc":"6765:1:26","nodeType":"YulLiteral","src":"6765:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:26","nodeType":"YulIdentifier","src":"6750:3:26"},"nativeSrc":"6750:17:26","nodeType":"YulFunctionCall","src":"6750:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:26","nodeType":"YulIdentifier","src":"6697:43:26"},"nativeSrc":"6697:71:26","nodeType":"YulFunctionCall","src":"6697:71:26"},"nativeSrc":"6697:71:26","nodeType":"YulExpressionStatement","src":"6697:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:26","nodeType":"YulTypedName","src":"6623:9:26","type":""},{"name":"value0","nativeSrc":"6635:6:26","nodeType":"YulTypedName","src":"6635:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:26","nodeType":"YulTypedName","src":"6646:4:26","type":""}],"src":"6553:222:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x56D5 CODESIZE SUB DUP1 PUSH2 0x56D5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426C7565436172626F6E52656365697074000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4243520000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x156 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x187 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP3 PUSH2 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x197 DUP2 PUSH2 0x361 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x905 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275 DUP4 DUP4 PUSH2 0x3F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x356 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2F3 PUSH2 0x45E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x35B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36F PUSH2 0x466 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x19D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x474 PUSH2 0x45E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x498 PUSH2 0x4FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4FD JUMPI PUSH2 0x4C1 PUSH2 0x45E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 PUSH2 0x52E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x569 DUP2 PUSH2 0x54E JUMP JUMPDEST DUP2 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x586 DUP2 PUSH2 0x560 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B0 DUP5 DUP3 DUP6 ADD PUSH2 0x577 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x63A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x64D JUMPI PUSH2 0x64C PUSH2 0x5F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x6B5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x6BF DUP7 DUP4 PUSH2 0x678 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x706 PUSH2 0x701 PUSH2 0x6FC DUP5 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x720 DUP4 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x734 PUSH2 0x72C DUP3 PUSH2 0x70D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x685 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x749 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x754 DUP2 DUP5 DUP5 PUSH2 0x717 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x778 JUMPI PUSH2 0x76D PUSH1 0x0 DUP3 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x75A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x78E DUP2 PUSH2 0x653 JUMP JUMPDEST PUSH2 0x797 DUP5 PUSH2 0x668 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7A6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7BA PUSH2 0x7B2 DUP6 PUSH2 0x668 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x759 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E0 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7C2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP4 DUP4 PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x812 DUP3 PUSH2 0x5B9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82B JUMPI PUSH2 0x82A PUSH2 0x5C4 JUMP JUMPDEST JUMPDEST PUSH2 0x835 DUP3 SLOAD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x840 DUP3 DUP3 DUP6 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x873 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x861 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x86B DUP6 DUP3 PUSH2 0x7ED JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x881 DUP7 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8A9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x884 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8C6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8C2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7CF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8E4 DUP2 PUSH2 0x54E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DC1 DUP1 PUSH2 0x914 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x234 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9000B3D6 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE7705DB6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8E4 JUMPI DUP1 PUSH4 0xF0F3F2C8 EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x964 JUMPI DUP1 PUSH4 0xF7F7229E EQ PUSH2 0x98D JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x7AA JUMPI DUP1 PUSH4 0xC956F143 EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xCA2DFD0A EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x853 JUMPI DUP1 PUSH4 0xE4A49B46 EQ PUSH2 0x87C JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0xC6BDEE61 EQ PUSH2 0x781 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x9000B3D6 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x91546C34 EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x6B0 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x80ABA8FE EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x82A71EF2 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x83F8187C EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5CB JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x40C80852 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4D2 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x107046BD GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x2E4546CD EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3F1 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DC JUMPI PUSH2 0x235 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x3BAD JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x3C80 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0xEAC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xF49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x3C80 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x524 PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x3F93 JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x578 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x40C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x646 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x414B JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69A PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C5 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F0 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x41D3 JUMP JUMPDEST PUSH2 0x17E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x756 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x3C80 JUMP JUMPDEST PUSH2 0x17F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x42B4 JUMP JUMPDEST PUSH2 0x1885 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x18AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x821 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x851 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x1C0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0x1C48 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x4337 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8CE PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x43BA JUMP JUMPDEST PUSH2 0x209B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x948 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x212F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95B SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x986 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x23D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x3BAD JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x9C1 DUP3 PUSH2 0x2525 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x9D7 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA03 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 PUSH2 0x259F JUMP JUMPDEST POP PUSH2 0xA6F DUP3 PUSH2 0x2627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA88 DUP3 DUP3 PUSH2 0xA83 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x266C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADB SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xB3D SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB69 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB99 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xBF7 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC23 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC70 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC45 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC70 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC53 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP4 DUP4 PUSH2 0xD14 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x267E JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8F JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x445A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xDE4 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE10 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0xEB5 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xEBE DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0xEC8 DUP4 DUP4 PUSH2 0x28AC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF44 DUP3 DUP3 PUSH2 0x299E JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF69 DUP3 PUSH2 0x102F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0x2A91 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x675F826C7B38AA0548DE6F37E8E4CF39A6F9A62F7BCD3828BCB6FC7BE280233E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x102A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1885 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A DUP3 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x110D PUSH1 0x0 PUSH2 0x2B9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1119 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117F SWAP1 PUSH2 0x4549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x4598 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x182A3C36D70101C00C1251172CAFD87F69E7E51CAA24AB27EE82E181D0B5C347 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1309 SWAP3 SWAP2 SWAP1 PUSH2 0x4840 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP1 PUSH2 0x48C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP2 SLOAD PUSH2 0x13B4 SWAP1 PUSH2 0x48E3 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP DUP4 DUP2 PUSH32 0x9F07FB2089847EAA89482A475227F9748F6F8670F45C70651A9929C3B2FF0BD4 DUP6 DUP6 CALLER PUSH1 0x40 MLOAD PUSH2 0x14F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x492B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x153F DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1569 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0xEAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C7 SWAP1 PUSH2 0x48C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D8 PUSH2 0x1508 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1672 JUMPI POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A8 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1753 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x177F SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x17F5 PUSH2 0x17EE PUSH2 0x2664 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2C64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1801 PUSH2 0x2B17 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183C SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x185B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187F SWAP2 SWAP1 PUSH2 0x4A13 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1890 DUP5 DUP5 DUP5 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x18A4 PUSH2 0x189B PUSH2 0x2664 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2DD3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x18B2 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1918 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1970 DUP3 PUSH2 0x259F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1991 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19BD SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A0A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A0A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A1B PUSH2 0x2F84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A30 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1A65 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4D SWAP3 SWAP2 SWAP1 PUSH2 0x4AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1A73 JUMP JUMPDEST PUSH2 0x1A6E DUP5 PUSH2 0x2F9B JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1AC7 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AF3 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B15 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH1 0xC0 ADD MLOAD SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x1C1A DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1C44 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x1C48 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C51 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x1C5A DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1C64 DUP4 DUP4 PUSH2 0x299E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH2 0x1C96 DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEB SWAP1 PUSH2 0x4B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1D46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3D SWAP1 PUSH2 0x4BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 ISZERO PUSH2 0x1E3C JUMPI PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7C SWAP1 PUSH2 0x48E3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xC SLOAD SWAP3 POP PUSH2 0x1DB4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x3004 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT ISZERO PUSH2 0x1DC9 JUMPI PUSH2 0x1DC8 DUP4 DUP7 PUSH2 0x3022 JUMP JUMPDEST JUMPDEST DUP3 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 PUSH32 0xDDBF9D9B2B8EC52D81EBDD4358971424E6DCFD1343B0F03B2DCEB9C85C168E35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x202A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECD SWAP1 PUSH2 0x4C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP3 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F72 SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0xD PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FCE SWAP2 SWAP1 PUSH2 0x4598 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD SLOAD PUSH32 0x921C08E825069E4D980F75F8C9D39AB505649F98D18F620F19759E16F0E3BA6B DUP8 PUSH1 0x40 MLOAD PUSH2 0x2020 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP8 PUSH32 0x268DAA65823D8FA0335B05C9DE4ADF451D91E6FEEE90C955137643B9A98625CF CALLER DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x2065 SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x216A SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2196 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x21FC SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2228 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2275 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x224A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2275 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2258 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0x22EE SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x231A SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2367 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2367 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x234A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH1 0xC0 ADD MLOAD SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH2 0x23DC PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x244E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2445 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2457 DUP2 PUSH2 0x2B9E JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x247A DUP3 PUSH2 0x102F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C7 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24DB CALLER DUP4 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 PUSH32 0xDDBF9D9B2B8EC52D81EBDD4358971424E6DCFD1343B0F03B2DCEB9C85C168E35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2598 JUMPI POP PUSH2 0x2597 DUP3 PUSH2 0x307E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25AB DUP4 PUSH2 0x30DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x261E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2615 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2679 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x311C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x268A DUP5 PUSH2 0x30DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26CC JUMPI PUSH2 0x26CB DUP2 DUP5 DUP7 PUSH2 0x32E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x275D JUMPI PUSH2 0x270E PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27E0 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x28A9 DUP2 PUSH2 0x28A4 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x33A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B8 DUP4 DUP4 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x2993 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2930 PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AA DUP4 DUP4 PUSH2 0x16D9 JUMP JUMPDEST ISZERO PUSH2 0x2A86 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2A23 PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA0 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B13 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B0A SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2B1F PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B3D PUSH2 0x1508 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B9C JUMPI PUSH2 0x2B60 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B93 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CD5 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CCC SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2DC6 SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2F7D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E32 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2E6E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6B SWAP2 SWAP1 PUSH2 0x4D06 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2EF2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E9E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2EEA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2F7B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F72 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2FA6 DUP3 PUSH2 0x259F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2FB1 PUSH2 0x2F84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2FD1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2FFC JUMP JUMPDEST DUP1 PUSH2 0x2FDB DUP5 PUSH2 0x33F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FEC SWAP3 SWAP2 SWAP1 PUSH2 0x4AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x301E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34C4 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3042 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3072 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x30D8 JUMPI POP PUSH2 0x30D7 DUP3 PUSH2 0x34E8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x3155 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3289 JUMPI PUSH1 0x0 PUSH2 0x3165 DUP5 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x31D0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x31E3 JUMPI POP PUSH2 0x31E1 DUP2 DUP5 PUSH2 0x209B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3225 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321C SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3287 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x32EC DUP4 DUP4 DUP4 PUSH2 0x35CA JUMP JUMPDEST PUSH2 0x33A0 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3361 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3358 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3397 SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x33AF DUP3 DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x33F2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E9 SWAP3 SWAP2 SWAP1 PUSH2 0x4D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3405 DUP5 PUSH2 0x368B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3424 JUMPI PUSH2 0x3423 PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3456 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x34B9 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34AD JUMPI PUSH2 0x34AC PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3464 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34CE DUP4 DUP4 PUSH2 0x37DE JUMP JUMPDEST PUSH2 0x34E3 PUSH2 0x34D9 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2DD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x35B3 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x35C3 JUMPI POP PUSH2 0x35C2 DUP3 PUSH2 0x38D7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3682 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3643 JUMPI POP PUSH2 0x3642 DUP5 DUP5 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3681 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3669 DUP4 PUSH2 0x2627 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x36E9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x36DF JUMPI PUSH2 0x36DE PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3726 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x371C JUMPI PUSH2 0x371B PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3755 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x374B JUMPI PUSH2 0x374A PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x377E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3774 JUMPI PUSH2 0x3773 PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x37A3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3799 JUMPI PUSH2 0x3798 PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x37C6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x37BC JUMPI PUSH2 0x37BB PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x37D5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3850 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3847 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x385E DUP4 DUP4 PUSH1 0x0 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x38D2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C9 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x398A DUP2 PUSH2 0x3955 JUMP JUMPDEST DUP2 EQ PUSH2 0x3995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39A7 DUP2 PUSH2 0x3981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C3 JUMPI PUSH2 0x39C2 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39D1 DUP5 DUP3 DUP6 ADD PUSH2 0x3998 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39EF DUP2 PUSH2 0x39DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A4A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A72 DUP3 PUSH2 0x3A10 JUMP JUMPDEST PUSH2 0x3A7C DUP2 DUP6 PUSH2 0x3A1B JUMP JUMPDEST SWAP4 POP PUSH2 0x3A8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x3A95 DUP2 PUSH2 0x3A56 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ABA DUP2 DUP5 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AD5 DUP2 PUSH2 0x3AC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AF2 DUP2 PUSH2 0x3ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B0E JUMPI PUSH2 0x3B0D PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B1C DUP5 DUP3 DUP6 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B50 DUP3 PUSH2 0x3B25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B60 DUP2 PUSH2 0x3B45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B8A DUP2 PUSH2 0x3B45 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BA7 DUP2 PUSH2 0x3B81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BC4 JUMPI PUSH2 0x3BC3 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BD2 DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3BE3 DUP6 DUP3 DUP7 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF6 DUP2 PUSH2 0x3AC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C16 DUP2 DUP11 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C2A DUP2 DUP10 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C39 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x3C46 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3B57 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3C58 DUP2 DUP7 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C67 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x39E6 JUMP JUMPDEST PUSH2 0x3C74 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C99 JUMPI PUSH2 0x3C98 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CA7 DUP7 DUP3 DUP8 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3CB8 DUP7 DUP3 DUP8 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3CC9 DUP7 DUP3 DUP8 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE6 DUP2 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D03 DUP2 PUSH2 0x3CDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D1F JUMPI PUSH2 0x3D1E PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D2D DUP5 DUP3 DUP6 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D3F DUP2 PUSH2 0x3CD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3D75 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x3D82 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x3D36 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D94 DUP2 DUP9 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x3DB0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x39E6 JUMP JUMPDEST PUSH2 0x3DBD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x3DCA PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DED JUMPI PUSH2 0x3DEC PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DFB DUP6 DUP3 DUP7 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E0C DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E2C JUMPI PUSH2 0x3E2B PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E3A DUP5 DUP3 DUP6 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3EA0 DUP3 PUSH2 0x3A56 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3EBF JUMPI PUSH2 0x3EBE PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED2 PUSH2 0x3941 JUMP JUMPDEST SWAP1 POP PUSH2 0x3EDE DUP3 DUP3 PUSH2 0x3E97 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EFE JUMPI PUSH2 0x3EFD PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH2 0x3F07 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F36 PUSH2 0x3F31 DUP5 PUSH2 0x3EE3 JUMP JUMPDEST PUSH2 0x3EC8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3F52 JUMPI PUSH2 0x3F51 PUSH2 0x3E63 JUMP JUMPDEST JUMPDEST PUSH2 0x3F5D DUP5 DUP3 DUP6 PUSH2 0x3F14 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F7A JUMPI PUSH2 0x3F79 PUSH2 0x3E5E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F8A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3FAF JUMPI PUSH2 0x3FAE PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FCD JUMPI PUSH2 0x3FCC PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x3FD9 DUP9 DUP3 DUP10 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FFA JUMPI PUSH2 0x3FF9 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x4006 DUP9 DUP3 DUP10 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4017 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4028 DUP9 DUP3 DUP10 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4049 JUMPI PUSH2 0x4048 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x4055 DUP9 DUP3 DUP10 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4087 PUSH2 0x4082 PUSH2 0x407D DUP5 PUSH2 0x3B25 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x3B25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4099 DUP3 PUSH2 0x406C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40AB DUP3 PUSH2 0x408E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40BB DUP2 PUSH2 0x40A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40F5 JUMPI PUSH2 0x40F4 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4103 DUP7 DUP3 DUP8 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4114 DUP7 DUP3 DUP8 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4135 JUMPI PUSH2 0x4134 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x4141 DUP7 DUP3 DUP8 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4162 JUMPI PUSH2 0x4161 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4170 DUP6 DUP3 DUP7 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4191 JUMPI PUSH2 0x4190 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x419D DUP6 DUP3 DUP7 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B0 DUP2 PUSH2 0x39DA JUMP JUMPDEST DUP2 EQ PUSH2 0x41BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41CD DUP2 PUSH2 0x41A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41EA JUMPI PUSH2 0x41E9 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41F8 DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4209 DUP6 DUP3 DUP7 ADD PUSH2 0x41BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x422E JUMPI PUSH2 0x422D PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH2 0x4237 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 PUSH2 0x4252 DUP5 PUSH2 0x4213 JUMP JUMPDEST PUSH2 0x3EC8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4273 JUMPI PUSH2 0x4272 PUSH2 0x3E63 JUMP JUMPDEST JUMPDEST PUSH2 0x427E DUP5 DUP3 DUP6 PUSH2 0x3F14 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x429B JUMPI PUSH2 0x429A PUSH2 0x3E5E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x42AB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4244 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42CE JUMPI PUSH2 0x42CD PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42DC DUP8 DUP3 DUP9 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x42ED DUP8 DUP3 DUP9 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42FE DUP8 DUP3 DUP9 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x431F JUMPI PUSH2 0x431E PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x432B DUP8 DUP3 DUP9 ADD PUSH2 0x4286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4351 JUMPI PUSH2 0x4350 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x435F DUP8 DUP3 DUP9 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4370 DUP8 DUP3 DUP9 ADD PUSH2 0x41BE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4391 JUMPI PUSH2 0x4390 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x439D DUP8 DUP3 DUP9 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x43AE DUP8 DUP3 DUP9 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43D1 JUMPI PUSH2 0x43D0 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43DF DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43F0 DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4441 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4454 JUMPI PUSH2 0x4453 PUSH2 0x43FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x446F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x447C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x4489 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C7 PUSH1 0xF DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x44D2 DUP3 PUSH2 0x4491 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44F6 DUP2 PUSH2 0x44BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E6572206164647265737320726571756972656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4533 PUSH1 0x16 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x453E DUP3 PUSH2 0x44FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4562 DUP2 PUSH2 0x4526 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45A3 DUP3 PUSH2 0x3AC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x45AE DUP4 PUSH2 0x3AC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x45C6 JUMPI PUSH2 0x45C5 PUSH2 0x4569 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x462E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x45F1 JUMP JUMPDEST PUSH2 0x4638 DUP7 DUP4 PUSH2 0x45F1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466B PUSH2 0x4666 PUSH2 0x4661 DUP5 PUSH2 0x3AC2 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x3AC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4685 DUP4 PUSH2 0x4650 JUMP JUMPDEST PUSH2 0x4699 PUSH2 0x4691 DUP3 PUSH2 0x4672 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x45FE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x46AE PUSH2 0x46A1 JUMP JUMPDEST PUSH2 0x46B9 DUP2 DUP5 DUP5 PUSH2 0x467C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x46DD JUMPI PUSH2 0x46D2 PUSH1 0x0 DUP3 PUSH2 0x46A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x46BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4722 JUMPI PUSH2 0x46F3 DUP2 PUSH2 0x45CC JUMP JUMPDEST PUSH2 0x46FC DUP5 PUSH2 0x45E1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x470B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x471F PUSH2 0x4717 DUP6 PUSH2 0x45E1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x46BE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4745 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4727 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x475E DUP4 DUP4 PUSH2 0x4734 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4777 DUP3 PUSH2 0x3A10 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4790 JUMPI PUSH2 0x478F PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH2 0x479A DUP3 SLOAD PUSH2 0x4429 JUMP JUMPDEST PUSH2 0x47A5 DUP3 DUP3 DUP6 PUSH2 0x46E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x47D8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x47C6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x47D0 DUP6 DUP3 PUSH2 0x4752 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4838 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x47E6 DUP7 PUSH2 0x45CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x480E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47E9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x482B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4827 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4734 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485A DUP2 DUP6 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x486E DUP2 DUP5 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726F6A656374206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48AD PUSH1 0x11 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x48B8 DUP3 PUSH2 0x4877 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48DC DUP2 PUSH2 0x48A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48EE DUP3 PUSH2 0x3AC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4920 JUMPI PUSH2 0x491F PUSH2 0x4569 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4940 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3D36 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4952 DUP2 DUP6 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x4961 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E6572206F722070726F6A656374206F776E65720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499F PUSH1 0x1B DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x49AA DUP3 PUSH2 0x4969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49CE DUP2 PUSH2 0x4992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x49EA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x49F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4A0D DUP2 PUSH2 0x41A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A29 JUMPI PUSH2 0x4A28 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A37 DUP5 DUP3 DUP6 ADD PUSH2 0x49FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A76 PUSH1 0x15 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4A81 DUP3 PUSH2 0x4A40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AA5 DUP2 PUSH2 0x4A69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC2 DUP3 PUSH2 0x3A10 JUMP JUMPDEST PUSH2 0x4ACC DUP2 DUP6 PUSH2 0x4AAC JUMP JUMPDEST SWAP4 POP PUSH2 0x4ADC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A2C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF4 DUP3 DUP6 PUSH2 0x4AB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B00 DUP3 DUP5 PUSH2 0x4AB7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45766964656E6365206E6F7420666F756E640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B42 PUSH1 0x12 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4B4D DUP3 PUSH2 0x4B0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B71 DUP2 PUSH2 0x4B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766572696669656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAE PUSH1 0x10 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB9 DUP3 PUSH2 0x4B78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BDD DUP2 PUSH2 0x4BA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172626F6E20746F6B656E206E6F7420736574000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1A PUSH1 0x14 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4C25 DUP3 PUSH2 0x4BE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C49 DUP2 PUSH2 0x4C0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C77 DUP3 PUSH2 0x4C50 JUMP JUMPDEST PUSH2 0x4C81 DUP2 DUP6 PUSH2 0x4C5B JUMP JUMPDEST SWAP4 POP PUSH2 0x4C91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x4C9A DUP2 PUSH2 0x3A56 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4CBA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x4CC7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x4CD4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3BED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4CE6 DUP2 DUP5 PUSH2 0x4C6C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D00 DUP2 PUSH2 0x3981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D1C JUMPI PUSH2 0x4D1B PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D2A DUP5 DUP3 DUP6 ADD PUSH2 0x4CF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4D48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x4D55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x2D LOG1 MLOAD MCOPY COINBASE 0xF8 PUSH17 0x6D0B4109EEA5CCD35B073D67C40F4928BD SWAP15 0xF DUP6 0xBE 0xBB SWAP10 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1362:9963:25:-:0;;;3334:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3404:5;1380:113:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3464:37:25::2;2241:4:0;3475:18:25::0;::::2;3495:5;3464:10;;;:37;;:::i;:::-;;3512:32;1481:26;3538:5;3512:10;;;:32;;:::i;:::-;;3588:24;3606:5;3588:17;;;:24;;:::i;:::-;3334:286:::0;1362:9963;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2543:215:2:-;1531:13;:11;;;:13;;:::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;;;:28;;:::i;:::-;2543:215:::0;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;1796:162:2:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;1362:9963:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":6108,"id":30,"parameterSlots":0,"returnSlots":0},"@VERIFIER_ROLE_7802":{"entryPoint":8311,"id":7802,"parameterSlots":0,"returnSlots":0},"@_8468":{"entryPoint":null,"id":8468,"parameterSlots":0,"returnSlots":0},"@_8472":{"entryPoint":null,"id":8472,"parameterSlots":0,"returnSlots":0},"@_approve_2185":{"entryPoint":9836,"id":2185,"parameterSlots":3,"returnSlots":0},"@_approve_2251":{"entryPoint":12572,"id":2251,"parameterSlots":4,"returnSlots":0},"@_baseURI_1566":{"entryPoint":12164,"id":1566,"parameterSlots":0,"returnSlots":1},"@_burn_2059":{"entryPoint":10897,"id":2059,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_1825":{"entryPoint":13025,"id":1825,"parameterSlots":3,"returnSlots":0},"@_checkOwner_464":{"entryPoint":11031,"id":464,"parameterSlots":0,"returnSlots":0},"@_checkRole_115":{"entryPoint":13221,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":10392,"id":94,"parameterSlots":1,"returnSlots":0},"@_getApproved_1752":{"entryPoint":9767,"id":1752,"parameterSlots":1,"returnSlots":1},"@_grantRole_257":{"entryPoint":10412,"id":257,"parameterSlots":2,"returnSlots":1},"@_isAuthorized_1788":{"entryPoint":13770,"id":1788,"parameterSlots":3,"returnSlots":1},"@_mint_1981":{"entryPoint":14302,"id":1981,"parameterSlots":2,"returnSlots":0},"@_msgSender_2698":{"entryPoint":9828,"id":2698,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1739":{"entryPoint":12511,"id":1739,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2317":{"entryPoint":9631,"id":2317,"parameterSlots":1,"returnSlots":1},"@_revokeRole_295":{"entryPoint":10654,"id":295,"parameterSlots":2,"returnSlots":1},"@_safeMint_1996":{"entryPoint":12292,"id":1996,"parameterSlots":2,"returnSlots":0},"@_safeMint_2026":{"entryPoint":13508,"id":2026,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2288":{"entryPoint":11364,"id":2288,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2580":{"entryPoint":12322,"id":2580,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_526":{"entryPoint":11166,"id":526,"parameterSlots":1,"returnSlots":0},"@_update_1931":{"entryPoint":9854,"id":1931,"parameterSlots":3,"returnSlots":1},"@addVerifier_7970":{"entryPoint":5426,"id":7970,"parameterSlots":1,"returnSlots":0},"@approve_1582":{"entryPoint":2678,"id":1582,"parameterSlots":2,"returnSlots":0},"@balanceOf_1490":{"entryPoint":4161,"id":1490,"parameterSlots":1,"returnSlots":1},"@carbonToken_7805":{"entryPoint":4890,"id":7805,"parameterSlots":0,"returnSlots":0},"@checkOnERC721Received_2685":{"entryPoint":11731,"id":2685,"parameterSlots":5,"returnSlots":0},"@evidences_7851":{"entryPoint":3509,"id":7851,"parameterSlots":0,"returnSlots":0},"@getApproved_1599":{"entryPoint":2650,"id":1599,"parameterSlots":1,"returnSlots":1},"@getEvidence_8464":{"entryPoint":6776,"id":8464,"parameterSlots":1,"returnSlots":7},"@getProject_8405":{"entryPoint":8495,"id":8405,"parameterSlots":1,"returnSlots":7},"@getRoleAdmin_129":{"entryPoint":3477,"id":129,"parameterSlots":1,"returnSlots":1},"@grantRole_148":{"entryPoint":3756,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":5849,"id":81,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_1632":{"entryPoint":8347,"id":1632,"parameterSlots":2,"returnSlots":1},"@log10_5659":{"entryPoint":13963,"id":5659,"parameterSlots":1,"returnSlots":1},"@name_1512":{"entryPoint":2504,"id":1512,"parameterSlots":0,"returnSlots":1},"@ownerOf_1503":{"entryPoint":4143,"id":1503,"parameterSlots":1,"returnSlots":1},"@owner_447":{"entryPoint":5384,"id":447,"parameterSlots":0,"returnSlots":1},"@projects_7846":{"entryPoint":2700,"id":7846,"parameterSlots":0,"returnSlots":0},"@registerProject_8044":{"entryPoint":4367,"id":8044,"parameterSlots":5,"returnSlots":1},"@removeVerifier_7984":{"entryPoint":7181,"id":7984,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_478":{"entryPoint":4347,"id":478,"parameterSlots":0,"returnSlots":0},"@renounceRole_190":{"entryPoint":3790,"id":190,"parameterSlots":2,"returnSlots":0},"@rescueERC20_8362":{"entryPoint":6137,"id":8362,"parameterSlots":3,"returnSlots":0},"@retireReceipt_8341":{"entryPoint":3913,"id":8341,"parameterSlots":1,"returnSlots":0},"@revokeRole_167":{"entryPoint":7240,"id":167,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1696":{"entryPoint":4111,"id":1696,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1726":{"entryPoint":6277,"id":1726,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1615":{"entryPoint":6115,"id":1615,"parameterSlots":2,"returnSlots":0},"@setCarbonToken_7956":{"entryPoint":6314,"id":7956,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1462":{"entryPoint":13544,"id":1462,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2504":{"entryPoint":12414,"id":2504,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4193":{"entryPoint":14551,"id":4193,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":9509,"id":63,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8421":{"entryPoint":2486,"id":8421,"parameterSlots":1,"returnSlots":1},"@symbol_1521":{"entryPoint":5956,"id":1521,"parameterSlots":0,"returnSlots":1},"@toString_2882":{"entryPoint":13302,"id":2882,"parameterSlots":1,"returnSlots":1},"@tokenURI_1557":{"entryPoint":12187,"id":1557,"parameterSlots":1,"returnSlots":1},"@tokenURI_2561":{"entryPoint":6501,"id":2561,"parameterSlots":1,"returnSlots":1},"@totalProjects_7807":{"entryPoint":6102,"id":7807,"parameterSlots":0,"returnSlots":0},"@transferFrom_1678":{"entryPoint":3219,"id":1678,"parameterSlots":3,"returnSlots":0},"@transferOwnership_506":{"entryPoint":9172,"id":506,"parameterSlots":1,"returnSlots":0},"@transferReceipt_8314":{"entryPoint":9306,"id":8314,"parameterSlots":2,"returnSlots":0},"@updateProjectMetadata_8084":{"entryPoint":5485,"id":8084,"parameterSlots":2,"returnSlots":0},"@uploadEvidence_8135":{"entryPoint":4928,"id":8135,"parameterSlots":3,"returnSlots":1},"@verifyEvidenceAndIssue_8282":{"entryPoint":7274,"id":8282,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":16964,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":16163,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":16830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":18942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":15604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":14744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":19697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":17030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":16229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":15894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":17338,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":15488,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":17076,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":16851,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":15277,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":18963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":15625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":15830,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":14765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":19718,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_string_memory_ptr":{"entryPoint":16275,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":15096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_boolt_string_memory_ptrt_uint256":{"entryPoint":17207,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptr":{"entryPoint":16604,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":16715,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":15191,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14822,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15670,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":19564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_CarbonToken_$7790_to_t_address_fromStack":{"entryPoint":16562,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72_to_t_string_memory_ptr_fromStack":{"entryPoint":18834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb_to_t_string_memory_ptr_fromStack":{"entryPoint":19253,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a_to_t_string_memory_ptr_fromStack":{"entryPoint":17702,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5_to_t_string_memory_ptr_fromStack":{"entryPoint":19361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611_to_t_string_memory_ptr_fromStack":{"entryPoint":18592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f_to_t_string_memory_ptr_fromStack":{"entryPoint":19469,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack":{"entryPoint":19049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack":{"entryPoint":17594,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15341,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19176,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19621,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":19763,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":18901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":17498,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":15685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_address__to_t_bytes32_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":18731,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_CarbonToken_$7790__to_t_address__fromStack_reversed":{"entryPoint":16577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18496,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed":{"entryPoint":15356,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17737,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18627,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17629,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":15939,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_bool_t_uint256_t_uint256__to_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_bool_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15712,"id":null,"parameterSlots":8,"returnSlots":1},"allocate_memory":{"entryPoint":16072,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14657,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":16915,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":16099,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":17868,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":19536,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14864,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":19547,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14875,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19116,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17816,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":18145,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":15173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14810,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":15571,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":14677,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15141,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15042,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":18110,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_CarbonToken_$7790_to_t_address":{"entryPoint":16544,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":16526,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":16492,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":18000,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":18286,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":16148,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14892,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":17889,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":17449,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":18258,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":16023,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":16482,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18659,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":18228,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":17769,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":19804,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":17402,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":15976,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":18034,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":15966,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":15971,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14672,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14667,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14934,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":17905,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":18215,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":18086,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72":{"entryPoint":18793,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb":{"entryPoint":19212,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a":{"entryPoint":17661,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5":{"entryPoint":19320,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611":{"entryPoint":18551,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f":{"entryPoint":19428,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743":{"entryPoint":19008,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9":{"entryPoint":17553,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":17918,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":18044,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15233,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16807,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15581,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":14721,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15052,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":18081,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:38882:26","nodeType":"YulBlock","src":"0:38882:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"378:105:26","nodeType":"YulBlock","src":"378:105:26","statements":[{"nativeSrc":"388:89:26","nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nativeSrc":"403:5:26","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nativeSrc":"410:66:26","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:26","nodeType":"YulIdentifier","src":"399:3:26"},"nativeSrc":"399:78:26","nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:26","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:26","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:26","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nativeSrc":"531:78:26","nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nativeSrc":"587:16:26","nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:26","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:26","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:26","nodeType":"YulIdentifier","src":"589:6:26"},"nativeSrc":"589:12:26","nodeType":"YulFunctionCall","src":"589:12:26"},"nativeSrc":"589:12:26","nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:26","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nativeSrc":"578:5:26","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:26","nodeType":"YulIdentifier","src":"561:16:26"},"nativeSrc":"561:23:26","nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nativeSrc":"551:2:26","nodeType":"YulIdentifier","src":"551:2:26"},"nativeSrc":"551:34:26","nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nativeSrc":"544:6:26","nodeType":"YulIdentifier","src":"544:6:26"},"nativeSrc":"544:42:26","nodeType":"YulFunctionCall","src":"544:42:26"},"nativeSrc":"541:62:26","nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:26","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nativeSrc":"666:86:26","nodeType":"YulBlock","src":"666:86:26","statements":[{"nativeSrc":"676:29:26","nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:26","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:26","nodeType":"YulIdentifier","src":"685:12:26"},"nativeSrc":"685:20:26","nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nativeSrc":"676:5:26","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:26","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:26","nodeType":"YulIdentifier","src":"714:25:26"},"nativeSrc":"714:32:26","nodeType":"YulFunctionCall","src":"714:32:26"},"nativeSrc":"714:32:26","nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:26","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nativeSrc":"652:3:26","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:26","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nativeSrc":"823:262:26","nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nativeSrc":"869:83:26","nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:26","nodeType":"YulIdentifier","src":"871:77:26"},"nativeSrc":"871:79:26","nodeType":"YulFunctionCall","src":"871:79:26"},"nativeSrc":"871:79:26","nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:26","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nativeSrc":"853:9:26","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nativeSrc":"840:3:26","nodeType":"YulIdentifier","src":"840:3:26"},"nativeSrc":"840:23:26","nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nativeSrc":"865:2:26","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:26","nodeType":"YulIdentifier","src":"836:3:26"},"nativeSrc":"836:32:26","nodeType":"YulFunctionCall","src":"836:32:26"},"nativeSrc":"833:119:26","nodeType":"YulIf","src":"833:119:26"},{"nativeSrc":"962:116:26","nodeType":"YulBlock","src":"962:116:26","statements":[{"nativeSrc":"977:15:26","nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nativeSrc":"991:1:26","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:26","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nativeSrc":"1006:62:26","nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:26","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nativeSrc":"1051:6:26","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nativeSrc":"1036:3:26","nodeType":"YulIdentifier","src":"1036:3:26"},"nativeSrc":"1036:22:26","nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nativeSrc":"1060:7:26","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:26","nodeType":"YulIdentifier","src":"1016:19:26"},"nativeSrc":"1016:52:26","nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:26","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:26","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nativeSrc":"804:7:26","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:26","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nativeSrc":"1133:48:26","nodeType":"YulBlock","src":"1133:48:26","statements":[{"nativeSrc":"1143:32:26","nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:26","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:26","nodeType":"YulIdentifier","src":"1161:6:26"},"nativeSrc":"1161:13:26","nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:26","nodeType":"YulIdentifier","src":"1154:6:26"},"nativeSrc":"1154:21:26","nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:26","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:26","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:26","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nativeSrc":"1246:50:26","nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:26","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nativeSrc":"1283:5:26","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:26","nodeType":"YulIdentifier","src":"1268:14:26"},"nativeSrc":"1268:21:26","nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:26","nodeType":"YulIdentifier","src":"1256:6:26"},"nativeSrc":"1256:34:26","nodeType":"YulFunctionCall","src":"1256:34:26"},"nativeSrc":"1256:34:26","nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:26","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nativeSrc":"1241:3:26","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nativeSrc":"1394:118:26","nodeType":"YulBlock","src":"1394:118:26","statements":[{"nativeSrc":"1404:26:26","nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:26","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nativeSrc":"1427:2:26","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:26","nodeType":"YulIdentifier","src":"1412:3:26"},"nativeSrc":"1412:18:26","nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:26","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:26","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:26","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nativeSrc":"1502:1:26","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:26","nodeType":"YulIdentifier","src":"1487:3:26"},"nativeSrc":"1487:17:26","nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:26","nodeType":"YulIdentifier","src":"1440:37:26"},"nativeSrc":"1440:65:26","nodeType":"YulFunctionCall","src":"1440:65:26"},"nativeSrc":"1440:65:26","nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:26","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nativeSrc":"1378:6:26","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:26","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nativeSrc":"1577:40:26","nodeType":"YulBlock","src":"1577:40:26","statements":[{"nativeSrc":"1588:22:26","nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:26","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nativeSrc":"1598:5:26","nodeType":"YulIdentifier","src":"1598:5:26"},"nativeSrc":"1598:12:26","nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nativeSrc":"1588:6:26","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:26","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:26","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nativeSrc":"1719:73:26","nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:26","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nativeSrc":"1741:6:26","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:26","nodeType":"YulIdentifier","src":"1729:6:26"},"nativeSrc":"1729:19:26","nodeType":"YulFunctionCall","src":"1729:19:26"},"nativeSrc":"1729:19:26","nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nativeSrc":"1757:29:26","nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:26","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nativeSrc":"1781:4:26","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:26","nodeType":"YulIdentifier","src":"1772:3:26"},"nativeSrc":"1772:14:26","nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:26","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:26","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nativeSrc":"1696:6:26","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:26","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nativeSrc":"1860:186:26","nodeType":"YulBlock","src":"1860:186:26","statements":[{"nativeSrc":"1871:10:26","nodeType":"YulVariableDeclaration","src":"1871:10:26","value":{"kind":"number","nativeSrc":"1880:1:26","nodeType":"YulLiteral","src":"1880:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:26","nodeType":"YulTypedName","src":"1875:1:26","type":""}]},{"body":{"nativeSrc":"1940:63:26","nodeType":"YulBlock","src":"1940:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:26","nodeType":"YulIdentifier","src":"1965:3:26"},{"name":"i","nativeSrc":"1970:1:26","nodeType":"YulIdentifier","src":"1970:1:26"}],"functionName":{"name":"add","nativeSrc":"1961:3:26","nodeType":"YulIdentifier","src":"1961:3:26"},"nativeSrc":"1961:11:26","nodeType":"YulFunctionCall","src":"1961:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:26","nodeType":"YulIdentifier","src":"1984:3:26"},{"name":"i","nativeSrc":"1989:1:26","nodeType":"YulIdentifier","src":"1989:1:26"}],"functionName":{"name":"add","nativeSrc":"1980:3:26","nodeType":"YulIdentifier","src":"1980:3:26"},"nativeSrc":"1980:11:26","nodeType":"YulFunctionCall","src":"1980:11:26"}],"functionName":{"name":"mload","nativeSrc":"1974:5:26","nodeType":"YulIdentifier","src":"1974:5:26"},"nativeSrc":"1974:18:26","nodeType":"YulFunctionCall","src":"1974:18:26"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:26","nodeType":"YulIdentifier","src":"1954:6:26"},"nativeSrc":"1954:39:26","nodeType":"YulFunctionCall","src":"1954:39:26"},"nativeSrc":"1954:39:26","nodeType":"YulExpressionStatement","src":"1954:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:26","nodeType":"YulIdentifier","src":"1901:1:26"},{"name":"length","nativeSrc":"1904:6:26","nodeType":"YulIdentifier","src":"1904:6:26"}],"functionName":{"name":"lt","nativeSrc":"1898:2:26","nodeType":"YulIdentifier","src":"1898:2:26"},"nativeSrc":"1898:13:26","nodeType":"YulFunctionCall","src":"1898:13:26"},"nativeSrc":"1890:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:26","nodeType":"YulBlock","src":"1912:19:26","statements":[{"nativeSrc":"1914:15:26","nodeType":"YulAssignment","src":"1914:15:26","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:26","nodeType":"YulIdentifier","src":"1923:1:26"},{"kind":"number","nativeSrc":"1926:2:26","nodeType":"YulLiteral","src":"1926:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:26","nodeType":"YulIdentifier","src":"1919:3:26"},"nativeSrc":"1919:10:26","nodeType":"YulFunctionCall","src":"1919:10:26"},"variableNames":[{"name":"i","nativeSrc":"1914:1:26","nodeType":"YulIdentifier","src":"1914:1:26"}]}]},"pre":{"nativeSrc":"1894:3:26","nodeType":"YulBlock","src":"1894:3:26","statements":[]},"src":"1890:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:26","nodeType":"YulIdentifier","src":"2023:3:26"},{"name":"length","nativeSrc":"2028:6:26","nodeType":"YulIdentifier","src":"2028:6:26"}],"functionName":{"name":"add","nativeSrc":"2019:3:26","nodeType":"YulIdentifier","src":"2019:3:26"},"nativeSrc":"2019:16:26","nodeType":"YulFunctionCall","src":"2019:16:26"},{"kind":"number","nativeSrc":"2037:1:26","nodeType":"YulLiteral","src":"2037:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:26","nodeType":"YulIdentifier","src":"2012:6:26"},"nativeSrc":"2012:27:26","nodeType":"YulFunctionCall","src":"2012:27:26"},"nativeSrc":"2012:27:26","nodeType":"YulExpressionStatement","src":"2012:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:26","nodeType":"YulTypedName","src":"1842:3:26","type":""},{"name":"dst","nativeSrc":"1847:3:26","nodeType":"YulTypedName","src":"1847:3:26","type":""},{"name":"length","nativeSrc":"1852:6:26","nodeType":"YulTypedName","src":"1852:6:26","type":""}],"src":"1798:248:26"},{"body":{"nativeSrc":"2100:54:26","nodeType":"YulBlock","src":"2100:54:26","statements":[{"nativeSrc":"2110:38:26","nodeType":"YulAssignment","src":"2110:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:26","nodeType":"YulIdentifier","src":"2128:5:26"},{"kind":"number","nativeSrc":"2135:2:26","nodeType":"YulLiteral","src":"2135:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:26","nodeType":"YulIdentifier","src":"2124:3:26"},"nativeSrc":"2124:14:26","nodeType":"YulFunctionCall","src":"2124:14:26"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:26","nodeType":"YulLiteral","src":"2144:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:26","nodeType":"YulIdentifier","src":"2140:3:26"},"nativeSrc":"2140:7:26","nodeType":"YulFunctionCall","src":"2140:7:26"}],"functionName":{"name":"and","nativeSrc":"2120:3:26","nodeType":"YulIdentifier","src":"2120:3:26"},"nativeSrc":"2120:28:26","nodeType":"YulFunctionCall","src":"2120:28:26"},"variableNames":[{"name":"result","nativeSrc":"2110:6:26","nodeType":"YulIdentifier","src":"2110:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:26","nodeType":"YulTypedName","src":"2083:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:26","nodeType":"YulTypedName","src":"2093:6:26","type":""}],"src":"2052:102:26"},{"body":{"nativeSrc":"2252:285:26","nodeType":"YulBlock","src":"2252:285:26","statements":[{"nativeSrc":"2262:53:26","nodeType":"YulVariableDeclaration","src":"2262:53:26","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:26","nodeType":"YulIdentifier","src":"2309:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:26","nodeType":"YulIdentifier","src":"2276:32:26"},"nativeSrc":"2276:39:26","nodeType":"YulFunctionCall","src":"2276:39:26"},"variables":[{"name":"length","nativeSrc":"2266:6:26","nodeType":"YulTypedName","src":"2266:6:26","type":""}]},{"nativeSrc":"2324:78:26","nodeType":"YulAssignment","src":"2324:78:26","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:26","nodeType":"YulIdentifier","src":"2390:3:26"},{"name":"length","nativeSrc":"2395:6:26","nodeType":"YulIdentifier","src":"2395:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:26","nodeType":"YulIdentifier","src":"2331:58:26"},"nativeSrc":"2331:71:26","nodeType":"YulFunctionCall","src":"2331:71:26"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:26","nodeType":"YulIdentifier","src":"2324:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:26","nodeType":"YulIdentifier","src":"2450:5:26"},{"kind":"number","nativeSrc":"2457:4:26","nodeType":"YulLiteral","src":"2457:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:26","nodeType":"YulIdentifier","src":"2446:3:26"},"nativeSrc":"2446:16:26","nodeType":"YulFunctionCall","src":"2446:16:26"},{"name":"pos","nativeSrc":"2464:3:26","nodeType":"YulIdentifier","src":"2464:3:26"},{"name":"length","nativeSrc":"2469:6:26","nodeType":"YulIdentifier","src":"2469:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:26","nodeType":"YulIdentifier","src":"2411:34:26"},"nativeSrc":"2411:65:26","nodeType":"YulFunctionCall","src":"2411:65:26"},"nativeSrc":"2411:65:26","nodeType":"YulExpressionStatement","src":"2411:65:26"},{"nativeSrc":"2485:46:26","nodeType":"YulAssignment","src":"2485:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:26","nodeType":"YulIdentifier","src":"2496:3:26"},{"arguments":[{"name":"length","nativeSrc":"2523:6:26","nodeType":"YulIdentifier","src":"2523:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:26","nodeType":"YulIdentifier","src":"2501:21:26"},"nativeSrc":"2501:29:26","nodeType":"YulFunctionCall","src":"2501:29:26"}],"functionName":{"name":"add","nativeSrc":"2492:3:26","nodeType":"YulIdentifier","src":"2492:3:26"},"nativeSrc":"2492:39:26","nodeType":"YulFunctionCall","src":"2492:39:26"},"variableNames":[{"name":"end","nativeSrc":"2485:3:26","nodeType":"YulIdentifier","src":"2485:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:26","nodeType":"YulTypedName","src":"2233:5:26","type":""},{"name":"pos","nativeSrc":"2240:3:26","nodeType":"YulTypedName","src":"2240:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:26","nodeType":"YulTypedName","src":"2248:3:26","type":""}],"src":"2160:377:26"},{"body":{"nativeSrc":"2661:195:26","nodeType":"YulBlock","src":"2661:195:26","statements":[{"nativeSrc":"2671:26:26","nodeType":"YulAssignment","src":"2671:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:26","nodeType":"YulIdentifier","src":"2683:9:26"},{"kind":"number","nativeSrc":"2694:2:26","nodeType":"YulLiteral","src":"2694:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:26","nodeType":"YulIdentifier","src":"2679:3:26"},"nativeSrc":"2679:18:26","nodeType":"YulFunctionCall","src":"2679:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:26","nodeType":"YulIdentifier","src":"2671:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:26","nodeType":"YulIdentifier","src":"2718:9:26"},{"kind":"number","nativeSrc":"2729:1:26","nodeType":"YulLiteral","src":"2729:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:26","nodeType":"YulIdentifier","src":"2714:3:26"},"nativeSrc":"2714:17:26","nodeType":"YulFunctionCall","src":"2714:17:26"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:26","nodeType":"YulIdentifier","src":"2737:4:26"},{"name":"headStart","nativeSrc":"2743:9:26","nodeType":"YulIdentifier","src":"2743:9:26"}],"functionName":{"name":"sub","nativeSrc":"2733:3:26","nodeType":"YulIdentifier","src":"2733:3:26"},"nativeSrc":"2733:20:26","nodeType":"YulFunctionCall","src":"2733:20:26"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:26","nodeType":"YulIdentifier","src":"2707:6:26"},"nativeSrc":"2707:47:26","nodeType":"YulFunctionCall","src":"2707:47:26"},"nativeSrc":"2707:47:26","nodeType":"YulExpressionStatement","src":"2707:47:26"},{"nativeSrc":"2763:86:26","nodeType":"YulAssignment","src":"2763:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:26","nodeType":"YulIdentifier","src":"2835:6:26"},{"name":"tail","nativeSrc":"2844:4:26","nodeType":"YulIdentifier","src":"2844:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:26","nodeType":"YulIdentifier","src":"2771:63:26"},"nativeSrc":"2771:78:26","nodeType":"YulFunctionCall","src":"2771:78:26"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:26","nodeType":"YulIdentifier","src":"2763:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:26","nodeType":"YulTypedName","src":"2633:9:26","type":""},{"name":"value0","nativeSrc":"2645:6:26","nodeType":"YulTypedName","src":"2645:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:26","nodeType":"YulTypedName","src":"2656:4:26","type":""}],"src":"2543:313:26"},{"body":{"nativeSrc":"2907:32:26","nodeType":"YulBlock","src":"2907:32:26","statements":[{"nativeSrc":"2917:16:26","nodeType":"YulAssignment","src":"2917:16:26","value":{"name":"value","nativeSrc":"2928:5:26","nodeType":"YulIdentifier","src":"2928:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:26","nodeType":"YulIdentifier","src":"2917:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:26","nodeType":"YulTypedName","src":"2889:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:26","nodeType":"YulTypedName","src":"2899:7:26","type":""}],"src":"2862:77:26"},{"body":{"nativeSrc":"2988:79:26","nodeType":"YulBlock","src":"2988:79:26","statements":[{"body":{"nativeSrc":"3045:16:26","nodeType":"YulBlock","src":"3045:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:26","nodeType":"YulLiteral","src":"3054:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:26","nodeType":"YulLiteral","src":"3057:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:26","nodeType":"YulIdentifier","src":"3047:6:26"},"nativeSrc":"3047:12:26","nodeType":"YulFunctionCall","src":"3047:12:26"},"nativeSrc":"3047:12:26","nodeType":"YulExpressionStatement","src":"3047:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:26","nodeType":"YulIdentifier","src":"3011:5:26"},{"arguments":[{"name":"value","nativeSrc":"3036:5:26","nodeType":"YulIdentifier","src":"3036:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:26","nodeType":"YulIdentifier","src":"3018:17:26"},"nativeSrc":"3018:24:26","nodeType":"YulFunctionCall","src":"3018:24:26"}],"functionName":{"name":"eq","nativeSrc":"3008:2:26","nodeType":"YulIdentifier","src":"3008:2:26"},"nativeSrc":"3008:35:26","nodeType":"YulFunctionCall","src":"3008:35:26"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:26","nodeType":"YulIdentifier","src":"3001:6:26"},"nativeSrc":"3001:43:26","nodeType":"YulFunctionCall","src":"3001:43:26"},"nativeSrc":"2998:63:26","nodeType":"YulIf","src":"2998:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:26","nodeType":"YulTypedName","src":"2981:5:26","type":""}],"src":"2945:122:26"},{"body":{"nativeSrc":"3125:87:26","nodeType":"YulBlock","src":"3125:87:26","statements":[{"nativeSrc":"3135:29:26","nodeType":"YulAssignment","src":"3135:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:26","nodeType":"YulIdentifier","src":"3157:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:26","nodeType":"YulIdentifier","src":"3144:12:26"},"nativeSrc":"3144:20:26","nodeType":"YulFunctionCall","src":"3144:20:26"},"variableNames":[{"name":"value","nativeSrc":"3135:5:26","nodeType":"YulIdentifier","src":"3135:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:26","nodeType":"YulIdentifier","src":"3200:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:26","nodeType":"YulIdentifier","src":"3173:26:26"},"nativeSrc":"3173:33:26","nodeType":"YulFunctionCall","src":"3173:33:26"},"nativeSrc":"3173:33:26","nodeType":"YulExpressionStatement","src":"3173:33:26"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:26","nodeType":"YulTypedName","src":"3103:6:26","type":""},{"name":"end","nativeSrc":"3111:3:26","nodeType":"YulTypedName","src":"3111:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:26","nodeType":"YulTypedName","src":"3119:5:26","type":""}],"src":"3073:139:26"},{"body":{"nativeSrc":"3284:263:26","nodeType":"YulBlock","src":"3284:263:26","statements":[{"body":{"nativeSrc":"3330:83:26","nodeType":"YulBlock","src":"3330:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:26","nodeType":"YulIdentifier","src":"3332:77:26"},"nativeSrc":"3332:79:26","nodeType":"YulFunctionCall","src":"3332:79:26"},"nativeSrc":"3332:79:26","nodeType":"YulExpressionStatement","src":"3332:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:26","nodeType":"YulIdentifier","src":"3305:7:26"},{"name":"headStart","nativeSrc":"3314:9:26","nodeType":"YulIdentifier","src":"3314:9:26"}],"functionName":{"name":"sub","nativeSrc":"3301:3:26","nodeType":"YulIdentifier","src":"3301:3:26"},"nativeSrc":"3301:23:26","nodeType":"YulFunctionCall","src":"3301:23:26"},{"kind":"number","nativeSrc":"3326:2:26","nodeType":"YulLiteral","src":"3326:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:26","nodeType":"YulIdentifier","src":"3297:3:26"},"nativeSrc":"3297:32:26","nodeType":"YulFunctionCall","src":"3297:32:26"},"nativeSrc":"3294:119:26","nodeType":"YulIf","src":"3294:119:26"},{"nativeSrc":"3423:117:26","nodeType":"YulBlock","src":"3423:117:26","statements":[{"nativeSrc":"3438:15:26","nodeType":"YulVariableDeclaration","src":"3438:15:26","value":{"kind":"number","nativeSrc":"3452:1:26","nodeType":"YulLiteral","src":"3452:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:26","nodeType":"YulTypedName","src":"3442:6:26","type":""}]},{"nativeSrc":"3467:63:26","nodeType":"YulAssignment","src":"3467:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:26","nodeType":"YulIdentifier","src":"3502:9:26"},{"name":"offset","nativeSrc":"3513:6:26","nodeType":"YulIdentifier","src":"3513:6:26"}],"functionName":{"name":"add","nativeSrc":"3498:3:26","nodeType":"YulIdentifier","src":"3498:3:26"},"nativeSrc":"3498:22:26","nodeType":"YulFunctionCall","src":"3498:22:26"},{"name":"dataEnd","nativeSrc":"3522:7:26","nodeType":"YulIdentifier","src":"3522:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:26","nodeType":"YulIdentifier","src":"3477:20:26"},"nativeSrc":"3477:53:26","nodeType":"YulFunctionCall","src":"3477:53:26"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:26","nodeType":"YulIdentifier","src":"3467:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:26","nodeType":"YulTypedName","src":"3254:9:26","type":""},{"name":"dataEnd","nativeSrc":"3265:7:26","nodeType":"YulTypedName","src":"3265:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:26","nodeType":"YulTypedName","src":"3277:6:26","type":""}],"src":"3218:329:26"},{"body":{"nativeSrc":"3598:81:26","nodeType":"YulBlock","src":"3598:81:26","statements":[{"nativeSrc":"3608:65:26","nodeType":"YulAssignment","src":"3608:65:26","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:26","nodeType":"YulIdentifier","src":"3623:5:26"},{"kind":"number","nativeSrc":"3630:42:26","nodeType":"YulLiteral","src":"3630:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:26","nodeType":"YulIdentifier","src":"3619:3:26"},"nativeSrc":"3619:54:26","nodeType":"YulFunctionCall","src":"3619:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:26","nodeType":"YulIdentifier","src":"3608:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:26","nodeType":"YulTypedName","src":"3580:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:26","nodeType":"YulTypedName","src":"3590:7:26","type":""}],"src":"3553:126:26"},{"body":{"nativeSrc":"3730:51:26","nodeType":"YulBlock","src":"3730:51:26","statements":[{"nativeSrc":"3740:35:26","nodeType":"YulAssignment","src":"3740:35:26","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:26","nodeType":"YulIdentifier","src":"3769:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:26","nodeType":"YulIdentifier","src":"3751:17:26"},"nativeSrc":"3751:24:26","nodeType":"YulFunctionCall","src":"3751:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:26","nodeType":"YulIdentifier","src":"3740:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:26","nodeType":"YulTypedName","src":"3712:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:26","nodeType":"YulTypedName","src":"3722:7:26","type":""}],"src":"3685:96:26"},{"body":{"nativeSrc":"3852:53:26","nodeType":"YulBlock","src":"3852:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:26","nodeType":"YulIdentifier","src":"3869:3:26"},{"arguments":[{"name":"value","nativeSrc":"3892:5:26","nodeType":"YulIdentifier","src":"3892:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:26","nodeType":"YulIdentifier","src":"3874:17:26"},"nativeSrc":"3874:24:26","nodeType":"YulFunctionCall","src":"3874:24:26"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:26","nodeType":"YulIdentifier","src":"3862:6:26"},"nativeSrc":"3862:37:26","nodeType":"YulFunctionCall","src":"3862:37:26"},"nativeSrc":"3862:37:26","nodeType":"YulExpressionStatement","src":"3862:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:26","nodeType":"YulTypedName","src":"3840:5:26","type":""},{"name":"pos","nativeSrc":"3847:3:26","nodeType":"YulTypedName","src":"3847:3:26","type":""}],"src":"3787:118:26"},{"body":{"nativeSrc":"4009:124:26","nodeType":"YulBlock","src":"4009:124:26","statements":[{"nativeSrc":"4019:26:26","nodeType":"YulAssignment","src":"4019:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:26","nodeType":"YulIdentifier","src":"4031:9:26"},{"kind":"number","nativeSrc":"4042:2:26","nodeType":"YulLiteral","src":"4042:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:26","nodeType":"YulIdentifier","src":"4027:3:26"},"nativeSrc":"4027:18:26","nodeType":"YulFunctionCall","src":"4027:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:26","nodeType":"YulIdentifier","src":"4019:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:26","nodeType":"YulIdentifier","src":"4099:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:26","nodeType":"YulIdentifier","src":"4112:9:26"},{"kind":"number","nativeSrc":"4123:1:26","nodeType":"YulLiteral","src":"4123:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:26","nodeType":"YulIdentifier","src":"4108:3:26"},"nativeSrc":"4108:17:26","nodeType":"YulFunctionCall","src":"4108:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:26","nodeType":"YulIdentifier","src":"4055:43:26"},"nativeSrc":"4055:71:26","nodeType":"YulFunctionCall","src":"4055:71:26"},"nativeSrc":"4055:71:26","nodeType":"YulExpressionStatement","src":"4055:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:26","nodeType":"YulTypedName","src":"3981:9:26","type":""},{"name":"value0","nativeSrc":"3993:6:26","nodeType":"YulTypedName","src":"3993:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:26","nodeType":"YulTypedName","src":"4004:4:26","type":""}],"src":"3911:222:26"},{"body":{"nativeSrc":"4182:79:26","nodeType":"YulBlock","src":"4182:79:26","statements":[{"body":{"nativeSrc":"4239:16:26","nodeType":"YulBlock","src":"4239:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:26","nodeType":"YulLiteral","src":"4248:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:26","nodeType":"YulLiteral","src":"4251:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:26","nodeType":"YulIdentifier","src":"4241:6:26"},"nativeSrc":"4241:12:26","nodeType":"YulFunctionCall","src":"4241:12:26"},"nativeSrc":"4241:12:26","nodeType":"YulExpressionStatement","src":"4241:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:26","nodeType":"YulIdentifier","src":"4205:5:26"},{"arguments":[{"name":"value","nativeSrc":"4230:5:26","nodeType":"YulIdentifier","src":"4230:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:26","nodeType":"YulIdentifier","src":"4212:17:26"},"nativeSrc":"4212:24:26","nodeType":"YulFunctionCall","src":"4212:24:26"}],"functionName":{"name":"eq","nativeSrc":"4202:2:26","nodeType":"YulIdentifier","src":"4202:2:26"},"nativeSrc":"4202:35:26","nodeType":"YulFunctionCall","src":"4202:35:26"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:26","nodeType":"YulIdentifier","src":"4195:6:26"},"nativeSrc":"4195:43:26","nodeType":"YulFunctionCall","src":"4195:43:26"},"nativeSrc":"4192:63:26","nodeType":"YulIf","src":"4192:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:26","nodeType":"YulTypedName","src":"4175:5:26","type":""}],"src":"4139:122:26"},{"body":{"nativeSrc":"4319:87:26","nodeType":"YulBlock","src":"4319:87:26","statements":[{"nativeSrc":"4329:29:26","nodeType":"YulAssignment","src":"4329:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:26","nodeType":"YulIdentifier","src":"4351:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:26","nodeType":"YulIdentifier","src":"4338:12:26"},"nativeSrc":"4338:20:26","nodeType":"YulFunctionCall","src":"4338:20:26"},"variableNames":[{"name":"value","nativeSrc":"4329:5:26","nodeType":"YulIdentifier","src":"4329:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:26","nodeType":"YulIdentifier","src":"4394:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:26","nodeType":"YulIdentifier","src":"4367:26:26"},"nativeSrc":"4367:33:26","nodeType":"YulFunctionCall","src":"4367:33:26"},"nativeSrc":"4367:33:26","nodeType":"YulExpressionStatement","src":"4367:33:26"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:26","nodeType":"YulTypedName","src":"4297:6:26","type":""},{"name":"end","nativeSrc":"4305:3:26","nodeType":"YulTypedName","src":"4305:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:26","nodeType":"YulTypedName","src":"4313:5:26","type":""}],"src":"4267:139:26"},{"body":{"nativeSrc":"4495:391:26","nodeType":"YulBlock","src":"4495:391:26","statements":[{"body":{"nativeSrc":"4541:83:26","nodeType":"YulBlock","src":"4541:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:26","nodeType":"YulIdentifier","src":"4543:77:26"},"nativeSrc":"4543:79:26","nodeType":"YulFunctionCall","src":"4543:79:26"},"nativeSrc":"4543:79:26","nodeType":"YulExpressionStatement","src":"4543:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:26","nodeType":"YulIdentifier","src":"4516:7:26"},{"name":"headStart","nativeSrc":"4525:9:26","nodeType":"YulIdentifier","src":"4525:9:26"}],"functionName":{"name":"sub","nativeSrc":"4512:3:26","nodeType":"YulIdentifier","src":"4512:3:26"},"nativeSrc":"4512:23:26","nodeType":"YulFunctionCall","src":"4512:23:26"},{"kind":"number","nativeSrc":"4537:2:26","nodeType":"YulLiteral","src":"4537:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:26","nodeType":"YulIdentifier","src":"4508:3:26"},"nativeSrc":"4508:32:26","nodeType":"YulFunctionCall","src":"4508:32:26"},"nativeSrc":"4505:119:26","nodeType":"YulIf","src":"4505:119:26"},{"nativeSrc":"4634:117:26","nodeType":"YulBlock","src":"4634:117:26","statements":[{"nativeSrc":"4649:15:26","nodeType":"YulVariableDeclaration","src":"4649:15:26","value":{"kind":"number","nativeSrc":"4663:1:26","nodeType":"YulLiteral","src":"4663:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:26","nodeType":"YulTypedName","src":"4653:6:26","type":""}]},{"nativeSrc":"4678:63:26","nodeType":"YulAssignment","src":"4678:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:26","nodeType":"YulIdentifier","src":"4713:9:26"},{"name":"offset","nativeSrc":"4724:6:26","nodeType":"YulIdentifier","src":"4724:6:26"}],"functionName":{"name":"add","nativeSrc":"4709:3:26","nodeType":"YulIdentifier","src":"4709:3:26"},"nativeSrc":"4709:22:26","nodeType":"YulFunctionCall","src":"4709:22:26"},{"name":"dataEnd","nativeSrc":"4733:7:26","nodeType":"YulIdentifier","src":"4733:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:26","nodeType":"YulIdentifier","src":"4688:20:26"},"nativeSrc":"4688:53:26","nodeType":"YulFunctionCall","src":"4688:53:26"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:26","nodeType":"YulIdentifier","src":"4678:6:26"}]}]},{"nativeSrc":"4761:118:26","nodeType":"YulBlock","src":"4761:118:26","statements":[{"nativeSrc":"4776:16:26","nodeType":"YulVariableDeclaration","src":"4776:16:26","value":{"kind":"number","nativeSrc":"4790:2:26","nodeType":"YulLiteral","src":"4790:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:26","nodeType":"YulTypedName","src":"4780:6:26","type":""}]},{"nativeSrc":"4806:63:26","nodeType":"YulAssignment","src":"4806:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:26","nodeType":"YulIdentifier","src":"4841:9:26"},{"name":"offset","nativeSrc":"4852:6:26","nodeType":"YulIdentifier","src":"4852:6:26"}],"functionName":{"name":"add","nativeSrc":"4837:3:26","nodeType":"YulIdentifier","src":"4837:3:26"},"nativeSrc":"4837:22:26","nodeType":"YulFunctionCall","src":"4837:22:26"},{"name":"dataEnd","nativeSrc":"4861:7:26","nodeType":"YulIdentifier","src":"4861:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:26","nodeType":"YulIdentifier","src":"4816:20:26"},"nativeSrc":"4816:53:26","nodeType":"YulFunctionCall","src":"4816:53:26"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:26","nodeType":"YulIdentifier","src":"4806:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:26","nodeType":"YulTypedName","src":"4457:9:26","type":""},{"name":"dataEnd","nativeSrc":"4468:7:26","nodeType":"YulTypedName","src":"4468:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:26","nodeType":"YulTypedName","src":"4480:6:26","type":""},{"name":"value1","nativeSrc":"4488:6:26","nodeType":"YulTypedName","src":"4488:6:26","type":""}],"src":"4412:474:26"},{"body":{"nativeSrc":"4957:53:26","nodeType":"YulBlock","src":"4957:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4974:3:26","nodeType":"YulIdentifier","src":"4974:3:26"},{"arguments":[{"name":"value","nativeSrc":"4997:5:26","nodeType":"YulIdentifier","src":"4997:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4979:17:26","nodeType":"YulIdentifier","src":"4979:17:26"},"nativeSrc":"4979:24:26","nodeType":"YulFunctionCall","src":"4979:24:26"}],"functionName":{"name":"mstore","nativeSrc":"4967:6:26","nodeType":"YulIdentifier","src":"4967:6:26"},"nativeSrc":"4967:37:26","nodeType":"YulFunctionCall","src":"4967:37:26"},"nativeSrc":"4967:37:26","nodeType":"YulExpressionStatement","src":"4967:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4892:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4945:5:26","nodeType":"YulTypedName","src":"4945:5:26","type":""},{"name":"pos","nativeSrc":"4952:3:26","nodeType":"YulTypedName","src":"4952:3:26","type":""}],"src":"4892:118:26"},{"body":{"nativeSrc":"5336:827:26","nodeType":"YulBlock","src":"5336:827:26","statements":[{"nativeSrc":"5346:27:26","nodeType":"YulAssignment","src":"5346:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5358:9:26","nodeType":"YulIdentifier","src":"5358:9:26"},{"kind":"number","nativeSrc":"5369:3:26","nodeType":"YulLiteral","src":"5369:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"5354:3:26","nodeType":"YulIdentifier","src":"5354:3:26"},"nativeSrc":"5354:19:26","nodeType":"YulFunctionCall","src":"5354:19:26"},"variableNames":[{"name":"tail","nativeSrc":"5346:4:26","nodeType":"YulIdentifier","src":"5346:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5394:9:26","nodeType":"YulIdentifier","src":"5394:9:26"},{"kind":"number","nativeSrc":"5405:1:26","nodeType":"YulLiteral","src":"5405:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5390:3:26","nodeType":"YulIdentifier","src":"5390:3:26"},"nativeSrc":"5390:17:26","nodeType":"YulFunctionCall","src":"5390:17:26"},{"arguments":[{"name":"tail","nativeSrc":"5413:4:26","nodeType":"YulIdentifier","src":"5413:4:26"},{"name":"headStart","nativeSrc":"5419:9:26","nodeType":"YulIdentifier","src":"5419:9:26"}],"functionName":{"name":"sub","nativeSrc":"5409:3:26","nodeType":"YulIdentifier","src":"5409:3:26"},"nativeSrc":"5409:20:26","nodeType":"YulFunctionCall","src":"5409:20:26"}],"functionName":{"name":"mstore","nativeSrc":"5383:6:26","nodeType":"YulIdentifier","src":"5383:6:26"},"nativeSrc":"5383:47:26","nodeType":"YulFunctionCall","src":"5383:47:26"},"nativeSrc":"5383:47:26","nodeType":"YulExpressionStatement","src":"5383:47:26"},{"nativeSrc":"5439:86:26","nodeType":"YulAssignment","src":"5439:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"5511:6:26","nodeType":"YulIdentifier","src":"5511:6:26"},{"name":"tail","nativeSrc":"5520:4:26","nodeType":"YulIdentifier","src":"5520:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5447:63:26","nodeType":"YulIdentifier","src":"5447:63:26"},"nativeSrc":"5447:78:26","nodeType":"YulFunctionCall","src":"5447:78:26"},"variableNames":[{"name":"tail","nativeSrc":"5439:4:26","nodeType":"YulIdentifier","src":"5439:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5546:9:26","nodeType":"YulIdentifier","src":"5546:9:26"},{"kind":"number","nativeSrc":"5557:2:26","nodeType":"YulLiteral","src":"5557:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5542:3:26","nodeType":"YulIdentifier","src":"5542:3:26"},"nativeSrc":"5542:18:26","nodeType":"YulFunctionCall","src":"5542:18:26"},{"arguments":[{"name":"tail","nativeSrc":"5566:4:26","nodeType":"YulIdentifier","src":"5566:4:26"},{"name":"headStart","nativeSrc":"5572:9:26","nodeType":"YulIdentifier","src":"5572:9:26"}],"functionName":{"name":"sub","nativeSrc":"5562:3:26","nodeType":"YulIdentifier","src":"5562:3:26"},"nativeSrc":"5562:20:26","nodeType":"YulFunctionCall","src":"5562:20:26"}],"functionName":{"name":"mstore","nativeSrc":"5535:6:26","nodeType":"YulIdentifier","src":"5535:6:26"},"nativeSrc":"5535:48:26","nodeType":"YulFunctionCall","src":"5535:48:26"},"nativeSrc":"5535:48:26","nodeType":"YulExpressionStatement","src":"5535:48:26"},{"nativeSrc":"5592:86:26","nodeType":"YulAssignment","src":"5592:86:26","value":{"arguments":[{"name":"value1","nativeSrc":"5664:6:26","nodeType":"YulIdentifier","src":"5664:6:26"},{"name":"tail","nativeSrc":"5673:4:26","nodeType":"YulIdentifier","src":"5673:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5600:63:26","nodeType":"YulIdentifier","src":"5600:63:26"},"nativeSrc":"5600:78:26","nodeType":"YulFunctionCall","src":"5600:78:26"},"variableNames":[{"name":"tail","nativeSrc":"5592:4:26","nodeType":"YulIdentifier","src":"5592:4:26"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"5732:6:26","nodeType":"YulIdentifier","src":"5732:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"5745:9:26","nodeType":"YulIdentifier","src":"5745:9:26"},{"kind":"number","nativeSrc":"5756:2:26","nodeType":"YulLiteral","src":"5756:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5741:3:26","nodeType":"YulIdentifier","src":"5741:3:26"},"nativeSrc":"5741:18:26","nodeType":"YulFunctionCall","src":"5741:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5688:43:26","nodeType":"YulIdentifier","src":"5688:43:26"},"nativeSrc":"5688:72:26","nodeType":"YulFunctionCall","src":"5688:72:26"},"nativeSrc":"5688:72:26","nodeType":"YulExpressionStatement","src":"5688:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"5814:6:26","nodeType":"YulIdentifier","src":"5814:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"5827:9:26","nodeType":"YulIdentifier","src":"5827:9:26"},{"kind":"number","nativeSrc":"5838:2:26","nodeType":"YulLiteral","src":"5838:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5823:3:26","nodeType":"YulIdentifier","src":"5823:3:26"},"nativeSrc":"5823:18:26","nodeType":"YulFunctionCall","src":"5823:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5770:43:26","nodeType":"YulIdentifier","src":"5770:43:26"},"nativeSrc":"5770:72:26","nodeType":"YulFunctionCall","src":"5770:72:26"},"nativeSrc":"5770:72:26","nodeType":"YulExpressionStatement","src":"5770:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5863:9:26","nodeType":"YulIdentifier","src":"5863:9:26"},{"kind":"number","nativeSrc":"5874:3:26","nodeType":"YulLiteral","src":"5874:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5859:3:26","nodeType":"YulIdentifier","src":"5859:3:26"},"nativeSrc":"5859:19:26","nodeType":"YulFunctionCall","src":"5859:19:26"},{"arguments":[{"name":"tail","nativeSrc":"5884:4:26","nodeType":"YulIdentifier","src":"5884:4:26"},{"name":"headStart","nativeSrc":"5890:9:26","nodeType":"YulIdentifier","src":"5890:9:26"}],"functionName":{"name":"sub","nativeSrc":"5880:3:26","nodeType":"YulIdentifier","src":"5880:3:26"},"nativeSrc":"5880:20:26","nodeType":"YulFunctionCall","src":"5880:20:26"}],"functionName":{"name":"mstore","nativeSrc":"5852:6:26","nodeType":"YulIdentifier","src":"5852:6:26"},"nativeSrc":"5852:49:26","nodeType":"YulFunctionCall","src":"5852:49:26"},"nativeSrc":"5852:49:26","nodeType":"YulExpressionStatement","src":"5852:49:26"},{"nativeSrc":"5910:86:26","nodeType":"YulAssignment","src":"5910:86:26","value":{"arguments":[{"name":"value4","nativeSrc":"5982:6:26","nodeType":"YulIdentifier","src":"5982:6:26"},{"name":"tail","nativeSrc":"5991:4:26","nodeType":"YulIdentifier","src":"5991:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5918:63:26","nodeType":"YulIdentifier","src":"5918:63:26"},"nativeSrc":"5918:78:26","nodeType":"YulFunctionCall","src":"5918:78:26"},"variableNames":[{"name":"tail","nativeSrc":"5910:4:26","nodeType":"YulIdentifier","src":"5910:4:26"}]},{"expression":{"arguments":[{"name":"value5","nativeSrc":"6044:6:26","nodeType":"YulIdentifier","src":"6044:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"6057:9:26","nodeType":"YulIdentifier","src":"6057:9:26"},{"kind":"number","nativeSrc":"6068:3:26","nodeType":"YulLiteral","src":"6068:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6053:3:26","nodeType":"YulIdentifier","src":"6053:3:26"},"nativeSrc":"6053:19:26","nodeType":"YulFunctionCall","src":"6053:19:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"6006:37:26","nodeType":"YulIdentifier","src":"6006:37:26"},"nativeSrc":"6006:67:26","nodeType":"YulFunctionCall","src":"6006:67:26"},"nativeSrc":"6006:67:26","nodeType":"YulExpressionStatement","src":"6006:67:26"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"6127:6:26","nodeType":"YulIdentifier","src":"6127:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"6140:9:26","nodeType":"YulIdentifier","src":"6140:9:26"},{"kind":"number","nativeSrc":"6151:3:26","nodeType":"YulLiteral","src":"6151:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6136:3:26","nodeType":"YulIdentifier","src":"6136:3:26"},"nativeSrc":"6136:19:26","nodeType":"YulFunctionCall","src":"6136:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6083:43:26","nodeType":"YulIdentifier","src":"6083:43:26"},"nativeSrc":"6083:73:26","nodeType":"YulFunctionCall","src":"6083:73:26"},"nativeSrc":"6083:73:26","nodeType":"YulExpressionStatement","src":"6083:73:26"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed","nativeSrc":"5016:1147:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5260:9:26","nodeType":"YulTypedName","src":"5260:9:26","type":""},{"name":"value6","nativeSrc":"5272:6:26","nodeType":"YulTypedName","src":"5272:6:26","type":""},{"name":"value5","nativeSrc":"5280:6:26","nodeType":"YulTypedName","src":"5280:6:26","type":""},{"name":"value4","nativeSrc":"5288:6:26","nodeType":"YulTypedName","src":"5288:6:26","type":""},{"name":"value3","nativeSrc":"5296:6:26","nodeType":"YulTypedName","src":"5296:6:26","type":""},{"name":"value2","nativeSrc":"5304:6:26","nodeType":"YulTypedName","src":"5304:6:26","type":""},{"name":"value1","nativeSrc":"5312:6:26","nodeType":"YulTypedName","src":"5312:6:26","type":""},{"name":"value0","nativeSrc":"5320:6:26","nodeType":"YulTypedName","src":"5320:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5331:4:26","nodeType":"YulTypedName","src":"5331:4:26","type":""}],"src":"5016:1147:26"},{"body":{"nativeSrc":"6269:519:26","nodeType":"YulBlock","src":"6269:519:26","statements":[{"body":{"nativeSrc":"6315:83:26","nodeType":"YulBlock","src":"6315:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6317:77:26","nodeType":"YulIdentifier","src":"6317:77:26"},"nativeSrc":"6317:79:26","nodeType":"YulFunctionCall","src":"6317:79:26"},"nativeSrc":"6317:79:26","nodeType":"YulExpressionStatement","src":"6317:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6290:7:26","nodeType":"YulIdentifier","src":"6290:7:26"},{"name":"headStart","nativeSrc":"6299:9:26","nodeType":"YulIdentifier","src":"6299:9:26"}],"functionName":{"name":"sub","nativeSrc":"6286:3:26","nodeType":"YulIdentifier","src":"6286:3:26"},"nativeSrc":"6286:23:26","nodeType":"YulFunctionCall","src":"6286:23:26"},{"kind":"number","nativeSrc":"6311:2:26","nodeType":"YulLiteral","src":"6311:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6282:3:26","nodeType":"YulIdentifier","src":"6282:3:26"},"nativeSrc":"6282:32:26","nodeType":"YulFunctionCall","src":"6282:32:26"},"nativeSrc":"6279:119:26","nodeType":"YulIf","src":"6279:119:26"},{"nativeSrc":"6408:117:26","nodeType":"YulBlock","src":"6408:117:26","statements":[{"nativeSrc":"6423:15:26","nodeType":"YulVariableDeclaration","src":"6423:15:26","value":{"kind":"number","nativeSrc":"6437:1:26","nodeType":"YulLiteral","src":"6437:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6427:6:26","nodeType":"YulTypedName","src":"6427:6:26","type":""}]},{"nativeSrc":"6452:63:26","nodeType":"YulAssignment","src":"6452:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6487:9:26","nodeType":"YulIdentifier","src":"6487:9:26"},{"name":"offset","nativeSrc":"6498:6:26","nodeType":"YulIdentifier","src":"6498:6:26"}],"functionName":{"name":"add","nativeSrc":"6483:3:26","nodeType":"YulIdentifier","src":"6483:3:26"},"nativeSrc":"6483:22:26","nodeType":"YulFunctionCall","src":"6483:22:26"},{"name":"dataEnd","nativeSrc":"6507:7:26","nodeType":"YulIdentifier","src":"6507:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6462:20:26","nodeType":"YulIdentifier","src":"6462:20:26"},"nativeSrc":"6462:53:26","nodeType":"YulFunctionCall","src":"6462:53:26"},"variableNames":[{"name":"value0","nativeSrc":"6452:6:26","nodeType":"YulIdentifier","src":"6452:6:26"}]}]},{"nativeSrc":"6535:118:26","nodeType":"YulBlock","src":"6535:118:26","statements":[{"nativeSrc":"6550:16:26","nodeType":"YulVariableDeclaration","src":"6550:16:26","value":{"kind":"number","nativeSrc":"6564:2:26","nodeType":"YulLiteral","src":"6564:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6554:6:26","nodeType":"YulTypedName","src":"6554:6:26","type":""}]},{"nativeSrc":"6580:63:26","nodeType":"YulAssignment","src":"6580:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6615:9:26","nodeType":"YulIdentifier","src":"6615:9:26"},{"name":"offset","nativeSrc":"6626:6:26","nodeType":"YulIdentifier","src":"6626:6:26"}],"functionName":{"name":"add","nativeSrc":"6611:3:26","nodeType":"YulIdentifier","src":"6611:3:26"},"nativeSrc":"6611:22:26","nodeType":"YulFunctionCall","src":"6611:22:26"},{"name":"dataEnd","nativeSrc":"6635:7:26","nodeType":"YulIdentifier","src":"6635:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6590:20:26","nodeType":"YulIdentifier","src":"6590:20:26"},"nativeSrc":"6590:53:26","nodeType":"YulFunctionCall","src":"6590:53:26"},"variableNames":[{"name":"value1","nativeSrc":"6580:6:26","nodeType":"YulIdentifier","src":"6580:6:26"}]}]},{"nativeSrc":"6663:118:26","nodeType":"YulBlock","src":"6663:118:26","statements":[{"nativeSrc":"6678:16:26","nodeType":"YulVariableDeclaration","src":"6678:16:26","value":{"kind":"number","nativeSrc":"6692:2:26","nodeType":"YulLiteral","src":"6692:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6682:6:26","nodeType":"YulTypedName","src":"6682:6:26","type":""}]},{"nativeSrc":"6708:63:26","nodeType":"YulAssignment","src":"6708:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6743:9:26","nodeType":"YulIdentifier","src":"6743:9:26"},{"name":"offset","nativeSrc":"6754:6:26","nodeType":"YulIdentifier","src":"6754:6:26"}],"functionName":{"name":"add","nativeSrc":"6739:3:26","nodeType":"YulIdentifier","src":"6739:3:26"},"nativeSrc":"6739:22:26","nodeType":"YulFunctionCall","src":"6739:22:26"},{"name":"dataEnd","nativeSrc":"6763:7:26","nodeType":"YulIdentifier","src":"6763:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6718:20:26","nodeType":"YulIdentifier","src":"6718:20:26"},"nativeSrc":"6718:53:26","nodeType":"YulFunctionCall","src":"6718:53:26"},"variableNames":[{"name":"value2","nativeSrc":"6708:6:26","nodeType":"YulIdentifier","src":"6708:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"6169:619:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6223:9:26","nodeType":"YulTypedName","src":"6223:9:26","type":""},{"name":"dataEnd","nativeSrc":"6234:7:26","nodeType":"YulTypedName","src":"6234:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6246:6:26","nodeType":"YulTypedName","src":"6246:6:26","type":""},{"name":"value1","nativeSrc":"6254:6:26","nodeType":"YulTypedName","src":"6254:6:26","type":""},{"name":"value2","nativeSrc":"6262:6:26","nodeType":"YulTypedName","src":"6262:6:26","type":""}],"src":"6169:619:26"},{"body":{"nativeSrc":"6839:32:26","nodeType":"YulBlock","src":"6839:32:26","statements":[{"nativeSrc":"6849:16:26","nodeType":"YulAssignment","src":"6849:16:26","value":{"name":"value","nativeSrc":"6860:5:26","nodeType":"YulIdentifier","src":"6860:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"6849:7:26","nodeType":"YulIdentifier","src":"6849:7:26"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"6794:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6821:5:26","nodeType":"YulTypedName","src":"6821:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6831:7:26","nodeType":"YulTypedName","src":"6831:7:26","type":""}],"src":"6794:77:26"},{"body":{"nativeSrc":"6920:79:26","nodeType":"YulBlock","src":"6920:79:26","statements":[{"body":{"nativeSrc":"6977:16:26","nodeType":"YulBlock","src":"6977:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6986:1:26","nodeType":"YulLiteral","src":"6986:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6989:1:26","nodeType":"YulLiteral","src":"6989:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6979:6:26","nodeType":"YulIdentifier","src":"6979:6:26"},"nativeSrc":"6979:12:26","nodeType":"YulFunctionCall","src":"6979:12:26"},"nativeSrc":"6979:12:26","nodeType":"YulExpressionStatement","src":"6979:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6943:5:26","nodeType":"YulIdentifier","src":"6943:5:26"},{"arguments":[{"name":"value","nativeSrc":"6968:5:26","nodeType":"YulIdentifier","src":"6968:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6950:17:26","nodeType":"YulIdentifier","src":"6950:17:26"},"nativeSrc":"6950:24:26","nodeType":"YulFunctionCall","src":"6950:24:26"}],"functionName":{"name":"eq","nativeSrc":"6940:2:26","nodeType":"YulIdentifier","src":"6940:2:26"},"nativeSrc":"6940:35:26","nodeType":"YulFunctionCall","src":"6940:35:26"}],"functionName":{"name":"iszero","nativeSrc":"6933:6:26","nodeType":"YulIdentifier","src":"6933:6:26"},"nativeSrc":"6933:43:26","nodeType":"YulFunctionCall","src":"6933:43:26"},"nativeSrc":"6930:63:26","nodeType":"YulIf","src":"6930:63:26"}]},"name":"validator_revert_t_bytes32","nativeSrc":"6877:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6913:5:26","nodeType":"YulTypedName","src":"6913:5:26","type":""}],"src":"6877:122:26"},{"body":{"nativeSrc":"7057:87:26","nodeType":"YulBlock","src":"7057:87:26","statements":[{"nativeSrc":"7067:29:26","nodeType":"YulAssignment","src":"7067:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"7089:6:26","nodeType":"YulIdentifier","src":"7089:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"7076:12:26","nodeType":"YulIdentifier","src":"7076:12:26"},"nativeSrc":"7076:20:26","nodeType":"YulFunctionCall","src":"7076:20:26"},"variableNames":[{"name":"value","nativeSrc":"7067:5:26","nodeType":"YulIdentifier","src":"7067:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7132:5:26","nodeType":"YulIdentifier","src":"7132:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"7105:26:26","nodeType":"YulIdentifier","src":"7105:26:26"},"nativeSrc":"7105:33:26","nodeType":"YulFunctionCall","src":"7105:33:26"},"nativeSrc":"7105:33:26","nodeType":"YulExpressionStatement","src":"7105:33:26"}]},"name":"abi_decode_t_bytes32","nativeSrc":"7005:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7035:6:26","nodeType":"YulTypedName","src":"7035:6:26","type":""},{"name":"end","nativeSrc":"7043:3:26","nodeType":"YulTypedName","src":"7043:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7051:5:26","nodeType":"YulTypedName","src":"7051:5:26","type":""}],"src":"7005:139:26"},{"body":{"nativeSrc":"7216:263:26","nodeType":"YulBlock","src":"7216:263:26","statements":[{"body":{"nativeSrc":"7262:83:26","nodeType":"YulBlock","src":"7262:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7264:77:26","nodeType":"YulIdentifier","src":"7264:77:26"},"nativeSrc":"7264:79:26","nodeType":"YulFunctionCall","src":"7264:79:26"},"nativeSrc":"7264:79:26","nodeType":"YulExpressionStatement","src":"7264:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7237:7:26","nodeType":"YulIdentifier","src":"7237:7:26"},{"name":"headStart","nativeSrc":"7246:9:26","nodeType":"YulIdentifier","src":"7246:9:26"}],"functionName":{"name":"sub","nativeSrc":"7233:3:26","nodeType":"YulIdentifier","src":"7233:3:26"},"nativeSrc":"7233:23:26","nodeType":"YulFunctionCall","src":"7233:23:26"},{"kind":"number","nativeSrc":"7258:2:26","nodeType":"YulLiteral","src":"7258:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7229:3:26","nodeType":"YulIdentifier","src":"7229:3:26"},"nativeSrc":"7229:32:26","nodeType":"YulFunctionCall","src":"7229:32:26"},"nativeSrc":"7226:119:26","nodeType":"YulIf","src":"7226:119:26"},{"nativeSrc":"7355:117:26","nodeType":"YulBlock","src":"7355:117:26","statements":[{"nativeSrc":"7370:15:26","nodeType":"YulVariableDeclaration","src":"7370:15:26","value":{"kind":"number","nativeSrc":"7384:1:26","nodeType":"YulLiteral","src":"7384:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7374:6:26","nodeType":"YulTypedName","src":"7374:6:26","type":""}]},{"nativeSrc":"7399:63:26","nodeType":"YulAssignment","src":"7399:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7434:9:26","nodeType":"YulIdentifier","src":"7434:9:26"},{"name":"offset","nativeSrc":"7445:6:26","nodeType":"YulIdentifier","src":"7445:6:26"}],"functionName":{"name":"add","nativeSrc":"7430:3:26","nodeType":"YulIdentifier","src":"7430:3:26"},"nativeSrc":"7430:22:26","nodeType":"YulFunctionCall","src":"7430:22:26"},{"name":"dataEnd","nativeSrc":"7454:7:26","nodeType":"YulIdentifier","src":"7454:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7409:20:26","nodeType":"YulIdentifier","src":"7409:20:26"},"nativeSrc":"7409:53:26","nodeType":"YulFunctionCall","src":"7409:53:26"},"variableNames":[{"name":"value0","nativeSrc":"7399:6:26","nodeType":"YulIdentifier","src":"7399:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"7150:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7186:9:26","nodeType":"YulTypedName","src":"7186:9:26","type":""},{"name":"dataEnd","nativeSrc":"7197:7:26","nodeType":"YulTypedName","src":"7197:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7209:6:26","nodeType":"YulTypedName","src":"7209:6:26","type":""}],"src":"7150:329:26"},{"body":{"nativeSrc":"7550:53:26","nodeType":"YulBlock","src":"7550:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7567:3:26","nodeType":"YulIdentifier","src":"7567:3:26"},{"arguments":[{"name":"value","nativeSrc":"7590:5:26","nodeType":"YulIdentifier","src":"7590:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"7572:17:26","nodeType":"YulIdentifier","src":"7572:17:26"},"nativeSrc":"7572:24:26","nodeType":"YulFunctionCall","src":"7572:24:26"}],"functionName":{"name":"mstore","nativeSrc":"7560:6:26","nodeType":"YulIdentifier","src":"7560:6:26"},"nativeSrc":"7560:37:26","nodeType":"YulFunctionCall","src":"7560:37:26"},"nativeSrc":"7560:37:26","nodeType":"YulExpressionStatement","src":"7560:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"7485:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7538:5:26","nodeType":"YulTypedName","src":"7538:5:26","type":""},{"name":"pos","nativeSrc":"7545:3:26","nodeType":"YulTypedName","src":"7545:3:26","type":""}],"src":"7485:118:26"},{"body":{"nativeSrc":"7707:124:26","nodeType":"YulBlock","src":"7707:124:26","statements":[{"nativeSrc":"7717:26:26","nodeType":"YulAssignment","src":"7717:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7729:9:26","nodeType":"YulIdentifier","src":"7729:9:26"},{"kind":"number","nativeSrc":"7740:2:26","nodeType":"YulLiteral","src":"7740:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7725:3:26","nodeType":"YulIdentifier","src":"7725:3:26"},"nativeSrc":"7725:18:26","nodeType":"YulFunctionCall","src":"7725:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7717:4:26","nodeType":"YulIdentifier","src":"7717:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7797:6:26","nodeType":"YulIdentifier","src":"7797:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"7810:9:26","nodeType":"YulIdentifier","src":"7810:9:26"},{"kind":"number","nativeSrc":"7821:1:26","nodeType":"YulLiteral","src":"7821:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7806:3:26","nodeType":"YulIdentifier","src":"7806:3:26"},"nativeSrc":"7806:17:26","nodeType":"YulFunctionCall","src":"7806:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"7753:43:26","nodeType":"YulIdentifier","src":"7753:43:26"},"nativeSrc":"7753:71:26","nodeType":"YulFunctionCall","src":"7753:71:26"},"nativeSrc":"7753:71:26","nodeType":"YulExpressionStatement","src":"7753:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"7609:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7679:9:26","nodeType":"YulTypedName","src":"7679:9:26","type":""},{"name":"value0","nativeSrc":"7691:6:26","nodeType":"YulTypedName","src":"7691:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7702:4:26","nodeType":"YulTypedName","src":"7702:4:26","type":""}],"src":"7609:222:26"},{"body":{"nativeSrc":"8117:685:26","nodeType":"YulBlock","src":"8117:685:26","statements":[{"nativeSrc":"8127:27:26","nodeType":"YulAssignment","src":"8127:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8139:9:26","nodeType":"YulIdentifier","src":"8139:9:26"},{"kind":"number","nativeSrc":"8150:3:26","nodeType":"YulLiteral","src":"8150:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8135:3:26","nodeType":"YulIdentifier","src":"8135:3:26"},"nativeSrc":"8135:19:26","nodeType":"YulFunctionCall","src":"8135:19:26"},"variableNames":[{"name":"tail","nativeSrc":"8127:4:26","nodeType":"YulIdentifier","src":"8127:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8208:6:26","nodeType":"YulIdentifier","src":"8208:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8221:9:26","nodeType":"YulIdentifier","src":"8221:9:26"},{"kind":"number","nativeSrc":"8232:1:26","nodeType":"YulLiteral","src":"8232:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8217:3:26","nodeType":"YulIdentifier","src":"8217:3:26"},"nativeSrc":"8217:17:26","nodeType":"YulFunctionCall","src":"8217:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8164:43:26","nodeType":"YulIdentifier","src":"8164:43:26"},"nativeSrc":"8164:71:26","nodeType":"YulFunctionCall","src":"8164:71:26"},"nativeSrc":"8164:71:26","nodeType":"YulExpressionStatement","src":"8164:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8289:6:26","nodeType":"YulIdentifier","src":"8289:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8302:9:26","nodeType":"YulIdentifier","src":"8302:9:26"},{"kind":"number","nativeSrc":"8313:2:26","nodeType":"YulLiteral","src":"8313:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8298:3:26","nodeType":"YulIdentifier","src":"8298:3:26"},"nativeSrc":"8298:18:26","nodeType":"YulFunctionCall","src":"8298:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8245:43:26","nodeType":"YulIdentifier","src":"8245:43:26"},"nativeSrc":"8245:72:26","nodeType":"YulFunctionCall","src":"8245:72:26"},"nativeSrc":"8245:72:26","nodeType":"YulExpressionStatement","src":"8245:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8338:9:26","nodeType":"YulIdentifier","src":"8338:9:26"},{"kind":"number","nativeSrc":"8349:2:26","nodeType":"YulLiteral","src":"8349:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8334:3:26","nodeType":"YulIdentifier","src":"8334:3:26"},"nativeSrc":"8334:18:26","nodeType":"YulFunctionCall","src":"8334:18:26"},{"arguments":[{"name":"tail","nativeSrc":"8358:4:26","nodeType":"YulIdentifier","src":"8358:4:26"},{"name":"headStart","nativeSrc":"8364:9:26","nodeType":"YulIdentifier","src":"8364:9:26"}],"functionName":{"name":"sub","nativeSrc":"8354:3:26","nodeType":"YulIdentifier","src":"8354:3:26"},"nativeSrc":"8354:20:26","nodeType":"YulFunctionCall","src":"8354:20:26"}],"functionName":{"name":"mstore","nativeSrc":"8327:6:26","nodeType":"YulIdentifier","src":"8327:6:26"},"nativeSrc":"8327:48:26","nodeType":"YulFunctionCall","src":"8327:48:26"},"nativeSrc":"8327:48:26","nodeType":"YulExpressionStatement","src":"8327:48:26"},{"nativeSrc":"8384:86:26","nodeType":"YulAssignment","src":"8384:86:26","value":{"arguments":[{"name":"value2","nativeSrc":"8456:6:26","nodeType":"YulIdentifier","src":"8456:6:26"},{"name":"tail","nativeSrc":"8465:4:26","nodeType":"YulIdentifier","src":"8465:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8392:63:26","nodeType":"YulIdentifier","src":"8392:63:26"},"nativeSrc":"8392:78:26","nodeType":"YulFunctionCall","src":"8392:78:26"},"variableNames":[{"name":"tail","nativeSrc":"8384:4:26","nodeType":"YulIdentifier","src":"8384:4:26"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8524:6:26","nodeType":"YulIdentifier","src":"8524:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8537:9:26","nodeType":"YulIdentifier","src":"8537:9:26"},{"kind":"number","nativeSrc":"8548:2:26","nodeType":"YulLiteral","src":"8548:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8533:3:26","nodeType":"YulIdentifier","src":"8533:3:26"},"nativeSrc":"8533:18:26","nodeType":"YulFunctionCall","src":"8533:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8480:43:26","nodeType":"YulIdentifier","src":"8480:43:26"},"nativeSrc":"8480:72:26","nodeType":"YulFunctionCall","src":"8480:72:26"},"nativeSrc":"8480:72:26","nodeType":"YulExpressionStatement","src":"8480:72:26"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8600:6:26","nodeType":"YulIdentifier","src":"8600:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8613:9:26","nodeType":"YulIdentifier","src":"8613:9:26"},{"kind":"number","nativeSrc":"8624:3:26","nodeType":"YulLiteral","src":"8624:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8609:3:26","nodeType":"YulIdentifier","src":"8609:3:26"},"nativeSrc":"8609:19:26","nodeType":"YulFunctionCall","src":"8609:19:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"8562:37:26","nodeType":"YulIdentifier","src":"8562:37:26"},"nativeSrc":"8562:67:26","nodeType":"YulFunctionCall","src":"8562:67:26"},"nativeSrc":"8562:67:26","nodeType":"YulExpressionStatement","src":"8562:67:26"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8683:6:26","nodeType":"YulIdentifier","src":"8683:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8696:9:26","nodeType":"YulIdentifier","src":"8696:9:26"},{"kind":"number","nativeSrc":"8707:3:26","nodeType":"YulLiteral","src":"8707:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8692:3:26","nodeType":"YulIdentifier","src":"8692:3:26"},"nativeSrc":"8692:19:26","nodeType":"YulFunctionCall","src":"8692:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8639:43:26","nodeType":"YulIdentifier","src":"8639:43:26"},"nativeSrc":"8639:73:26","nodeType":"YulFunctionCall","src":"8639:73:26"},"nativeSrc":"8639:73:26","nodeType":"YulExpressionStatement","src":"8639:73:26"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"8766:6:26","nodeType":"YulIdentifier","src":"8766:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8779:9:26","nodeType":"YulIdentifier","src":"8779:9:26"},{"kind":"number","nativeSrc":"8790:3:26","nodeType":"YulLiteral","src":"8790:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8775:3:26","nodeType":"YulIdentifier","src":"8775:3:26"},"nativeSrc":"8775:19:26","nodeType":"YulFunctionCall","src":"8775:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8722:43:26","nodeType":"YulIdentifier","src":"8722:43:26"},"nativeSrc":"8722:73:26","nodeType":"YulFunctionCall","src":"8722:73:26"},"nativeSrc":"8722:73:26","nodeType":"YulExpressionStatement","src":"8722:73:26"}]},"name":"abi_encode_tuple_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_bool_t_uint256_t_uint256__to_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_bool_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7837:965:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8041:9:26","nodeType":"YulTypedName","src":"8041:9:26","type":""},{"name":"value6","nativeSrc":"8053:6:26","nodeType":"YulTypedName","src":"8053:6:26","type":""},{"name":"value5","nativeSrc":"8061:6:26","nodeType":"YulTypedName","src":"8061:6:26","type":""},{"name":"value4","nativeSrc":"8069:6:26","nodeType":"YulTypedName","src":"8069:6:26","type":""},{"name":"value3","nativeSrc":"8077:6:26","nodeType":"YulTypedName","src":"8077:6:26","type":""},{"name":"value2","nativeSrc":"8085:6:26","nodeType":"YulTypedName","src":"8085:6:26","type":""},{"name":"value1","nativeSrc":"8093:6:26","nodeType":"YulTypedName","src":"8093:6:26","type":""},{"name":"value0","nativeSrc":"8101:6:26","nodeType":"YulTypedName","src":"8101:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8112:4:26","nodeType":"YulTypedName","src":"8112:4:26","type":""}],"src":"7837:965:26"},{"body":{"nativeSrc":"8891:391:26","nodeType":"YulBlock","src":"8891:391:26","statements":[{"body":{"nativeSrc":"8937:83:26","nodeType":"YulBlock","src":"8937:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8939:77:26","nodeType":"YulIdentifier","src":"8939:77:26"},"nativeSrc":"8939:79:26","nodeType":"YulFunctionCall","src":"8939:79:26"},"nativeSrc":"8939:79:26","nodeType":"YulExpressionStatement","src":"8939:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8912:7:26","nodeType":"YulIdentifier","src":"8912:7:26"},{"name":"headStart","nativeSrc":"8921:9:26","nodeType":"YulIdentifier","src":"8921:9:26"}],"functionName":{"name":"sub","nativeSrc":"8908:3:26","nodeType":"YulIdentifier","src":"8908:3:26"},"nativeSrc":"8908:23:26","nodeType":"YulFunctionCall","src":"8908:23:26"},{"kind":"number","nativeSrc":"8933:2:26","nodeType":"YulLiteral","src":"8933:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8904:3:26","nodeType":"YulIdentifier","src":"8904:3:26"},"nativeSrc":"8904:32:26","nodeType":"YulFunctionCall","src":"8904:32:26"},"nativeSrc":"8901:119:26","nodeType":"YulIf","src":"8901:119:26"},{"nativeSrc":"9030:117:26","nodeType":"YulBlock","src":"9030:117:26","statements":[{"nativeSrc":"9045:15:26","nodeType":"YulVariableDeclaration","src":"9045:15:26","value":{"kind":"number","nativeSrc":"9059:1:26","nodeType":"YulLiteral","src":"9059:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9049:6:26","nodeType":"YulTypedName","src":"9049:6:26","type":""}]},{"nativeSrc":"9074:63:26","nodeType":"YulAssignment","src":"9074:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9109:9:26","nodeType":"YulIdentifier","src":"9109:9:26"},{"name":"offset","nativeSrc":"9120:6:26","nodeType":"YulIdentifier","src":"9120:6:26"}],"functionName":{"name":"add","nativeSrc":"9105:3:26","nodeType":"YulIdentifier","src":"9105:3:26"},"nativeSrc":"9105:22:26","nodeType":"YulFunctionCall","src":"9105:22:26"},{"name":"dataEnd","nativeSrc":"9129:7:26","nodeType":"YulIdentifier","src":"9129:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"9084:20:26","nodeType":"YulIdentifier","src":"9084:20:26"},"nativeSrc":"9084:53:26","nodeType":"YulFunctionCall","src":"9084:53:26"},"variableNames":[{"name":"value0","nativeSrc":"9074:6:26","nodeType":"YulIdentifier","src":"9074:6:26"}]}]},{"nativeSrc":"9157:118:26","nodeType":"YulBlock","src":"9157:118:26","statements":[{"nativeSrc":"9172:16:26","nodeType":"YulVariableDeclaration","src":"9172:16:26","value":{"kind":"number","nativeSrc":"9186:2:26","nodeType":"YulLiteral","src":"9186:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9176:6:26","nodeType":"YulTypedName","src":"9176:6:26","type":""}]},{"nativeSrc":"9202:63:26","nodeType":"YulAssignment","src":"9202:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9237:9:26","nodeType":"YulIdentifier","src":"9237:9:26"},{"name":"offset","nativeSrc":"9248:6:26","nodeType":"YulIdentifier","src":"9248:6:26"}],"functionName":{"name":"add","nativeSrc":"9233:3:26","nodeType":"YulIdentifier","src":"9233:3:26"},"nativeSrc":"9233:22:26","nodeType":"YulFunctionCall","src":"9233:22:26"},{"name":"dataEnd","nativeSrc":"9257:7:26","nodeType":"YulIdentifier","src":"9257:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9212:20:26","nodeType":"YulIdentifier","src":"9212:20:26"},"nativeSrc":"9212:53:26","nodeType":"YulFunctionCall","src":"9212:53:26"},"variableNames":[{"name":"value1","nativeSrc":"9202:6:26","nodeType":"YulIdentifier","src":"9202:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"8808:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8853:9:26","nodeType":"YulTypedName","src":"8853:9:26","type":""},{"name":"dataEnd","nativeSrc":"8864:7:26","nodeType":"YulTypedName","src":"8864:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8876:6:26","nodeType":"YulTypedName","src":"8876:6:26","type":""},{"name":"value1","nativeSrc":"8884:6:26","nodeType":"YulTypedName","src":"8884:6:26","type":""}],"src":"8808:474:26"},{"body":{"nativeSrc":"9354:263:26","nodeType":"YulBlock","src":"9354:263:26","statements":[{"body":{"nativeSrc":"9400:83:26","nodeType":"YulBlock","src":"9400:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9402:77:26","nodeType":"YulIdentifier","src":"9402:77:26"},"nativeSrc":"9402:79:26","nodeType":"YulFunctionCall","src":"9402:79:26"},"nativeSrc":"9402:79:26","nodeType":"YulExpressionStatement","src":"9402:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9375:7:26","nodeType":"YulIdentifier","src":"9375:7:26"},{"name":"headStart","nativeSrc":"9384:9:26","nodeType":"YulIdentifier","src":"9384:9:26"}],"functionName":{"name":"sub","nativeSrc":"9371:3:26","nodeType":"YulIdentifier","src":"9371:3:26"},"nativeSrc":"9371:23:26","nodeType":"YulFunctionCall","src":"9371:23:26"},{"kind":"number","nativeSrc":"9396:2:26","nodeType":"YulLiteral","src":"9396:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9367:3:26","nodeType":"YulIdentifier","src":"9367:3:26"},"nativeSrc":"9367:32:26","nodeType":"YulFunctionCall","src":"9367:32:26"},"nativeSrc":"9364:119:26","nodeType":"YulIf","src":"9364:119:26"},{"nativeSrc":"9493:117:26","nodeType":"YulBlock","src":"9493:117:26","statements":[{"nativeSrc":"9508:15:26","nodeType":"YulVariableDeclaration","src":"9508:15:26","value":{"kind":"number","nativeSrc":"9522:1:26","nodeType":"YulLiteral","src":"9522:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9512:6:26","nodeType":"YulTypedName","src":"9512:6:26","type":""}]},{"nativeSrc":"9537:63:26","nodeType":"YulAssignment","src":"9537:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9572:9:26","nodeType":"YulIdentifier","src":"9572:9:26"},{"name":"offset","nativeSrc":"9583:6:26","nodeType":"YulIdentifier","src":"9583:6:26"}],"functionName":{"name":"add","nativeSrc":"9568:3:26","nodeType":"YulIdentifier","src":"9568:3:26"},"nativeSrc":"9568:22:26","nodeType":"YulFunctionCall","src":"9568:22:26"},{"name":"dataEnd","nativeSrc":"9592:7:26","nodeType":"YulIdentifier","src":"9592:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9547:20:26","nodeType":"YulIdentifier","src":"9547:20:26"},"nativeSrc":"9547:53:26","nodeType":"YulFunctionCall","src":"9547:53:26"},"variableNames":[{"name":"value0","nativeSrc":"9537:6:26","nodeType":"YulIdentifier","src":"9537:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"9288:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9324:9:26","nodeType":"YulTypedName","src":"9324:9:26","type":""},{"name":"dataEnd","nativeSrc":"9335:7:26","nodeType":"YulTypedName","src":"9335:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9347:6:26","nodeType":"YulTypedName","src":"9347:6:26","type":""}],"src":"9288:329:26"},{"body":{"nativeSrc":"9721:124:26","nodeType":"YulBlock","src":"9721:124:26","statements":[{"nativeSrc":"9731:26:26","nodeType":"YulAssignment","src":"9731:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9743:9:26","nodeType":"YulIdentifier","src":"9743:9:26"},{"kind":"number","nativeSrc":"9754:2:26","nodeType":"YulLiteral","src":"9754:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9739:3:26","nodeType":"YulIdentifier","src":"9739:3:26"},"nativeSrc":"9739:18:26","nodeType":"YulFunctionCall","src":"9739:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9731:4:26","nodeType":"YulIdentifier","src":"9731:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9811:6:26","nodeType":"YulIdentifier","src":"9811:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9824:9:26","nodeType":"YulIdentifier","src":"9824:9:26"},{"kind":"number","nativeSrc":"9835:1:26","nodeType":"YulLiteral","src":"9835:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9820:3:26","nodeType":"YulIdentifier","src":"9820:3:26"},"nativeSrc":"9820:17:26","nodeType":"YulFunctionCall","src":"9820:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9767:43:26","nodeType":"YulIdentifier","src":"9767:43:26"},"nativeSrc":"9767:71:26","nodeType":"YulFunctionCall","src":"9767:71:26"},"nativeSrc":"9767:71:26","nodeType":"YulExpressionStatement","src":"9767:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"9623:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9693:9:26","nodeType":"YulTypedName","src":"9693:9:26","type":""},{"name":"value0","nativeSrc":"9705:6:26","nodeType":"YulTypedName","src":"9705:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9716:4:26","nodeType":"YulTypedName","src":"9716:4:26","type":""}],"src":"9623:222:26"},{"body":{"nativeSrc":"9940:28:26","nodeType":"YulBlock","src":"9940:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9957:1:26","nodeType":"YulLiteral","src":"9957:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9960:1:26","nodeType":"YulLiteral","src":"9960:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9950:6:26","nodeType":"YulIdentifier","src":"9950:6:26"},"nativeSrc":"9950:12:26","nodeType":"YulFunctionCall","src":"9950:12:26"},"nativeSrc":"9950:12:26","nodeType":"YulExpressionStatement","src":"9950:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9851:117:26","nodeType":"YulFunctionDefinition","src":"9851:117:26"},{"body":{"nativeSrc":"10063:28:26","nodeType":"YulBlock","src":"10063:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10080:1:26","nodeType":"YulLiteral","src":"10080:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10083:1:26","nodeType":"YulLiteral","src":"10083:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10073:6:26","nodeType":"YulIdentifier","src":"10073:6:26"},"nativeSrc":"10073:12:26","nodeType":"YulFunctionCall","src":"10073:12:26"},"nativeSrc":"10073:12:26","nodeType":"YulExpressionStatement","src":"10073:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"9974:117:26","nodeType":"YulFunctionDefinition","src":"9974:117:26"},{"body":{"nativeSrc":"10125:152:26","nodeType":"YulBlock","src":"10125:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10142:1:26","nodeType":"YulLiteral","src":"10142:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10145:77:26","nodeType":"YulLiteral","src":"10145:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10135:6:26","nodeType":"YulIdentifier","src":"10135:6:26"},"nativeSrc":"10135:88:26","nodeType":"YulFunctionCall","src":"10135:88:26"},"nativeSrc":"10135:88:26","nodeType":"YulExpressionStatement","src":"10135:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10239:1:26","nodeType":"YulLiteral","src":"10239:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"10242:4:26","nodeType":"YulLiteral","src":"10242:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"10232:6:26","nodeType":"YulIdentifier","src":"10232:6:26"},"nativeSrc":"10232:15:26","nodeType":"YulFunctionCall","src":"10232:15:26"},"nativeSrc":"10232:15:26","nodeType":"YulExpressionStatement","src":"10232:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10263:1:26","nodeType":"YulLiteral","src":"10263:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10266:4:26","nodeType":"YulLiteral","src":"10266:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10256:6:26","nodeType":"YulIdentifier","src":"10256:6:26"},"nativeSrc":"10256:15:26","nodeType":"YulFunctionCall","src":"10256:15:26"},"nativeSrc":"10256:15:26","nodeType":"YulExpressionStatement","src":"10256:15:26"}]},"name":"panic_error_0x41","nativeSrc":"10097:180:26","nodeType":"YulFunctionDefinition","src":"10097:180:26"},{"body":{"nativeSrc":"10326:238:26","nodeType":"YulBlock","src":"10326:238:26","statements":[{"nativeSrc":"10336:58:26","nodeType":"YulVariableDeclaration","src":"10336:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"10358:6:26","nodeType":"YulIdentifier","src":"10358:6:26"},{"arguments":[{"name":"size","nativeSrc":"10388:4:26","nodeType":"YulIdentifier","src":"10388:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10366:21:26","nodeType":"YulIdentifier","src":"10366:21:26"},"nativeSrc":"10366:27:26","nodeType":"YulFunctionCall","src":"10366:27:26"}],"functionName":{"name":"add","nativeSrc":"10354:3:26","nodeType":"YulIdentifier","src":"10354:3:26"},"nativeSrc":"10354:40:26","nodeType":"YulFunctionCall","src":"10354:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"10340:10:26","nodeType":"YulTypedName","src":"10340:10:26","type":""}]},{"body":{"nativeSrc":"10505:22:26","nodeType":"YulBlock","src":"10505:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10507:16:26","nodeType":"YulIdentifier","src":"10507:16:26"},"nativeSrc":"10507:18:26","nodeType":"YulFunctionCall","src":"10507:18:26"},"nativeSrc":"10507:18:26","nodeType":"YulExpressionStatement","src":"10507:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"10448:10:26","nodeType":"YulIdentifier","src":"10448:10:26"},{"kind":"number","nativeSrc":"10460:18:26","nodeType":"YulLiteral","src":"10460:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10445:2:26","nodeType":"YulIdentifier","src":"10445:2:26"},"nativeSrc":"10445:34:26","nodeType":"YulFunctionCall","src":"10445:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"10484:10:26","nodeType":"YulIdentifier","src":"10484:10:26"},{"name":"memPtr","nativeSrc":"10496:6:26","nodeType":"YulIdentifier","src":"10496:6:26"}],"functionName":{"name":"lt","nativeSrc":"10481:2:26","nodeType":"YulIdentifier","src":"10481:2:26"},"nativeSrc":"10481:22:26","nodeType":"YulFunctionCall","src":"10481:22:26"}],"functionName":{"name":"or","nativeSrc":"10442:2:26","nodeType":"YulIdentifier","src":"10442:2:26"},"nativeSrc":"10442:62:26","nodeType":"YulFunctionCall","src":"10442:62:26"},"nativeSrc":"10439:88:26","nodeType":"YulIf","src":"10439:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10543:2:26","nodeType":"YulLiteral","src":"10543:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"10547:10:26","nodeType":"YulIdentifier","src":"10547:10:26"}],"functionName":{"name":"mstore","nativeSrc":"10536:6:26","nodeType":"YulIdentifier","src":"10536:6:26"},"nativeSrc":"10536:22:26","nodeType":"YulFunctionCall","src":"10536:22:26"},"nativeSrc":"10536:22:26","nodeType":"YulExpressionStatement","src":"10536:22:26"}]},"name":"finalize_allocation","nativeSrc":"10283:281:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10312:6:26","nodeType":"YulTypedName","src":"10312:6:26","type":""},{"name":"size","nativeSrc":"10320:4:26","nodeType":"YulTypedName","src":"10320:4:26","type":""}],"src":"10283:281:26"},{"body":{"nativeSrc":"10611:88:26","nodeType":"YulBlock","src":"10611:88:26","statements":[{"nativeSrc":"10621:30:26","nodeType":"YulAssignment","src":"10621:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"10631:18:26","nodeType":"YulIdentifier","src":"10631:18:26"},"nativeSrc":"10631:20:26","nodeType":"YulFunctionCall","src":"10631:20:26"},"variableNames":[{"name":"memPtr","nativeSrc":"10621:6:26","nodeType":"YulIdentifier","src":"10621:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"10680:6:26","nodeType":"YulIdentifier","src":"10680:6:26"},{"name":"size","nativeSrc":"10688:4:26","nodeType":"YulIdentifier","src":"10688:4:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"10660:19:26","nodeType":"YulIdentifier","src":"10660:19:26"},"nativeSrc":"10660:33:26","nodeType":"YulFunctionCall","src":"10660:33:26"},"nativeSrc":"10660:33:26","nodeType":"YulExpressionStatement","src":"10660:33:26"}]},"name":"allocate_memory","nativeSrc":"10570:129:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"10595:4:26","nodeType":"YulTypedName","src":"10595:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"10604:6:26","nodeType":"YulTypedName","src":"10604:6:26","type":""}],"src":"10570:129:26"},{"body":{"nativeSrc":"10772:241:26","nodeType":"YulBlock","src":"10772:241:26","statements":[{"body":{"nativeSrc":"10877:22:26","nodeType":"YulBlock","src":"10877:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10879:16:26","nodeType":"YulIdentifier","src":"10879:16:26"},"nativeSrc":"10879:18:26","nodeType":"YulFunctionCall","src":"10879:18:26"},"nativeSrc":"10879:18:26","nodeType":"YulExpressionStatement","src":"10879:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10849:6:26","nodeType":"YulIdentifier","src":"10849:6:26"},{"kind":"number","nativeSrc":"10857:18:26","nodeType":"YulLiteral","src":"10857:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10846:2:26","nodeType":"YulIdentifier","src":"10846:2:26"},"nativeSrc":"10846:30:26","nodeType":"YulFunctionCall","src":"10846:30:26"},"nativeSrc":"10843:56:26","nodeType":"YulIf","src":"10843:56:26"},{"nativeSrc":"10909:37:26","nodeType":"YulAssignment","src":"10909:37:26","value":{"arguments":[{"name":"length","nativeSrc":"10939:6:26","nodeType":"YulIdentifier","src":"10939:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10917:21:26","nodeType":"YulIdentifier","src":"10917:21:26"},"nativeSrc":"10917:29:26","nodeType":"YulFunctionCall","src":"10917:29:26"},"variableNames":[{"name":"size","nativeSrc":"10909:4:26","nodeType":"YulIdentifier","src":"10909:4:26"}]},{"nativeSrc":"10983:23:26","nodeType":"YulAssignment","src":"10983:23:26","value":{"arguments":[{"name":"size","nativeSrc":"10995:4:26","nodeType":"YulIdentifier","src":"10995:4:26"},{"kind":"number","nativeSrc":"11001:4:26","nodeType":"YulLiteral","src":"11001:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10991:3:26","nodeType":"YulIdentifier","src":"10991:3:26"},"nativeSrc":"10991:15:26","nodeType":"YulFunctionCall","src":"10991:15:26"},"variableNames":[{"name":"size","nativeSrc":"10983:4:26","nodeType":"YulIdentifier","src":"10983:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"10705:308:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10756:6:26","nodeType":"YulTypedName","src":"10756:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10767:4:26","nodeType":"YulTypedName","src":"10767:4:26","type":""}],"src":"10705:308:26"},{"body":{"nativeSrc":"11083:84:26","nodeType":"YulBlock","src":"11083:84:26","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"11107:3:26","nodeType":"YulIdentifier","src":"11107:3:26"},{"name":"src","nativeSrc":"11112:3:26","nodeType":"YulIdentifier","src":"11112:3:26"},{"name":"length","nativeSrc":"11117:6:26","nodeType":"YulIdentifier","src":"11117:6:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"11094:12:26","nodeType":"YulIdentifier","src":"11094:12:26"},"nativeSrc":"11094:30:26","nodeType":"YulFunctionCall","src":"11094:30:26"},"nativeSrc":"11094:30:26","nodeType":"YulExpressionStatement","src":"11094:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11144:3:26","nodeType":"YulIdentifier","src":"11144:3:26"},{"name":"length","nativeSrc":"11149:6:26","nodeType":"YulIdentifier","src":"11149:6:26"}],"functionName":{"name":"add","nativeSrc":"11140:3:26","nodeType":"YulIdentifier","src":"11140:3:26"},"nativeSrc":"11140:16:26","nodeType":"YulFunctionCall","src":"11140:16:26"},{"kind":"number","nativeSrc":"11158:1:26","nodeType":"YulLiteral","src":"11158:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11133:6:26","nodeType":"YulIdentifier","src":"11133:6:26"},"nativeSrc":"11133:27:26","nodeType":"YulFunctionCall","src":"11133:27:26"},"nativeSrc":"11133:27:26","nodeType":"YulExpressionStatement","src":"11133:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11019:148:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11065:3:26","nodeType":"YulTypedName","src":"11065:3:26","type":""},{"name":"dst","nativeSrc":"11070:3:26","nodeType":"YulTypedName","src":"11070:3:26","type":""},{"name":"length","nativeSrc":"11075:6:26","nodeType":"YulTypedName","src":"11075:6:26","type":""}],"src":"11019:148:26"},{"body":{"nativeSrc":"11257:341:26","nodeType":"YulBlock","src":"11257:341:26","statements":[{"nativeSrc":"11267:75:26","nodeType":"YulAssignment","src":"11267:75:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"11334:6:26","nodeType":"YulIdentifier","src":"11334:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"11292:41:26","nodeType":"YulIdentifier","src":"11292:41:26"},"nativeSrc":"11292:49:26","nodeType":"YulFunctionCall","src":"11292:49:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"11276:15:26","nodeType":"YulIdentifier","src":"11276:15:26"},"nativeSrc":"11276:66:26","nodeType":"YulFunctionCall","src":"11276:66:26"},"variableNames":[{"name":"array","nativeSrc":"11267:5:26","nodeType":"YulIdentifier","src":"11267:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"11358:5:26","nodeType":"YulIdentifier","src":"11358:5:26"},{"name":"length","nativeSrc":"11365:6:26","nodeType":"YulIdentifier","src":"11365:6:26"}],"functionName":{"name":"mstore","nativeSrc":"11351:6:26","nodeType":"YulIdentifier","src":"11351:6:26"},"nativeSrc":"11351:21:26","nodeType":"YulFunctionCall","src":"11351:21:26"},"nativeSrc":"11351:21:26","nodeType":"YulExpressionStatement","src":"11351:21:26"},{"nativeSrc":"11381:27:26","nodeType":"YulVariableDeclaration","src":"11381:27:26","value":{"arguments":[{"name":"array","nativeSrc":"11396:5:26","nodeType":"YulIdentifier","src":"11396:5:26"},{"kind":"number","nativeSrc":"11403:4:26","nodeType":"YulLiteral","src":"11403:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11392:3:26","nodeType":"YulIdentifier","src":"11392:3:26"},"nativeSrc":"11392:16:26","nodeType":"YulFunctionCall","src":"11392:16:26"},"variables":[{"name":"dst","nativeSrc":"11385:3:26","nodeType":"YulTypedName","src":"11385:3:26","type":""}]},{"body":{"nativeSrc":"11446:83:26","nodeType":"YulBlock","src":"11446:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"11448:77:26","nodeType":"YulIdentifier","src":"11448:77:26"},"nativeSrc":"11448:79:26","nodeType":"YulFunctionCall","src":"11448:79:26"},"nativeSrc":"11448:79:26","nodeType":"YulExpressionStatement","src":"11448:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11427:3:26","nodeType":"YulIdentifier","src":"11427:3:26"},{"name":"length","nativeSrc":"11432:6:26","nodeType":"YulIdentifier","src":"11432:6:26"}],"functionName":{"name":"add","nativeSrc":"11423:3:26","nodeType":"YulIdentifier","src":"11423:3:26"},"nativeSrc":"11423:16:26","nodeType":"YulFunctionCall","src":"11423:16:26"},{"name":"end","nativeSrc":"11441:3:26","nodeType":"YulIdentifier","src":"11441:3:26"}],"functionName":{"name":"gt","nativeSrc":"11420:2:26","nodeType":"YulIdentifier","src":"11420:2:26"},"nativeSrc":"11420:25:26","nodeType":"YulFunctionCall","src":"11420:25:26"},"nativeSrc":"11417:112:26","nodeType":"YulIf","src":"11417:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"11575:3:26","nodeType":"YulIdentifier","src":"11575:3:26"},{"name":"dst","nativeSrc":"11580:3:26","nodeType":"YulIdentifier","src":"11580:3:26"},{"name":"length","nativeSrc":"11585:6:26","nodeType":"YulIdentifier","src":"11585:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11538:36:26","nodeType":"YulIdentifier","src":"11538:36:26"},"nativeSrc":"11538:54:26","nodeType":"YulFunctionCall","src":"11538:54:26"},"nativeSrc":"11538:54:26","nodeType":"YulExpressionStatement","src":"11538:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"11173:425:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11230:3:26","nodeType":"YulTypedName","src":"11230:3:26","type":""},{"name":"length","nativeSrc":"11235:6:26","nodeType":"YulTypedName","src":"11235:6:26","type":""},{"name":"end","nativeSrc":"11243:3:26","nodeType":"YulTypedName","src":"11243:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11251:5:26","nodeType":"YulTypedName","src":"11251:5:26","type":""}],"src":"11173:425:26"},{"body":{"nativeSrc":"11680:278:26","nodeType":"YulBlock","src":"11680:278:26","statements":[{"body":{"nativeSrc":"11729:83:26","nodeType":"YulBlock","src":"11729:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"11731:77:26","nodeType":"YulIdentifier","src":"11731:77:26"},"nativeSrc":"11731:79:26","nodeType":"YulFunctionCall","src":"11731:79:26"},"nativeSrc":"11731:79:26","nodeType":"YulExpressionStatement","src":"11731:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11708:6:26","nodeType":"YulIdentifier","src":"11708:6:26"},{"kind":"number","nativeSrc":"11716:4:26","nodeType":"YulLiteral","src":"11716:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11704:3:26","nodeType":"YulIdentifier","src":"11704:3:26"},"nativeSrc":"11704:17:26","nodeType":"YulFunctionCall","src":"11704:17:26"},{"name":"end","nativeSrc":"11723:3:26","nodeType":"YulIdentifier","src":"11723:3:26"}],"functionName":{"name":"slt","nativeSrc":"11700:3:26","nodeType":"YulIdentifier","src":"11700:3:26"},"nativeSrc":"11700:27:26","nodeType":"YulFunctionCall","src":"11700:27:26"}],"functionName":{"name":"iszero","nativeSrc":"11693:6:26","nodeType":"YulIdentifier","src":"11693:6:26"},"nativeSrc":"11693:35:26","nodeType":"YulFunctionCall","src":"11693:35:26"},"nativeSrc":"11690:122:26","nodeType":"YulIf","src":"11690:122:26"},{"nativeSrc":"11821:34:26","nodeType":"YulVariableDeclaration","src":"11821:34:26","value":{"arguments":[{"name":"offset","nativeSrc":"11848:6:26","nodeType":"YulIdentifier","src":"11848:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"11835:12:26","nodeType":"YulIdentifier","src":"11835:12:26"},"nativeSrc":"11835:20:26","nodeType":"YulFunctionCall","src":"11835:20:26"},"variables":[{"name":"length","nativeSrc":"11825:6:26","nodeType":"YulTypedName","src":"11825:6:26","type":""}]},{"nativeSrc":"11864:88:26","nodeType":"YulAssignment","src":"11864:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11925:6:26","nodeType":"YulIdentifier","src":"11925:6:26"},{"kind":"number","nativeSrc":"11933:4:26","nodeType":"YulLiteral","src":"11933:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11921:3:26","nodeType":"YulIdentifier","src":"11921:3:26"},"nativeSrc":"11921:17:26","nodeType":"YulFunctionCall","src":"11921:17:26"},{"name":"length","nativeSrc":"11940:6:26","nodeType":"YulIdentifier","src":"11940:6:26"},{"name":"end","nativeSrc":"11948:3:26","nodeType":"YulIdentifier","src":"11948:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"11873:47:26","nodeType":"YulIdentifier","src":"11873:47:26"},"nativeSrc":"11873:79:26","nodeType":"YulFunctionCall","src":"11873:79:26"},"variableNames":[{"name":"array","nativeSrc":"11864:5:26","nodeType":"YulIdentifier","src":"11864:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11618:340:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11658:6:26","nodeType":"YulTypedName","src":"11658:6:26","type":""},{"name":"end","nativeSrc":"11666:3:26","nodeType":"YulTypedName","src":"11666:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11674:5:26","nodeType":"YulTypedName","src":"11674:5:26","type":""}],"src":"11618:340:26"},{"body":{"nativeSrc":"12128:1287:26","nodeType":"YulBlock","src":"12128:1287:26","statements":[{"body":{"nativeSrc":"12175:83:26","nodeType":"YulBlock","src":"12175:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12177:77:26","nodeType":"YulIdentifier","src":"12177:77:26"},"nativeSrc":"12177:79:26","nodeType":"YulFunctionCall","src":"12177:79:26"},"nativeSrc":"12177:79:26","nodeType":"YulExpressionStatement","src":"12177:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12149:7:26","nodeType":"YulIdentifier","src":"12149:7:26"},{"name":"headStart","nativeSrc":"12158:9:26","nodeType":"YulIdentifier","src":"12158:9:26"}],"functionName":{"name":"sub","nativeSrc":"12145:3:26","nodeType":"YulIdentifier","src":"12145:3:26"},"nativeSrc":"12145:23:26","nodeType":"YulFunctionCall","src":"12145:23:26"},{"kind":"number","nativeSrc":"12170:3:26","nodeType":"YulLiteral","src":"12170:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"12141:3:26","nodeType":"YulIdentifier","src":"12141:3:26"},"nativeSrc":"12141:33:26","nodeType":"YulFunctionCall","src":"12141:33:26"},"nativeSrc":"12138:120:26","nodeType":"YulIf","src":"12138:120:26"},{"nativeSrc":"12268:287:26","nodeType":"YulBlock","src":"12268:287:26","statements":[{"nativeSrc":"12283:45:26","nodeType":"YulVariableDeclaration","src":"12283:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12314:9:26","nodeType":"YulIdentifier","src":"12314:9:26"},{"kind":"number","nativeSrc":"12325:1:26","nodeType":"YulLiteral","src":"12325:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12310:3:26","nodeType":"YulIdentifier","src":"12310:3:26"},"nativeSrc":"12310:17:26","nodeType":"YulFunctionCall","src":"12310:17:26"}],"functionName":{"name":"calldataload","nativeSrc":"12297:12:26","nodeType":"YulIdentifier","src":"12297:12:26"},"nativeSrc":"12297:31:26","nodeType":"YulFunctionCall","src":"12297:31:26"},"variables":[{"name":"offset","nativeSrc":"12287:6:26","nodeType":"YulTypedName","src":"12287:6:26","type":""}]},{"body":{"nativeSrc":"12375:83:26","nodeType":"YulBlock","src":"12375:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12377:77:26","nodeType":"YulIdentifier","src":"12377:77:26"},"nativeSrc":"12377:79:26","nodeType":"YulFunctionCall","src":"12377:79:26"},"nativeSrc":"12377:79:26","nodeType":"YulExpressionStatement","src":"12377:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12347:6:26","nodeType":"YulIdentifier","src":"12347:6:26"},{"kind":"number","nativeSrc":"12355:18:26","nodeType":"YulLiteral","src":"12355:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12344:2:26","nodeType":"YulIdentifier","src":"12344:2:26"},"nativeSrc":"12344:30:26","nodeType":"YulFunctionCall","src":"12344:30:26"},"nativeSrc":"12341:117:26","nodeType":"YulIf","src":"12341:117:26"},{"nativeSrc":"12472:73:26","nodeType":"YulAssignment","src":"12472:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12517:9:26","nodeType":"YulIdentifier","src":"12517:9:26"},{"name":"offset","nativeSrc":"12528:6:26","nodeType":"YulIdentifier","src":"12528:6:26"}],"functionName":{"name":"add","nativeSrc":"12513:3:26","nodeType":"YulIdentifier","src":"12513:3:26"},"nativeSrc":"12513:22:26","nodeType":"YulFunctionCall","src":"12513:22:26"},{"name":"dataEnd","nativeSrc":"12537:7:26","nodeType":"YulIdentifier","src":"12537:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12482:30:26","nodeType":"YulIdentifier","src":"12482:30:26"},"nativeSrc":"12482:63:26","nodeType":"YulFunctionCall","src":"12482:63:26"},"variableNames":[{"name":"value0","nativeSrc":"12472:6:26","nodeType":"YulIdentifier","src":"12472:6:26"}]}]},{"nativeSrc":"12565:288:26","nodeType":"YulBlock","src":"12565:288:26","statements":[{"nativeSrc":"12580:46:26","nodeType":"YulVariableDeclaration","src":"12580:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12611:9:26","nodeType":"YulIdentifier","src":"12611:9:26"},{"kind":"number","nativeSrc":"12622:2:26","nodeType":"YulLiteral","src":"12622:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12607:3:26","nodeType":"YulIdentifier","src":"12607:3:26"},"nativeSrc":"12607:18:26","nodeType":"YulFunctionCall","src":"12607:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"12594:12:26","nodeType":"YulIdentifier","src":"12594:12:26"},"nativeSrc":"12594:32:26","nodeType":"YulFunctionCall","src":"12594:32:26"},"variables":[{"name":"offset","nativeSrc":"12584:6:26","nodeType":"YulTypedName","src":"12584:6:26","type":""}]},{"body":{"nativeSrc":"12673:83:26","nodeType":"YulBlock","src":"12673:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12675:77:26","nodeType":"YulIdentifier","src":"12675:77:26"},"nativeSrc":"12675:79:26","nodeType":"YulFunctionCall","src":"12675:79:26"},"nativeSrc":"12675:79:26","nodeType":"YulExpressionStatement","src":"12675:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12645:6:26","nodeType":"YulIdentifier","src":"12645:6:26"},{"kind":"number","nativeSrc":"12653:18:26","nodeType":"YulLiteral","src":"12653:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12642:2:26","nodeType":"YulIdentifier","src":"12642:2:26"},"nativeSrc":"12642:30:26","nodeType":"YulFunctionCall","src":"12642:30:26"},"nativeSrc":"12639:117:26","nodeType":"YulIf","src":"12639:117:26"},{"nativeSrc":"12770:73:26","nodeType":"YulAssignment","src":"12770:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12815:9:26","nodeType":"YulIdentifier","src":"12815:9:26"},{"name":"offset","nativeSrc":"12826:6:26","nodeType":"YulIdentifier","src":"12826:6:26"}],"functionName":{"name":"add","nativeSrc":"12811:3:26","nodeType":"YulIdentifier","src":"12811:3:26"},"nativeSrc":"12811:22:26","nodeType":"YulFunctionCall","src":"12811:22:26"},{"name":"dataEnd","nativeSrc":"12835:7:26","nodeType":"YulIdentifier","src":"12835:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12780:30:26","nodeType":"YulIdentifier","src":"12780:30:26"},"nativeSrc":"12780:63:26","nodeType":"YulFunctionCall","src":"12780:63:26"},"variableNames":[{"name":"value1","nativeSrc":"12770:6:26","nodeType":"YulIdentifier","src":"12770:6:26"}]}]},{"nativeSrc":"12863:118:26","nodeType":"YulBlock","src":"12863:118:26","statements":[{"nativeSrc":"12878:16:26","nodeType":"YulVariableDeclaration","src":"12878:16:26","value":{"kind":"number","nativeSrc":"12892:2:26","nodeType":"YulLiteral","src":"12892:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12882:6:26","nodeType":"YulTypedName","src":"12882:6:26","type":""}]},{"nativeSrc":"12908:63:26","nodeType":"YulAssignment","src":"12908:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12943:9:26","nodeType":"YulIdentifier","src":"12943:9:26"},{"name":"offset","nativeSrc":"12954:6:26","nodeType":"YulIdentifier","src":"12954:6:26"}],"functionName":{"name":"add","nativeSrc":"12939:3:26","nodeType":"YulIdentifier","src":"12939:3:26"},"nativeSrc":"12939:22:26","nodeType":"YulFunctionCall","src":"12939:22:26"},{"name":"dataEnd","nativeSrc":"12963:7:26","nodeType":"YulIdentifier","src":"12963:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12918:20:26","nodeType":"YulIdentifier","src":"12918:20:26"},"nativeSrc":"12918:53:26","nodeType":"YulFunctionCall","src":"12918:53:26"},"variableNames":[{"name":"value2","nativeSrc":"12908:6:26","nodeType":"YulIdentifier","src":"12908:6:26"}]}]},{"nativeSrc":"12991:118:26","nodeType":"YulBlock","src":"12991:118:26","statements":[{"nativeSrc":"13006:16:26","nodeType":"YulVariableDeclaration","src":"13006:16:26","value":{"kind":"number","nativeSrc":"13020:2:26","nodeType":"YulLiteral","src":"13020:2:26","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"13010:6:26","nodeType":"YulTypedName","src":"13010:6:26","type":""}]},{"nativeSrc":"13036:63:26","nodeType":"YulAssignment","src":"13036:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13071:9:26","nodeType":"YulIdentifier","src":"13071:9:26"},{"name":"offset","nativeSrc":"13082:6:26","nodeType":"YulIdentifier","src":"13082:6:26"}],"functionName":{"name":"add","nativeSrc":"13067:3:26","nodeType":"YulIdentifier","src":"13067:3:26"},"nativeSrc":"13067:22:26","nodeType":"YulFunctionCall","src":"13067:22:26"},{"name":"dataEnd","nativeSrc":"13091:7:26","nodeType":"YulIdentifier","src":"13091:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13046:20:26","nodeType":"YulIdentifier","src":"13046:20:26"},"nativeSrc":"13046:53:26","nodeType":"YulFunctionCall","src":"13046:53:26"},"variableNames":[{"name":"value3","nativeSrc":"13036:6:26","nodeType":"YulIdentifier","src":"13036:6:26"}]}]},{"nativeSrc":"13119:289:26","nodeType":"YulBlock","src":"13119:289:26","statements":[{"nativeSrc":"13134:47:26","nodeType":"YulVariableDeclaration","src":"13134:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13165:9:26","nodeType":"YulIdentifier","src":"13165:9:26"},{"kind":"number","nativeSrc":"13176:3:26","nodeType":"YulLiteral","src":"13176:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13161:3:26","nodeType":"YulIdentifier","src":"13161:3:26"},"nativeSrc":"13161:19:26","nodeType":"YulFunctionCall","src":"13161:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"13148:12:26","nodeType":"YulIdentifier","src":"13148:12:26"},"nativeSrc":"13148:33:26","nodeType":"YulFunctionCall","src":"13148:33:26"},"variables":[{"name":"offset","nativeSrc":"13138:6:26","nodeType":"YulTypedName","src":"13138:6:26","type":""}]},{"body":{"nativeSrc":"13228:83:26","nodeType":"YulBlock","src":"13228:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"13230:77:26","nodeType":"YulIdentifier","src":"13230:77:26"},"nativeSrc":"13230:79:26","nodeType":"YulFunctionCall","src":"13230:79:26"},"nativeSrc":"13230:79:26","nodeType":"YulExpressionStatement","src":"13230:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13200:6:26","nodeType":"YulIdentifier","src":"13200:6:26"},{"kind":"number","nativeSrc":"13208:18:26","nodeType":"YulLiteral","src":"13208:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13197:2:26","nodeType":"YulIdentifier","src":"13197:2:26"},"nativeSrc":"13197:30:26","nodeType":"YulFunctionCall","src":"13197:30:26"},"nativeSrc":"13194:117:26","nodeType":"YulIf","src":"13194:117:26"},{"nativeSrc":"13325:73:26","nodeType":"YulAssignment","src":"13325:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13370:9:26","nodeType":"YulIdentifier","src":"13370:9:26"},{"name":"offset","nativeSrc":"13381:6:26","nodeType":"YulIdentifier","src":"13381:6:26"}],"functionName":{"name":"add","nativeSrc":"13366:3:26","nodeType":"YulIdentifier","src":"13366:3:26"},"nativeSrc":"13366:22:26","nodeType":"YulFunctionCall","src":"13366:22:26"},{"name":"dataEnd","nativeSrc":"13390:7:26","nodeType":"YulIdentifier","src":"13390:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"13335:30:26","nodeType":"YulIdentifier","src":"13335:30:26"},"nativeSrc":"13335:63:26","nodeType":"YulFunctionCall","src":"13335:63:26"},"variableNames":[{"name":"value4","nativeSrc":"13325:6:26","nodeType":"YulIdentifier","src":"13325:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_string_memory_ptr","nativeSrc":"11964:1451:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12066:9:26","nodeType":"YulTypedName","src":"12066:9:26","type":""},{"name":"dataEnd","nativeSrc":"12077:7:26","nodeType":"YulTypedName","src":"12077:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12089:6:26","nodeType":"YulTypedName","src":"12089:6:26","type":""},{"name":"value1","nativeSrc":"12097:6:26","nodeType":"YulTypedName","src":"12097:6:26","type":""},{"name":"value2","nativeSrc":"12105:6:26","nodeType":"YulTypedName","src":"12105:6:26","type":""},{"name":"value3","nativeSrc":"12113:6:26","nodeType":"YulTypedName","src":"12113:6:26","type":""},{"name":"value4","nativeSrc":"12121:6:26","nodeType":"YulTypedName","src":"12121:6:26","type":""}],"src":"11964:1451:26"},{"body":{"nativeSrc":"13453:28:26","nodeType":"YulBlock","src":"13453:28:26","statements":[{"nativeSrc":"13463:12:26","nodeType":"YulAssignment","src":"13463:12:26","value":{"name":"value","nativeSrc":"13470:5:26","nodeType":"YulIdentifier","src":"13470:5:26"},"variableNames":[{"name":"ret","nativeSrc":"13463:3:26","nodeType":"YulIdentifier","src":"13463:3:26"}]}]},"name":"identity","nativeSrc":"13421:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13439:5:26","nodeType":"YulTypedName","src":"13439:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"13449:3:26","nodeType":"YulTypedName","src":"13449:3:26","type":""}],"src":"13421:60:26"},{"body":{"nativeSrc":"13547:82:26","nodeType":"YulBlock","src":"13547:82:26","statements":[{"nativeSrc":"13557:66:26","nodeType":"YulAssignment","src":"13557:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13615:5:26","nodeType":"YulIdentifier","src":"13615:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"13597:17:26","nodeType":"YulIdentifier","src":"13597:17:26"},"nativeSrc":"13597:24:26","nodeType":"YulFunctionCall","src":"13597:24:26"}],"functionName":{"name":"identity","nativeSrc":"13588:8:26","nodeType":"YulIdentifier","src":"13588:8:26"},"nativeSrc":"13588:34:26","nodeType":"YulFunctionCall","src":"13588:34:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"13570:17:26","nodeType":"YulIdentifier","src":"13570:17:26"},"nativeSrc":"13570:53:26","nodeType":"YulFunctionCall","src":"13570:53:26"},"variableNames":[{"name":"converted","nativeSrc":"13557:9:26","nodeType":"YulIdentifier","src":"13557:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"13487:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13527:5:26","nodeType":"YulTypedName","src":"13527:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13537:9:26","nodeType":"YulTypedName","src":"13537:9:26","type":""}],"src":"13487:142:26"},{"body":{"nativeSrc":"13695:66:26","nodeType":"YulBlock","src":"13695:66:26","statements":[{"nativeSrc":"13705:50:26","nodeType":"YulAssignment","src":"13705:50:26","value":{"arguments":[{"name":"value","nativeSrc":"13749:5:26","nodeType":"YulIdentifier","src":"13749:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"13718:30:26","nodeType":"YulIdentifier","src":"13718:30:26"},"nativeSrc":"13718:37:26","nodeType":"YulFunctionCall","src":"13718:37:26"},"variableNames":[{"name":"converted","nativeSrc":"13705:9:26","nodeType":"YulIdentifier","src":"13705:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"13635:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13675:5:26","nodeType":"YulTypedName","src":"13675:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13685:9:26","nodeType":"YulTypedName","src":"13685:9:26","type":""}],"src":"13635:126:26"},{"body":{"nativeSrc":"13847:66:26","nodeType":"YulBlock","src":"13847:66:26","statements":[{"nativeSrc":"13857:50:26","nodeType":"YulAssignment","src":"13857:50:26","value":{"arguments":[{"name":"value","nativeSrc":"13901:5:26","nodeType":"YulIdentifier","src":"13901:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"13870:30:26","nodeType":"YulIdentifier","src":"13870:30:26"},"nativeSrc":"13870:37:26","nodeType":"YulFunctionCall","src":"13870:37:26"},"variableNames":[{"name":"converted","nativeSrc":"13857:9:26","nodeType":"YulIdentifier","src":"13857:9:26"}]}]},"name":"convert_t_contract$_CarbonToken_$7790_to_t_address","nativeSrc":"13767:146:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13827:5:26","nodeType":"YulTypedName","src":"13827:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13837:9:26","nodeType":"YulTypedName","src":"13837:9:26","type":""}],"src":"13767:146:26"},{"body":{"nativeSrc":"14004:86:26","nodeType":"YulBlock","src":"14004:86:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14021:3:26","nodeType":"YulIdentifier","src":"14021:3:26"},{"arguments":[{"name":"value","nativeSrc":"14077:5:26","nodeType":"YulIdentifier","src":"14077:5:26"}],"functionName":{"name":"convert_t_contract$_CarbonToken_$7790_to_t_address","nativeSrc":"14026:50:26","nodeType":"YulIdentifier","src":"14026:50:26"},"nativeSrc":"14026:57:26","nodeType":"YulFunctionCall","src":"14026:57:26"}],"functionName":{"name":"mstore","nativeSrc":"14014:6:26","nodeType":"YulIdentifier","src":"14014:6:26"},"nativeSrc":"14014:70:26","nodeType":"YulFunctionCall","src":"14014:70:26"},"nativeSrc":"14014:70:26","nodeType":"YulExpressionStatement","src":"14014:70:26"}]},"name":"abi_encode_t_contract$_CarbonToken_$7790_to_t_address_fromStack","nativeSrc":"13919:171:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13992:5:26","nodeType":"YulTypedName","src":"13992:5:26","type":""},{"name":"pos","nativeSrc":"13999:3:26","nodeType":"YulTypedName","src":"13999:3:26","type":""}],"src":"13919:171:26"},{"body":{"nativeSrc":"14214:144:26","nodeType":"YulBlock","src":"14214:144:26","statements":[{"nativeSrc":"14224:26:26","nodeType":"YulAssignment","src":"14224:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"14236:9:26","nodeType":"YulIdentifier","src":"14236:9:26"},{"kind":"number","nativeSrc":"14247:2:26","nodeType":"YulLiteral","src":"14247:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14232:3:26","nodeType":"YulIdentifier","src":"14232:3:26"},"nativeSrc":"14232:18:26","nodeType":"YulFunctionCall","src":"14232:18:26"},"variableNames":[{"name":"tail","nativeSrc":"14224:4:26","nodeType":"YulIdentifier","src":"14224:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14324:6:26","nodeType":"YulIdentifier","src":"14324:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"14337:9:26","nodeType":"YulIdentifier","src":"14337:9:26"},{"kind":"number","nativeSrc":"14348:1:26","nodeType":"YulLiteral","src":"14348:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14333:3:26","nodeType":"YulIdentifier","src":"14333:3:26"},"nativeSrc":"14333:17:26","nodeType":"YulFunctionCall","src":"14333:17:26"}],"functionName":{"name":"abi_encode_t_contract$_CarbonToken_$7790_to_t_address_fromStack","nativeSrc":"14260:63:26","nodeType":"YulIdentifier","src":"14260:63:26"},"nativeSrc":"14260:91:26","nodeType":"YulFunctionCall","src":"14260:91:26"},"nativeSrc":"14260:91:26","nodeType":"YulExpressionStatement","src":"14260:91:26"}]},"name":"abi_encode_tuple_t_contract$_CarbonToken_$7790__to_t_address__fromStack_reversed","nativeSrc":"14096:262:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14186:9:26","nodeType":"YulTypedName","src":"14186:9:26","type":""},{"name":"value0","nativeSrc":"14198:6:26","nodeType":"YulTypedName","src":"14198:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14209:4:26","nodeType":"YulTypedName","src":"14209:4:26","type":""}],"src":"14096:262:26"},{"body":{"nativeSrc":"14474:689:26","nodeType":"YulBlock","src":"14474:689:26","statements":[{"body":{"nativeSrc":"14520:83:26","nodeType":"YulBlock","src":"14520:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14522:77:26","nodeType":"YulIdentifier","src":"14522:77:26"},"nativeSrc":"14522:79:26","nodeType":"YulFunctionCall","src":"14522:79:26"},"nativeSrc":"14522:79:26","nodeType":"YulExpressionStatement","src":"14522:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14495:7:26","nodeType":"YulIdentifier","src":"14495:7:26"},{"name":"headStart","nativeSrc":"14504:9:26","nodeType":"YulIdentifier","src":"14504:9:26"}],"functionName":{"name":"sub","nativeSrc":"14491:3:26","nodeType":"YulIdentifier","src":"14491:3:26"},"nativeSrc":"14491:23:26","nodeType":"YulFunctionCall","src":"14491:23:26"},{"kind":"number","nativeSrc":"14516:2:26","nodeType":"YulLiteral","src":"14516:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"14487:3:26","nodeType":"YulIdentifier","src":"14487:3:26"},"nativeSrc":"14487:32:26","nodeType":"YulFunctionCall","src":"14487:32:26"},"nativeSrc":"14484:119:26","nodeType":"YulIf","src":"14484:119:26"},{"nativeSrc":"14613:117:26","nodeType":"YulBlock","src":"14613:117:26","statements":[{"nativeSrc":"14628:15:26","nodeType":"YulVariableDeclaration","src":"14628:15:26","value":{"kind":"number","nativeSrc":"14642:1:26","nodeType":"YulLiteral","src":"14642:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14632:6:26","nodeType":"YulTypedName","src":"14632:6:26","type":""}]},{"nativeSrc":"14657:63:26","nodeType":"YulAssignment","src":"14657:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14692:9:26","nodeType":"YulIdentifier","src":"14692:9:26"},{"name":"offset","nativeSrc":"14703:6:26","nodeType":"YulIdentifier","src":"14703:6:26"}],"functionName":{"name":"add","nativeSrc":"14688:3:26","nodeType":"YulIdentifier","src":"14688:3:26"},"nativeSrc":"14688:22:26","nodeType":"YulFunctionCall","src":"14688:22:26"},{"name":"dataEnd","nativeSrc":"14712:7:26","nodeType":"YulIdentifier","src":"14712:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14667:20:26","nodeType":"YulIdentifier","src":"14667:20:26"},"nativeSrc":"14667:53:26","nodeType":"YulFunctionCall","src":"14667:53:26"},"variableNames":[{"name":"value0","nativeSrc":"14657:6:26","nodeType":"YulIdentifier","src":"14657:6:26"}]}]},{"nativeSrc":"14740:118:26","nodeType":"YulBlock","src":"14740:118:26","statements":[{"nativeSrc":"14755:16:26","nodeType":"YulVariableDeclaration","src":"14755:16:26","value":{"kind":"number","nativeSrc":"14769:2:26","nodeType":"YulLiteral","src":"14769:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14759:6:26","nodeType":"YulTypedName","src":"14759:6:26","type":""}]},{"nativeSrc":"14785:63:26","nodeType":"YulAssignment","src":"14785:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14820:9:26","nodeType":"YulIdentifier","src":"14820:9:26"},{"name":"offset","nativeSrc":"14831:6:26","nodeType":"YulIdentifier","src":"14831:6:26"}],"functionName":{"name":"add","nativeSrc":"14816:3:26","nodeType":"YulIdentifier","src":"14816:3:26"},"nativeSrc":"14816:22:26","nodeType":"YulFunctionCall","src":"14816:22:26"},{"name":"dataEnd","nativeSrc":"14840:7:26","nodeType":"YulIdentifier","src":"14840:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14795:20:26","nodeType":"YulIdentifier","src":"14795:20:26"},"nativeSrc":"14795:53:26","nodeType":"YulFunctionCall","src":"14795:53:26"},"variableNames":[{"name":"value1","nativeSrc":"14785:6:26","nodeType":"YulIdentifier","src":"14785:6:26"}]}]},{"nativeSrc":"14868:288:26","nodeType":"YulBlock","src":"14868:288:26","statements":[{"nativeSrc":"14883:46:26","nodeType":"YulVariableDeclaration","src":"14883:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14914:9:26","nodeType":"YulIdentifier","src":"14914:9:26"},{"kind":"number","nativeSrc":"14925:2:26","nodeType":"YulLiteral","src":"14925:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14910:3:26","nodeType":"YulIdentifier","src":"14910:3:26"},"nativeSrc":"14910:18:26","nodeType":"YulFunctionCall","src":"14910:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"14897:12:26","nodeType":"YulIdentifier","src":"14897:12:26"},"nativeSrc":"14897:32:26","nodeType":"YulFunctionCall","src":"14897:32:26"},"variables":[{"name":"offset","nativeSrc":"14887:6:26","nodeType":"YulTypedName","src":"14887:6:26","type":""}]},{"body":{"nativeSrc":"14976:83:26","nodeType":"YulBlock","src":"14976:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14978:77:26","nodeType":"YulIdentifier","src":"14978:77:26"},"nativeSrc":"14978:79:26","nodeType":"YulFunctionCall","src":"14978:79:26"},"nativeSrc":"14978:79:26","nodeType":"YulExpressionStatement","src":"14978:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14948:6:26","nodeType":"YulIdentifier","src":"14948:6:26"},{"kind":"number","nativeSrc":"14956:18:26","nodeType":"YulLiteral","src":"14956:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14945:2:26","nodeType":"YulIdentifier","src":"14945:2:26"},"nativeSrc":"14945:30:26","nodeType":"YulFunctionCall","src":"14945:30:26"},"nativeSrc":"14942:117:26","nodeType":"YulIf","src":"14942:117:26"},{"nativeSrc":"15073:73:26","nodeType":"YulAssignment","src":"15073:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15118:9:26","nodeType":"YulIdentifier","src":"15118:9:26"},{"name":"offset","nativeSrc":"15129:6:26","nodeType":"YulIdentifier","src":"15129:6:26"}],"functionName":{"name":"add","nativeSrc":"15114:3:26","nodeType":"YulIdentifier","src":"15114:3:26"},"nativeSrc":"15114:22:26","nodeType":"YulFunctionCall","src":"15114:22:26"},{"name":"dataEnd","nativeSrc":"15138:7:26","nodeType":"YulIdentifier","src":"15138:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"15083:30:26","nodeType":"YulIdentifier","src":"15083:30:26"},"nativeSrc":"15083:63:26","nodeType":"YulFunctionCall","src":"15083:63:26"},"variableNames":[{"name":"value2","nativeSrc":"15073:6:26","nodeType":"YulIdentifier","src":"15073:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptr","nativeSrc":"14364:799:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14428:9:26","nodeType":"YulTypedName","src":"14428:9:26","type":""},{"name":"dataEnd","nativeSrc":"14439:7:26","nodeType":"YulTypedName","src":"14439:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14451:6:26","nodeType":"YulTypedName","src":"14451:6:26","type":""},{"name":"value1","nativeSrc":"14459:6:26","nodeType":"YulTypedName","src":"14459:6:26","type":""},{"name":"value2","nativeSrc":"14467:6:26","nodeType":"YulTypedName","src":"14467:6:26","type":""}],"src":"14364:799:26"},{"body":{"nativeSrc":"15262:561:26","nodeType":"YulBlock","src":"15262:561:26","statements":[{"body":{"nativeSrc":"15308:83:26","nodeType":"YulBlock","src":"15308:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15310:77:26","nodeType":"YulIdentifier","src":"15310:77:26"},"nativeSrc":"15310:79:26","nodeType":"YulFunctionCall","src":"15310:79:26"},"nativeSrc":"15310:79:26","nodeType":"YulExpressionStatement","src":"15310:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15283:7:26","nodeType":"YulIdentifier","src":"15283:7:26"},{"name":"headStart","nativeSrc":"15292:9:26","nodeType":"YulIdentifier","src":"15292:9:26"}],"functionName":{"name":"sub","nativeSrc":"15279:3:26","nodeType":"YulIdentifier","src":"15279:3:26"},"nativeSrc":"15279:23:26","nodeType":"YulFunctionCall","src":"15279:23:26"},{"kind":"number","nativeSrc":"15304:2:26","nodeType":"YulLiteral","src":"15304:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15275:3:26","nodeType":"YulIdentifier","src":"15275:3:26"},"nativeSrc":"15275:32:26","nodeType":"YulFunctionCall","src":"15275:32:26"},"nativeSrc":"15272:119:26","nodeType":"YulIf","src":"15272:119:26"},{"nativeSrc":"15401:117:26","nodeType":"YulBlock","src":"15401:117:26","statements":[{"nativeSrc":"15416:15:26","nodeType":"YulVariableDeclaration","src":"15416:15:26","value":{"kind":"number","nativeSrc":"15430:1:26","nodeType":"YulLiteral","src":"15430:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15420:6:26","nodeType":"YulTypedName","src":"15420:6:26","type":""}]},{"nativeSrc":"15445:63:26","nodeType":"YulAssignment","src":"15445:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15480:9:26","nodeType":"YulIdentifier","src":"15480:9:26"},{"name":"offset","nativeSrc":"15491:6:26","nodeType":"YulIdentifier","src":"15491:6:26"}],"functionName":{"name":"add","nativeSrc":"15476:3:26","nodeType":"YulIdentifier","src":"15476:3:26"},"nativeSrc":"15476:22:26","nodeType":"YulFunctionCall","src":"15476:22:26"},{"name":"dataEnd","nativeSrc":"15500:7:26","nodeType":"YulIdentifier","src":"15500:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15455:20:26","nodeType":"YulIdentifier","src":"15455:20:26"},"nativeSrc":"15455:53:26","nodeType":"YulFunctionCall","src":"15455:53:26"},"variableNames":[{"name":"value0","nativeSrc":"15445:6:26","nodeType":"YulIdentifier","src":"15445:6:26"}]}]},{"nativeSrc":"15528:288:26","nodeType":"YulBlock","src":"15528:288:26","statements":[{"nativeSrc":"15543:46:26","nodeType":"YulVariableDeclaration","src":"15543:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15574:9:26","nodeType":"YulIdentifier","src":"15574:9:26"},{"kind":"number","nativeSrc":"15585:2:26","nodeType":"YulLiteral","src":"15585:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15570:3:26","nodeType":"YulIdentifier","src":"15570:3:26"},"nativeSrc":"15570:18:26","nodeType":"YulFunctionCall","src":"15570:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"15557:12:26","nodeType":"YulIdentifier","src":"15557:12:26"},"nativeSrc":"15557:32:26","nodeType":"YulFunctionCall","src":"15557:32:26"},"variables":[{"name":"offset","nativeSrc":"15547:6:26","nodeType":"YulTypedName","src":"15547:6:26","type":""}]},{"body":{"nativeSrc":"15636:83:26","nodeType":"YulBlock","src":"15636:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15638:77:26","nodeType":"YulIdentifier","src":"15638:77:26"},"nativeSrc":"15638:79:26","nodeType":"YulFunctionCall","src":"15638:79:26"},"nativeSrc":"15638:79:26","nodeType":"YulExpressionStatement","src":"15638:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15608:6:26","nodeType":"YulIdentifier","src":"15608:6:26"},{"kind":"number","nativeSrc":"15616:18:26","nodeType":"YulLiteral","src":"15616:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15605:2:26","nodeType":"YulIdentifier","src":"15605:2:26"},"nativeSrc":"15605:30:26","nodeType":"YulFunctionCall","src":"15605:30:26"},"nativeSrc":"15602:117:26","nodeType":"YulIf","src":"15602:117:26"},{"nativeSrc":"15733:73:26","nodeType":"YulAssignment","src":"15733:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15778:9:26","nodeType":"YulIdentifier","src":"15778:9:26"},{"name":"offset","nativeSrc":"15789:6:26","nodeType":"YulIdentifier","src":"15789:6:26"}],"functionName":{"name":"add","nativeSrc":"15774:3:26","nodeType":"YulIdentifier","src":"15774:3:26"},"nativeSrc":"15774:22:26","nodeType":"YulFunctionCall","src":"15774:22:26"},{"name":"dataEnd","nativeSrc":"15798:7:26","nodeType":"YulIdentifier","src":"15798:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"15743:30:26","nodeType":"YulIdentifier","src":"15743:30:26"},"nativeSrc":"15743:63:26","nodeType":"YulFunctionCall","src":"15743:63:26"},"variableNames":[{"name":"value1","nativeSrc":"15733:6:26","nodeType":"YulIdentifier","src":"15733:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nativeSrc":"15169:654:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15224:9:26","nodeType":"YulTypedName","src":"15224:9:26","type":""},{"name":"dataEnd","nativeSrc":"15235:7:26","nodeType":"YulTypedName","src":"15235:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15247:6:26","nodeType":"YulTypedName","src":"15247:6:26","type":""},{"name":"value1","nativeSrc":"15255:6:26","nodeType":"YulTypedName","src":"15255:6:26","type":""}],"src":"15169:654:26"},{"body":{"nativeSrc":"15869:76:26","nodeType":"YulBlock","src":"15869:76:26","statements":[{"body":{"nativeSrc":"15923:16:26","nodeType":"YulBlock","src":"15923:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15932:1:26","nodeType":"YulLiteral","src":"15932:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15935:1:26","nodeType":"YulLiteral","src":"15935:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15925:6:26","nodeType":"YulIdentifier","src":"15925:6:26"},"nativeSrc":"15925:12:26","nodeType":"YulFunctionCall","src":"15925:12:26"},"nativeSrc":"15925:12:26","nodeType":"YulExpressionStatement","src":"15925:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15892:5:26","nodeType":"YulIdentifier","src":"15892:5:26"},{"arguments":[{"name":"value","nativeSrc":"15914:5:26","nodeType":"YulIdentifier","src":"15914:5:26"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"15899:14:26","nodeType":"YulIdentifier","src":"15899:14:26"},"nativeSrc":"15899:21:26","nodeType":"YulFunctionCall","src":"15899:21:26"}],"functionName":{"name":"eq","nativeSrc":"15889:2:26","nodeType":"YulIdentifier","src":"15889:2:26"},"nativeSrc":"15889:32:26","nodeType":"YulFunctionCall","src":"15889:32:26"}],"functionName":{"name":"iszero","nativeSrc":"15882:6:26","nodeType":"YulIdentifier","src":"15882:6:26"},"nativeSrc":"15882:40:26","nodeType":"YulFunctionCall","src":"15882:40:26"},"nativeSrc":"15879:60:26","nodeType":"YulIf","src":"15879:60:26"}]},"name":"validator_revert_t_bool","nativeSrc":"15829:116:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15862:5:26","nodeType":"YulTypedName","src":"15862:5:26","type":""}],"src":"15829:116:26"},{"body":{"nativeSrc":"16000:84:26","nodeType":"YulBlock","src":"16000:84:26","statements":[{"nativeSrc":"16010:29:26","nodeType":"YulAssignment","src":"16010:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"16032:6:26","nodeType":"YulIdentifier","src":"16032:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"16019:12:26","nodeType":"YulIdentifier","src":"16019:12:26"},"nativeSrc":"16019:20:26","nodeType":"YulFunctionCall","src":"16019:20:26"},"variableNames":[{"name":"value","nativeSrc":"16010:5:26","nodeType":"YulIdentifier","src":"16010:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16072:5:26","nodeType":"YulIdentifier","src":"16072:5:26"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"16048:23:26","nodeType":"YulIdentifier","src":"16048:23:26"},"nativeSrc":"16048:30:26","nodeType":"YulFunctionCall","src":"16048:30:26"},"nativeSrc":"16048:30:26","nodeType":"YulExpressionStatement","src":"16048:30:26"}]},"name":"abi_decode_t_bool","nativeSrc":"15951:133:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15978:6:26","nodeType":"YulTypedName","src":"15978:6:26","type":""},{"name":"end","nativeSrc":"15986:3:26","nodeType":"YulTypedName","src":"15986:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15994:5:26","nodeType":"YulTypedName","src":"15994:5:26","type":""}],"src":"15951:133:26"},{"body":{"nativeSrc":"16170:388:26","nodeType":"YulBlock","src":"16170:388:26","statements":[{"body":{"nativeSrc":"16216:83:26","nodeType":"YulBlock","src":"16216:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16218:77:26","nodeType":"YulIdentifier","src":"16218:77:26"},"nativeSrc":"16218:79:26","nodeType":"YulFunctionCall","src":"16218:79:26"},"nativeSrc":"16218:79:26","nodeType":"YulExpressionStatement","src":"16218:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16191:7:26","nodeType":"YulIdentifier","src":"16191:7:26"},{"name":"headStart","nativeSrc":"16200:9:26","nodeType":"YulIdentifier","src":"16200:9:26"}],"functionName":{"name":"sub","nativeSrc":"16187:3:26","nodeType":"YulIdentifier","src":"16187:3:26"},"nativeSrc":"16187:23:26","nodeType":"YulFunctionCall","src":"16187:23:26"},{"kind":"number","nativeSrc":"16212:2:26","nodeType":"YulLiteral","src":"16212:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"16183:3:26","nodeType":"YulIdentifier","src":"16183:3:26"},"nativeSrc":"16183:32:26","nodeType":"YulFunctionCall","src":"16183:32:26"},"nativeSrc":"16180:119:26","nodeType":"YulIf","src":"16180:119:26"},{"nativeSrc":"16309:117:26","nodeType":"YulBlock","src":"16309:117:26","statements":[{"nativeSrc":"16324:15:26","nodeType":"YulVariableDeclaration","src":"16324:15:26","value":{"kind":"number","nativeSrc":"16338:1:26","nodeType":"YulLiteral","src":"16338:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16328:6:26","nodeType":"YulTypedName","src":"16328:6:26","type":""}]},{"nativeSrc":"16353:63:26","nodeType":"YulAssignment","src":"16353:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16388:9:26","nodeType":"YulIdentifier","src":"16388:9:26"},{"name":"offset","nativeSrc":"16399:6:26","nodeType":"YulIdentifier","src":"16399:6:26"}],"functionName":{"name":"add","nativeSrc":"16384:3:26","nodeType":"YulIdentifier","src":"16384:3:26"},"nativeSrc":"16384:22:26","nodeType":"YulFunctionCall","src":"16384:22:26"},{"name":"dataEnd","nativeSrc":"16408:7:26","nodeType":"YulIdentifier","src":"16408:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16363:20:26","nodeType":"YulIdentifier","src":"16363:20:26"},"nativeSrc":"16363:53:26","nodeType":"YulFunctionCall","src":"16363:53:26"},"variableNames":[{"name":"value0","nativeSrc":"16353:6:26","nodeType":"YulIdentifier","src":"16353:6:26"}]}]},{"nativeSrc":"16436:115:26","nodeType":"YulBlock","src":"16436:115:26","statements":[{"nativeSrc":"16451:16:26","nodeType":"YulVariableDeclaration","src":"16451:16:26","value":{"kind":"number","nativeSrc":"16465:2:26","nodeType":"YulLiteral","src":"16465:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16455:6:26","nodeType":"YulTypedName","src":"16455:6:26","type":""}]},{"nativeSrc":"16481:60:26","nodeType":"YulAssignment","src":"16481:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16513:9:26","nodeType":"YulIdentifier","src":"16513:9:26"},{"name":"offset","nativeSrc":"16524:6:26","nodeType":"YulIdentifier","src":"16524:6:26"}],"functionName":{"name":"add","nativeSrc":"16509:3:26","nodeType":"YulIdentifier","src":"16509:3:26"},"nativeSrc":"16509:22:26","nodeType":"YulFunctionCall","src":"16509:22:26"},{"name":"dataEnd","nativeSrc":"16533:7:26","nodeType":"YulIdentifier","src":"16533:7:26"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"16491:17:26","nodeType":"YulIdentifier","src":"16491:17:26"},"nativeSrc":"16491:50:26","nodeType":"YulFunctionCall","src":"16491:50:26"},"variableNames":[{"name":"value1","nativeSrc":"16481:6:26","nodeType":"YulIdentifier","src":"16481:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"16090:468:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16132:9:26","nodeType":"YulTypedName","src":"16132:9:26","type":""},{"name":"dataEnd","nativeSrc":"16143:7:26","nodeType":"YulTypedName","src":"16143:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16155:6:26","nodeType":"YulTypedName","src":"16155:6:26","type":""},{"name":"value1","nativeSrc":"16163:6:26","nodeType":"YulTypedName","src":"16163:6:26","type":""}],"src":"16090:468:26"},{"body":{"nativeSrc":"16630:241:26","nodeType":"YulBlock","src":"16630:241:26","statements":[{"body":{"nativeSrc":"16735:22:26","nodeType":"YulBlock","src":"16735:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"16737:16:26","nodeType":"YulIdentifier","src":"16737:16:26"},"nativeSrc":"16737:18:26","nodeType":"YulFunctionCall","src":"16737:18:26"},"nativeSrc":"16737:18:26","nodeType":"YulExpressionStatement","src":"16737:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"16707:6:26","nodeType":"YulIdentifier","src":"16707:6:26"},{"kind":"number","nativeSrc":"16715:18:26","nodeType":"YulLiteral","src":"16715:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16704:2:26","nodeType":"YulIdentifier","src":"16704:2:26"},"nativeSrc":"16704:30:26","nodeType":"YulFunctionCall","src":"16704:30:26"},"nativeSrc":"16701:56:26","nodeType":"YulIf","src":"16701:56:26"},{"nativeSrc":"16767:37:26","nodeType":"YulAssignment","src":"16767:37:26","value":{"arguments":[{"name":"length","nativeSrc":"16797:6:26","nodeType":"YulIdentifier","src":"16797:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16775:21:26","nodeType":"YulIdentifier","src":"16775:21:26"},"nativeSrc":"16775:29:26","nodeType":"YulFunctionCall","src":"16775:29:26"},"variableNames":[{"name":"size","nativeSrc":"16767:4:26","nodeType":"YulIdentifier","src":"16767:4:26"}]},{"nativeSrc":"16841:23:26","nodeType":"YulAssignment","src":"16841:23:26","value":{"arguments":[{"name":"size","nativeSrc":"16853:4:26","nodeType":"YulIdentifier","src":"16853:4:26"},{"kind":"number","nativeSrc":"16859:4:26","nodeType":"YulLiteral","src":"16859:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16849:3:26","nodeType":"YulIdentifier","src":"16849:3:26"},"nativeSrc":"16849:15:26","nodeType":"YulFunctionCall","src":"16849:15:26"},"variableNames":[{"name":"size","nativeSrc":"16841:4:26","nodeType":"YulIdentifier","src":"16841:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"16564:307:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"16614:6:26","nodeType":"YulTypedName","src":"16614:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"16625:4:26","nodeType":"YulTypedName","src":"16625:4:26","type":""}],"src":"16564:307:26"},{"body":{"nativeSrc":"16960:340:26","nodeType":"YulBlock","src":"16960:340:26","statements":[{"nativeSrc":"16970:74:26","nodeType":"YulAssignment","src":"16970:74:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"17036:6:26","nodeType":"YulIdentifier","src":"17036:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"16995:40:26","nodeType":"YulIdentifier","src":"16995:40:26"},"nativeSrc":"16995:48:26","nodeType":"YulFunctionCall","src":"16995:48:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"16979:15:26","nodeType":"YulIdentifier","src":"16979:15:26"},"nativeSrc":"16979:65:26","nodeType":"YulFunctionCall","src":"16979:65:26"},"variableNames":[{"name":"array","nativeSrc":"16970:5:26","nodeType":"YulIdentifier","src":"16970:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"17060:5:26","nodeType":"YulIdentifier","src":"17060:5:26"},{"name":"length","nativeSrc":"17067:6:26","nodeType":"YulIdentifier","src":"17067:6:26"}],"functionName":{"name":"mstore","nativeSrc":"17053:6:26","nodeType":"YulIdentifier","src":"17053:6:26"},"nativeSrc":"17053:21:26","nodeType":"YulFunctionCall","src":"17053:21:26"},"nativeSrc":"17053:21:26","nodeType":"YulExpressionStatement","src":"17053:21:26"},{"nativeSrc":"17083:27:26","nodeType":"YulVariableDeclaration","src":"17083:27:26","value":{"arguments":[{"name":"array","nativeSrc":"17098:5:26","nodeType":"YulIdentifier","src":"17098:5:26"},{"kind":"number","nativeSrc":"17105:4:26","nodeType":"YulLiteral","src":"17105:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17094:3:26","nodeType":"YulIdentifier","src":"17094:3:26"},"nativeSrc":"17094:16:26","nodeType":"YulFunctionCall","src":"17094:16:26"},"variables":[{"name":"dst","nativeSrc":"17087:3:26","nodeType":"YulTypedName","src":"17087:3:26","type":""}]},{"body":{"nativeSrc":"17148:83:26","nodeType":"YulBlock","src":"17148:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"17150:77:26","nodeType":"YulIdentifier","src":"17150:77:26"},"nativeSrc":"17150:79:26","nodeType":"YulFunctionCall","src":"17150:79:26"},"nativeSrc":"17150:79:26","nodeType":"YulExpressionStatement","src":"17150:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17129:3:26","nodeType":"YulIdentifier","src":"17129:3:26"},{"name":"length","nativeSrc":"17134:6:26","nodeType":"YulIdentifier","src":"17134:6:26"}],"functionName":{"name":"add","nativeSrc":"17125:3:26","nodeType":"YulIdentifier","src":"17125:3:26"},"nativeSrc":"17125:16:26","nodeType":"YulFunctionCall","src":"17125:16:26"},{"name":"end","nativeSrc":"17143:3:26","nodeType":"YulIdentifier","src":"17143:3:26"}],"functionName":{"name":"gt","nativeSrc":"17122:2:26","nodeType":"YulIdentifier","src":"17122:2:26"},"nativeSrc":"17122:25:26","nodeType":"YulFunctionCall","src":"17122:25:26"},"nativeSrc":"17119:112:26","nodeType":"YulIf","src":"17119:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"17277:3:26","nodeType":"YulIdentifier","src":"17277:3:26"},{"name":"dst","nativeSrc":"17282:3:26","nodeType":"YulIdentifier","src":"17282:3:26"},{"name":"length","nativeSrc":"17287:6:26","nodeType":"YulIdentifier","src":"17287:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"17240:36:26","nodeType":"YulIdentifier","src":"17240:36:26"},"nativeSrc":"17240:54:26","nodeType":"YulFunctionCall","src":"17240:54:26"},"nativeSrc":"17240:54:26","nodeType":"YulExpressionStatement","src":"17240:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"16877:423:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"16933:3:26","nodeType":"YulTypedName","src":"16933:3:26","type":""},{"name":"length","nativeSrc":"16938:6:26","nodeType":"YulTypedName","src":"16938:6:26","type":""},{"name":"end","nativeSrc":"16946:3:26","nodeType":"YulTypedName","src":"16946:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"16954:5:26","nodeType":"YulTypedName","src":"16954:5:26","type":""}],"src":"16877:423:26"},{"body":{"nativeSrc":"17380:277:26","nodeType":"YulBlock","src":"17380:277:26","statements":[{"body":{"nativeSrc":"17429:83:26","nodeType":"YulBlock","src":"17429:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"17431:77:26","nodeType":"YulIdentifier","src":"17431:77:26"},"nativeSrc":"17431:79:26","nodeType":"YulFunctionCall","src":"17431:79:26"},"nativeSrc":"17431:79:26","nodeType":"YulExpressionStatement","src":"17431:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17408:6:26","nodeType":"YulIdentifier","src":"17408:6:26"},{"kind":"number","nativeSrc":"17416:4:26","nodeType":"YulLiteral","src":"17416:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"17404:3:26","nodeType":"YulIdentifier","src":"17404:3:26"},"nativeSrc":"17404:17:26","nodeType":"YulFunctionCall","src":"17404:17:26"},{"name":"end","nativeSrc":"17423:3:26","nodeType":"YulIdentifier","src":"17423:3:26"}],"functionName":{"name":"slt","nativeSrc":"17400:3:26","nodeType":"YulIdentifier","src":"17400:3:26"},"nativeSrc":"17400:27:26","nodeType":"YulFunctionCall","src":"17400:27:26"}],"functionName":{"name":"iszero","nativeSrc":"17393:6:26","nodeType":"YulIdentifier","src":"17393:6:26"},"nativeSrc":"17393:35:26","nodeType":"YulFunctionCall","src":"17393:35:26"},"nativeSrc":"17390:122:26","nodeType":"YulIf","src":"17390:122:26"},{"nativeSrc":"17521:34:26","nodeType":"YulVariableDeclaration","src":"17521:34:26","value":{"arguments":[{"name":"offset","nativeSrc":"17548:6:26","nodeType":"YulIdentifier","src":"17548:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"17535:12:26","nodeType":"YulIdentifier","src":"17535:12:26"},"nativeSrc":"17535:20:26","nodeType":"YulFunctionCall","src":"17535:20:26"},"variables":[{"name":"length","nativeSrc":"17525:6:26","nodeType":"YulTypedName","src":"17525:6:26","type":""}]},{"nativeSrc":"17564:87:26","nodeType":"YulAssignment","src":"17564:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17624:6:26","nodeType":"YulIdentifier","src":"17624:6:26"},{"kind":"number","nativeSrc":"17632:4:26","nodeType":"YulLiteral","src":"17632:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17620:3:26","nodeType":"YulIdentifier","src":"17620:3:26"},"nativeSrc":"17620:17:26","nodeType":"YulFunctionCall","src":"17620:17:26"},{"name":"length","nativeSrc":"17639:6:26","nodeType":"YulIdentifier","src":"17639:6:26"},{"name":"end","nativeSrc":"17647:3:26","nodeType":"YulIdentifier","src":"17647:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"17573:46:26","nodeType":"YulIdentifier","src":"17573:46:26"},"nativeSrc":"17573:78:26","nodeType":"YulFunctionCall","src":"17573:78:26"},"variableNames":[{"name":"array","nativeSrc":"17564:5:26","nodeType":"YulIdentifier","src":"17564:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"17319:338:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17358:6:26","nodeType":"YulTypedName","src":"17358:6:26","type":""},{"name":"end","nativeSrc":"17366:3:26","nodeType":"YulTypedName","src":"17366:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"17374:5:26","nodeType":"YulTypedName","src":"17374:5:26","type":""}],"src":"17319:338:26"},{"body":{"nativeSrc":"17789:817:26","nodeType":"YulBlock","src":"17789:817:26","statements":[{"body":{"nativeSrc":"17836:83:26","nodeType":"YulBlock","src":"17836:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17838:77:26","nodeType":"YulIdentifier","src":"17838:77:26"},"nativeSrc":"17838:79:26","nodeType":"YulFunctionCall","src":"17838:79:26"},"nativeSrc":"17838:79:26","nodeType":"YulExpressionStatement","src":"17838:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17810:7:26","nodeType":"YulIdentifier","src":"17810:7:26"},{"name":"headStart","nativeSrc":"17819:9:26","nodeType":"YulIdentifier","src":"17819:9:26"}],"functionName":{"name":"sub","nativeSrc":"17806:3:26","nodeType":"YulIdentifier","src":"17806:3:26"},"nativeSrc":"17806:23:26","nodeType":"YulFunctionCall","src":"17806:23:26"},{"kind":"number","nativeSrc":"17831:3:26","nodeType":"YulLiteral","src":"17831:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"17802:3:26","nodeType":"YulIdentifier","src":"17802:3:26"},"nativeSrc":"17802:33:26","nodeType":"YulFunctionCall","src":"17802:33:26"},"nativeSrc":"17799:120:26","nodeType":"YulIf","src":"17799:120:26"},{"nativeSrc":"17929:117:26","nodeType":"YulBlock","src":"17929:117:26","statements":[{"nativeSrc":"17944:15:26","nodeType":"YulVariableDeclaration","src":"17944:15:26","value":{"kind":"number","nativeSrc":"17958:1:26","nodeType":"YulLiteral","src":"17958:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17948:6:26","nodeType":"YulTypedName","src":"17948:6:26","type":""}]},{"nativeSrc":"17973:63:26","nodeType":"YulAssignment","src":"17973:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18008:9:26","nodeType":"YulIdentifier","src":"18008:9:26"},{"name":"offset","nativeSrc":"18019:6:26","nodeType":"YulIdentifier","src":"18019:6:26"}],"functionName":{"name":"add","nativeSrc":"18004:3:26","nodeType":"YulIdentifier","src":"18004:3:26"},"nativeSrc":"18004:22:26","nodeType":"YulFunctionCall","src":"18004:22:26"},{"name":"dataEnd","nativeSrc":"18028:7:26","nodeType":"YulIdentifier","src":"18028:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17983:20:26","nodeType":"YulIdentifier","src":"17983:20:26"},"nativeSrc":"17983:53:26","nodeType":"YulFunctionCall","src":"17983:53:26"},"variableNames":[{"name":"value0","nativeSrc":"17973:6:26","nodeType":"YulIdentifier","src":"17973:6:26"}]}]},{"nativeSrc":"18056:118:26","nodeType":"YulBlock","src":"18056:118:26","statements":[{"nativeSrc":"18071:16:26","nodeType":"YulVariableDeclaration","src":"18071:16:26","value":{"kind":"number","nativeSrc":"18085:2:26","nodeType":"YulLiteral","src":"18085:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"18075:6:26","nodeType":"YulTypedName","src":"18075:6:26","type":""}]},{"nativeSrc":"18101:63:26","nodeType":"YulAssignment","src":"18101:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18136:9:26","nodeType":"YulIdentifier","src":"18136:9:26"},{"name":"offset","nativeSrc":"18147:6:26","nodeType":"YulIdentifier","src":"18147:6:26"}],"functionName":{"name":"add","nativeSrc":"18132:3:26","nodeType":"YulIdentifier","src":"18132:3:26"},"nativeSrc":"18132:22:26","nodeType":"YulFunctionCall","src":"18132:22:26"},{"name":"dataEnd","nativeSrc":"18156:7:26","nodeType":"YulIdentifier","src":"18156:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"18111:20:26","nodeType":"YulIdentifier","src":"18111:20:26"},"nativeSrc":"18111:53:26","nodeType":"YulFunctionCall","src":"18111:53:26"},"variableNames":[{"name":"value1","nativeSrc":"18101:6:26","nodeType":"YulIdentifier","src":"18101:6:26"}]}]},{"nativeSrc":"18184:118:26","nodeType":"YulBlock","src":"18184:118:26","statements":[{"nativeSrc":"18199:16:26","nodeType":"YulVariableDeclaration","src":"18199:16:26","value":{"kind":"number","nativeSrc":"18213:2:26","nodeType":"YulLiteral","src":"18213:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"18203:6:26","nodeType":"YulTypedName","src":"18203:6:26","type":""}]},{"nativeSrc":"18229:63:26","nodeType":"YulAssignment","src":"18229:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18264:9:26","nodeType":"YulIdentifier","src":"18264:9:26"},{"name":"offset","nativeSrc":"18275:6:26","nodeType":"YulIdentifier","src":"18275:6:26"}],"functionName":{"name":"add","nativeSrc":"18260:3:26","nodeType":"YulIdentifier","src":"18260:3:26"},"nativeSrc":"18260:22:26","nodeType":"YulFunctionCall","src":"18260:22:26"},{"name":"dataEnd","nativeSrc":"18284:7:26","nodeType":"YulIdentifier","src":"18284:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18239:20:26","nodeType":"YulIdentifier","src":"18239:20:26"},"nativeSrc":"18239:53:26","nodeType":"YulFunctionCall","src":"18239:53:26"},"variableNames":[{"name":"value2","nativeSrc":"18229:6:26","nodeType":"YulIdentifier","src":"18229:6:26"}]}]},{"nativeSrc":"18312:287:26","nodeType":"YulBlock","src":"18312:287:26","statements":[{"nativeSrc":"18327:46:26","nodeType":"YulVariableDeclaration","src":"18327:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18358:9:26","nodeType":"YulIdentifier","src":"18358:9:26"},{"kind":"number","nativeSrc":"18369:2:26","nodeType":"YulLiteral","src":"18369:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18354:3:26","nodeType":"YulIdentifier","src":"18354:3:26"},"nativeSrc":"18354:18:26","nodeType":"YulFunctionCall","src":"18354:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"18341:12:26","nodeType":"YulIdentifier","src":"18341:12:26"},"nativeSrc":"18341:32:26","nodeType":"YulFunctionCall","src":"18341:32:26"},"variables":[{"name":"offset","nativeSrc":"18331:6:26","nodeType":"YulTypedName","src":"18331:6:26","type":""}]},{"body":{"nativeSrc":"18420:83:26","nodeType":"YulBlock","src":"18420:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"18422:77:26","nodeType":"YulIdentifier","src":"18422:77:26"},"nativeSrc":"18422:79:26","nodeType":"YulFunctionCall","src":"18422:79:26"},"nativeSrc":"18422:79:26","nodeType":"YulExpressionStatement","src":"18422:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"18392:6:26","nodeType":"YulIdentifier","src":"18392:6:26"},{"kind":"number","nativeSrc":"18400:18:26","nodeType":"YulLiteral","src":"18400:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18389:2:26","nodeType":"YulIdentifier","src":"18389:2:26"},"nativeSrc":"18389:30:26","nodeType":"YulFunctionCall","src":"18389:30:26"},"nativeSrc":"18386:117:26","nodeType":"YulIf","src":"18386:117:26"},{"nativeSrc":"18517:72:26","nodeType":"YulAssignment","src":"18517:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18561:9:26","nodeType":"YulIdentifier","src":"18561:9:26"},{"name":"offset","nativeSrc":"18572:6:26","nodeType":"YulIdentifier","src":"18572:6:26"}],"functionName":{"name":"add","nativeSrc":"18557:3:26","nodeType":"YulIdentifier","src":"18557:3:26"},"nativeSrc":"18557:22:26","nodeType":"YulFunctionCall","src":"18557:22:26"},{"name":"dataEnd","nativeSrc":"18581:7:26","nodeType":"YulIdentifier","src":"18581:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"18527:29:26","nodeType":"YulIdentifier","src":"18527:29:26"},"nativeSrc":"18527:62:26","nodeType":"YulFunctionCall","src":"18527:62:26"},"variableNames":[{"name":"value3","nativeSrc":"18517:6:26","nodeType":"YulIdentifier","src":"18517:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"17663:943:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17735:9:26","nodeType":"YulTypedName","src":"17735:9:26","type":""},{"name":"dataEnd","nativeSrc":"17746:7:26","nodeType":"YulTypedName","src":"17746:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17758:6:26","nodeType":"YulTypedName","src":"17758:6:26","type":""},{"name":"value1","nativeSrc":"17766:6:26","nodeType":"YulTypedName","src":"17766:6:26","type":""},{"name":"value2","nativeSrc":"17774:6:26","nodeType":"YulTypedName","src":"17774:6:26","type":""},{"name":"value3","nativeSrc":"17782:6:26","nodeType":"YulTypedName","src":"17782:6:26","type":""}],"src":"17663:943:26"},{"body":{"nativeSrc":"18736:815:26","nodeType":"YulBlock","src":"18736:815:26","statements":[{"body":{"nativeSrc":"18783:83:26","nodeType":"YulBlock","src":"18783:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18785:77:26","nodeType":"YulIdentifier","src":"18785:77:26"},"nativeSrc":"18785:79:26","nodeType":"YulFunctionCall","src":"18785:79:26"},"nativeSrc":"18785:79:26","nodeType":"YulExpressionStatement","src":"18785:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18757:7:26","nodeType":"YulIdentifier","src":"18757:7:26"},{"name":"headStart","nativeSrc":"18766:9:26","nodeType":"YulIdentifier","src":"18766:9:26"}],"functionName":{"name":"sub","nativeSrc":"18753:3:26","nodeType":"YulIdentifier","src":"18753:3:26"},"nativeSrc":"18753:23:26","nodeType":"YulFunctionCall","src":"18753:23:26"},{"kind":"number","nativeSrc":"18778:3:26","nodeType":"YulLiteral","src":"18778:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"18749:3:26","nodeType":"YulIdentifier","src":"18749:3:26"},"nativeSrc":"18749:33:26","nodeType":"YulFunctionCall","src":"18749:33:26"},"nativeSrc":"18746:120:26","nodeType":"YulIf","src":"18746:120:26"},{"nativeSrc":"18876:117:26","nodeType":"YulBlock","src":"18876:117:26","statements":[{"nativeSrc":"18891:15:26","nodeType":"YulVariableDeclaration","src":"18891:15:26","value":{"kind":"number","nativeSrc":"18905:1:26","nodeType":"YulLiteral","src":"18905:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18895:6:26","nodeType":"YulTypedName","src":"18895:6:26","type":""}]},{"nativeSrc":"18920:63:26","nodeType":"YulAssignment","src":"18920:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18955:9:26","nodeType":"YulIdentifier","src":"18955:9:26"},{"name":"offset","nativeSrc":"18966:6:26","nodeType":"YulIdentifier","src":"18966:6:26"}],"functionName":{"name":"add","nativeSrc":"18951:3:26","nodeType":"YulIdentifier","src":"18951:3:26"},"nativeSrc":"18951:22:26","nodeType":"YulFunctionCall","src":"18951:22:26"},{"name":"dataEnd","nativeSrc":"18975:7:26","nodeType":"YulIdentifier","src":"18975:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18930:20:26","nodeType":"YulIdentifier","src":"18930:20:26"},"nativeSrc":"18930:53:26","nodeType":"YulFunctionCall","src":"18930:53:26"},"variableNames":[{"name":"value0","nativeSrc":"18920:6:26","nodeType":"YulIdentifier","src":"18920:6:26"}]}]},{"nativeSrc":"19003:115:26","nodeType":"YulBlock","src":"19003:115:26","statements":[{"nativeSrc":"19018:16:26","nodeType":"YulVariableDeclaration","src":"19018:16:26","value":{"kind":"number","nativeSrc":"19032:2:26","nodeType":"YulLiteral","src":"19032:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"19022:6:26","nodeType":"YulTypedName","src":"19022:6:26","type":""}]},{"nativeSrc":"19048:60:26","nodeType":"YulAssignment","src":"19048:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19080:9:26","nodeType":"YulIdentifier","src":"19080:9:26"},{"name":"offset","nativeSrc":"19091:6:26","nodeType":"YulIdentifier","src":"19091:6:26"}],"functionName":{"name":"add","nativeSrc":"19076:3:26","nodeType":"YulIdentifier","src":"19076:3:26"},"nativeSrc":"19076:22:26","nodeType":"YulFunctionCall","src":"19076:22:26"},{"name":"dataEnd","nativeSrc":"19100:7:26","nodeType":"YulIdentifier","src":"19100:7:26"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"19058:17:26","nodeType":"YulIdentifier","src":"19058:17:26"},"nativeSrc":"19058:50:26","nodeType":"YulFunctionCall","src":"19058:50:26"},"variableNames":[{"name":"value1","nativeSrc":"19048:6:26","nodeType":"YulIdentifier","src":"19048:6:26"}]}]},{"nativeSrc":"19128:288:26","nodeType":"YulBlock","src":"19128:288:26","statements":[{"nativeSrc":"19143:46:26","nodeType":"YulVariableDeclaration","src":"19143:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19174:9:26","nodeType":"YulIdentifier","src":"19174:9:26"},{"kind":"number","nativeSrc":"19185:2:26","nodeType":"YulLiteral","src":"19185:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19170:3:26","nodeType":"YulIdentifier","src":"19170:3:26"},"nativeSrc":"19170:18:26","nodeType":"YulFunctionCall","src":"19170:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"19157:12:26","nodeType":"YulIdentifier","src":"19157:12:26"},"nativeSrc":"19157:32:26","nodeType":"YulFunctionCall","src":"19157:32:26"},"variables":[{"name":"offset","nativeSrc":"19147:6:26","nodeType":"YulTypedName","src":"19147:6:26","type":""}]},{"body":{"nativeSrc":"19236:83:26","nodeType":"YulBlock","src":"19236:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19238:77:26","nodeType":"YulIdentifier","src":"19238:77:26"},"nativeSrc":"19238:79:26","nodeType":"YulFunctionCall","src":"19238:79:26"},"nativeSrc":"19238:79:26","nodeType":"YulExpressionStatement","src":"19238:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19208:6:26","nodeType":"YulIdentifier","src":"19208:6:26"},{"kind":"number","nativeSrc":"19216:18:26","nodeType":"YulLiteral","src":"19216:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19205:2:26","nodeType":"YulIdentifier","src":"19205:2:26"},"nativeSrc":"19205:30:26","nodeType":"YulFunctionCall","src":"19205:30:26"},"nativeSrc":"19202:117:26","nodeType":"YulIf","src":"19202:117:26"},{"nativeSrc":"19333:73:26","nodeType":"YulAssignment","src":"19333:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19378:9:26","nodeType":"YulIdentifier","src":"19378:9:26"},{"name":"offset","nativeSrc":"19389:6:26","nodeType":"YulIdentifier","src":"19389:6:26"}],"functionName":{"name":"add","nativeSrc":"19374:3:26","nodeType":"YulIdentifier","src":"19374:3:26"},"nativeSrc":"19374:22:26","nodeType":"YulFunctionCall","src":"19374:22:26"},{"name":"dataEnd","nativeSrc":"19398:7:26","nodeType":"YulIdentifier","src":"19398:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"19343:30:26","nodeType":"YulIdentifier","src":"19343:30:26"},"nativeSrc":"19343:63:26","nodeType":"YulFunctionCall","src":"19343:63:26"},"variableNames":[{"name":"value2","nativeSrc":"19333:6:26","nodeType":"YulIdentifier","src":"19333:6:26"}]}]},{"nativeSrc":"19426:118:26","nodeType":"YulBlock","src":"19426:118:26","statements":[{"nativeSrc":"19441:16:26","nodeType":"YulVariableDeclaration","src":"19441:16:26","value":{"kind":"number","nativeSrc":"19455:2:26","nodeType":"YulLiteral","src":"19455:2:26","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"19445:6:26","nodeType":"YulTypedName","src":"19445:6:26","type":""}]},{"nativeSrc":"19471:63:26","nodeType":"YulAssignment","src":"19471:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19506:9:26","nodeType":"YulIdentifier","src":"19506:9:26"},{"name":"offset","nativeSrc":"19517:6:26","nodeType":"YulIdentifier","src":"19517:6:26"}],"functionName":{"name":"add","nativeSrc":"19502:3:26","nodeType":"YulIdentifier","src":"19502:3:26"},"nativeSrc":"19502:22:26","nodeType":"YulFunctionCall","src":"19502:22:26"},{"name":"dataEnd","nativeSrc":"19526:7:26","nodeType":"YulIdentifier","src":"19526:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"19481:20:26","nodeType":"YulIdentifier","src":"19481:20:26"},"nativeSrc":"19481:53:26","nodeType":"YulFunctionCall","src":"19481:53:26"},"variableNames":[{"name":"value3","nativeSrc":"19471:6:26","nodeType":"YulIdentifier","src":"19471:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_boolt_string_memory_ptrt_uint256","nativeSrc":"18612:939:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18682:9:26","nodeType":"YulTypedName","src":"18682:9:26","type":""},{"name":"dataEnd","nativeSrc":"18693:7:26","nodeType":"YulTypedName","src":"18693:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18705:6:26","nodeType":"YulTypedName","src":"18705:6:26","type":""},{"name":"value1","nativeSrc":"18713:6:26","nodeType":"YulTypedName","src":"18713:6:26","type":""},{"name":"value2","nativeSrc":"18721:6:26","nodeType":"YulTypedName","src":"18721:6:26","type":""},{"name":"value3","nativeSrc":"18729:6:26","nodeType":"YulTypedName","src":"18729:6:26","type":""}],"src":"18612:939:26"},{"body":{"nativeSrc":"19640:391:26","nodeType":"YulBlock","src":"19640:391:26","statements":[{"body":{"nativeSrc":"19686:83:26","nodeType":"YulBlock","src":"19686:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19688:77:26","nodeType":"YulIdentifier","src":"19688:77:26"},"nativeSrc":"19688:79:26","nodeType":"YulFunctionCall","src":"19688:79:26"},"nativeSrc":"19688:79:26","nodeType":"YulExpressionStatement","src":"19688:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19661:7:26","nodeType":"YulIdentifier","src":"19661:7:26"},{"name":"headStart","nativeSrc":"19670:9:26","nodeType":"YulIdentifier","src":"19670:9:26"}],"functionName":{"name":"sub","nativeSrc":"19657:3:26","nodeType":"YulIdentifier","src":"19657:3:26"},"nativeSrc":"19657:23:26","nodeType":"YulFunctionCall","src":"19657:23:26"},{"kind":"number","nativeSrc":"19682:2:26","nodeType":"YulLiteral","src":"19682:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"19653:3:26","nodeType":"YulIdentifier","src":"19653:3:26"},"nativeSrc":"19653:32:26","nodeType":"YulFunctionCall","src":"19653:32:26"},"nativeSrc":"19650:119:26","nodeType":"YulIf","src":"19650:119:26"},{"nativeSrc":"19779:117:26","nodeType":"YulBlock","src":"19779:117:26","statements":[{"nativeSrc":"19794:15:26","nodeType":"YulVariableDeclaration","src":"19794:15:26","value":{"kind":"number","nativeSrc":"19808:1:26","nodeType":"YulLiteral","src":"19808:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19798:6:26","nodeType":"YulTypedName","src":"19798:6:26","type":""}]},{"nativeSrc":"19823:63:26","nodeType":"YulAssignment","src":"19823:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19858:9:26","nodeType":"YulIdentifier","src":"19858:9:26"},{"name":"offset","nativeSrc":"19869:6:26","nodeType":"YulIdentifier","src":"19869:6:26"}],"functionName":{"name":"add","nativeSrc":"19854:3:26","nodeType":"YulIdentifier","src":"19854:3:26"},"nativeSrc":"19854:22:26","nodeType":"YulFunctionCall","src":"19854:22:26"},{"name":"dataEnd","nativeSrc":"19878:7:26","nodeType":"YulIdentifier","src":"19878:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19833:20:26","nodeType":"YulIdentifier","src":"19833:20:26"},"nativeSrc":"19833:53:26","nodeType":"YulFunctionCall","src":"19833:53:26"},"variableNames":[{"name":"value0","nativeSrc":"19823:6:26","nodeType":"YulIdentifier","src":"19823:6:26"}]}]},{"nativeSrc":"19906:118:26","nodeType":"YulBlock","src":"19906:118:26","statements":[{"nativeSrc":"19921:16:26","nodeType":"YulVariableDeclaration","src":"19921:16:26","value":{"kind":"number","nativeSrc":"19935:2:26","nodeType":"YulLiteral","src":"19935:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"19925:6:26","nodeType":"YulTypedName","src":"19925:6:26","type":""}]},{"nativeSrc":"19951:63:26","nodeType":"YulAssignment","src":"19951:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19986:9:26","nodeType":"YulIdentifier","src":"19986:9:26"},{"name":"offset","nativeSrc":"19997:6:26","nodeType":"YulIdentifier","src":"19997:6:26"}],"functionName":{"name":"add","nativeSrc":"19982:3:26","nodeType":"YulIdentifier","src":"19982:3:26"},"nativeSrc":"19982:22:26","nodeType":"YulFunctionCall","src":"19982:22:26"},{"name":"dataEnd","nativeSrc":"20006:7:26","nodeType":"YulIdentifier","src":"20006:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19961:20:26","nodeType":"YulIdentifier","src":"19961:20:26"},"nativeSrc":"19961:53:26","nodeType":"YulFunctionCall","src":"19961:53:26"},"variableNames":[{"name":"value1","nativeSrc":"19951:6:26","nodeType":"YulIdentifier","src":"19951:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"19557:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19602:9:26","nodeType":"YulTypedName","src":"19602:9:26","type":""},{"name":"dataEnd","nativeSrc":"19613:7:26","nodeType":"YulTypedName","src":"19613:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19625:6:26","nodeType":"YulTypedName","src":"19625:6:26","type":""},{"name":"value1","nativeSrc":"19633:6:26","nodeType":"YulTypedName","src":"19633:6:26","type":""}],"src":"19557:474:26"},{"body":{"nativeSrc":"20065:152:26","nodeType":"YulBlock","src":"20065:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20082:1:26","nodeType":"YulLiteral","src":"20082:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"20085:77:26","nodeType":"YulLiteral","src":"20085:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20075:6:26","nodeType":"YulIdentifier","src":"20075:6:26"},"nativeSrc":"20075:88:26","nodeType":"YulFunctionCall","src":"20075:88:26"},"nativeSrc":"20075:88:26","nodeType":"YulExpressionStatement","src":"20075:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20179:1:26","nodeType":"YulLiteral","src":"20179:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"20182:4:26","nodeType":"YulLiteral","src":"20182:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"20172:6:26","nodeType":"YulIdentifier","src":"20172:6:26"},"nativeSrc":"20172:15:26","nodeType":"YulFunctionCall","src":"20172:15:26"},"nativeSrc":"20172:15:26","nodeType":"YulExpressionStatement","src":"20172:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20203:1:26","nodeType":"YulLiteral","src":"20203:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"20206:4:26","nodeType":"YulLiteral","src":"20206:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20196:6:26","nodeType":"YulIdentifier","src":"20196:6:26"},"nativeSrc":"20196:15:26","nodeType":"YulFunctionCall","src":"20196:15:26"},"nativeSrc":"20196:15:26","nodeType":"YulExpressionStatement","src":"20196:15:26"}]},"name":"panic_error_0x22","nativeSrc":"20037:180:26","nodeType":"YulFunctionDefinition","src":"20037:180:26"},{"body":{"nativeSrc":"20274:269:26","nodeType":"YulBlock","src":"20274:269:26","statements":[{"nativeSrc":"20284:22:26","nodeType":"YulAssignment","src":"20284:22:26","value":{"arguments":[{"name":"data","nativeSrc":"20298:4:26","nodeType":"YulIdentifier","src":"20298:4:26"},{"kind":"number","nativeSrc":"20304:1:26","nodeType":"YulLiteral","src":"20304:1:26","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"20294:3:26","nodeType":"YulIdentifier","src":"20294:3:26"},"nativeSrc":"20294:12:26","nodeType":"YulFunctionCall","src":"20294:12:26"},"variableNames":[{"name":"length","nativeSrc":"20284:6:26","nodeType":"YulIdentifier","src":"20284:6:26"}]},{"nativeSrc":"20315:38:26","nodeType":"YulVariableDeclaration","src":"20315:38:26","value":{"arguments":[{"name":"data","nativeSrc":"20345:4:26","nodeType":"YulIdentifier","src":"20345:4:26"},{"kind":"number","nativeSrc":"20351:1:26","nodeType":"YulLiteral","src":"20351:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"20341:3:26","nodeType":"YulIdentifier","src":"20341:3:26"},"nativeSrc":"20341:12:26","nodeType":"YulFunctionCall","src":"20341:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"20319:18:26","nodeType":"YulTypedName","src":"20319:18:26","type":""}]},{"body":{"nativeSrc":"20392:51:26","nodeType":"YulBlock","src":"20392:51:26","statements":[{"nativeSrc":"20406:27:26","nodeType":"YulAssignment","src":"20406:27:26","value":{"arguments":[{"name":"length","nativeSrc":"20420:6:26","nodeType":"YulIdentifier","src":"20420:6:26"},{"kind":"number","nativeSrc":"20428:4:26","nodeType":"YulLiteral","src":"20428:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"20416:3:26","nodeType":"YulIdentifier","src":"20416:3:26"},"nativeSrc":"20416:17:26","nodeType":"YulFunctionCall","src":"20416:17:26"},"variableNames":[{"name":"length","nativeSrc":"20406:6:26","nodeType":"YulIdentifier","src":"20406:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"20372:18:26","nodeType":"YulIdentifier","src":"20372:18:26"}],"functionName":{"name":"iszero","nativeSrc":"20365:6:26","nodeType":"YulIdentifier","src":"20365:6:26"},"nativeSrc":"20365:26:26","nodeType":"YulFunctionCall","src":"20365:26:26"},"nativeSrc":"20362:81:26","nodeType":"YulIf","src":"20362:81:26"},{"body":{"nativeSrc":"20495:42:26","nodeType":"YulBlock","src":"20495:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"20509:16:26","nodeType":"YulIdentifier","src":"20509:16:26"},"nativeSrc":"20509:18:26","nodeType":"YulFunctionCall","src":"20509:18:26"},"nativeSrc":"20509:18:26","nodeType":"YulExpressionStatement","src":"20509:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"20459:18:26","nodeType":"YulIdentifier","src":"20459:18:26"},{"arguments":[{"name":"length","nativeSrc":"20482:6:26","nodeType":"YulIdentifier","src":"20482:6:26"},{"kind":"number","nativeSrc":"20490:2:26","nodeType":"YulLiteral","src":"20490:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20479:2:26","nodeType":"YulIdentifier","src":"20479:2:26"},"nativeSrc":"20479:14:26","nodeType":"YulFunctionCall","src":"20479:14:26"}],"functionName":{"name":"eq","nativeSrc":"20456:2:26","nodeType":"YulIdentifier","src":"20456:2:26"},"nativeSrc":"20456:38:26","nodeType":"YulFunctionCall","src":"20456:38:26"},"nativeSrc":"20453:84:26","nodeType":"YulIf","src":"20453:84:26"}]},"name":"extract_byte_array_length","nativeSrc":"20223:320:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20258:4:26","nodeType":"YulTypedName","src":"20258:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"20267:6:26","nodeType":"YulTypedName","src":"20267:6:26","type":""}],"src":"20223:320:26"},{"body":{"nativeSrc":"20703:288:26","nodeType":"YulBlock","src":"20703:288:26","statements":[{"nativeSrc":"20713:26:26","nodeType":"YulAssignment","src":"20713:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"20725:9:26","nodeType":"YulIdentifier","src":"20725:9:26"},{"kind":"number","nativeSrc":"20736:2:26","nodeType":"YulLiteral","src":"20736:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20721:3:26","nodeType":"YulIdentifier","src":"20721:3:26"},"nativeSrc":"20721:18:26","nodeType":"YulFunctionCall","src":"20721:18:26"},"variableNames":[{"name":"tail","nativeSrc":"20713:4:26","nodeType":"YulIdentifier","src":"20713:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20793:6:26","nodeType":"YulIdentifier","src":"20793:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20806:9:26","nodeType":"YulIdentifier","src":"20806:9:26"},{"kind":"number","nativeSrc":"20817:1:26","nodeType":"YulLiteral","src":"20817:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20802:3:26","nodeType":"YulIdentifier","src":"20802:3:26"},"nativeSrc":"20802:17:26","nodeType":"YulFunctionCall","src":"20802:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20749:43:26","nodeType":"YulIdentifier","src":"20749:43:26"},"nativeSrc":"20749:71:26","nodeType":"YulFunctionCall","src":"20749:71:26"},"nativeSrc":"20749:71:26","nodeType":"YulExpressionStatement","src":"20749:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20874:6:26","nodeType":"YulIdentifier","src":"20874:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20887:9:26","nodeType":"YulIdentifier","src":"20887:9:26"},{"kind":"number","nativeSrc":"20898:2:26","nodeType":"YulLiteral","src":"20898:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20883:3:26","nodeType":"YulIdentifier","src":"20883:3:26"},"nativeSrc":"20883:18:26","nodeType":"YulFunctionCall","src":"20883:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20830:43:26","nodeType":"YulIdentifier","src":"20830:43:26"},"nativeSrc":"20830:72:26","nodeType":"YulFunctionCall","src":"20830:72:26"},"nativeSrc":"20830:72:26","nodeType":"YulExpressionStatement","src":"20830:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20956:6:26","nodeType":"YulIdentifier","src":"20956:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20969:9:26","nodeType":"YulIdentifier","src":"20969:9:26"},{"kind":"number","nativeSrc":"20980:2:26","nodeType":"YulLiteral","src":"20980:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20965:3:26","nodeType":"YulIdentifier","src":"20965:3:26"},"nativeSrc":"20965:18:26","nodeType":"YulFunctionCall","src":"20965:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20912:43:26","nodeType":"YulIdentifier","src":"20912:43:26"},"nativeSrc":"20912:72:26","nodeType":"YulFunctionCall","src":"20912:72:26"},"nativeSrc":"20912:72:26","nodeType":"YulExpressionStatement","src":"20912:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"20549:442:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20659:9:26","nodeType":"YulTypedName","src":"20659:9:26","type":""},{"name":"value2","nativeSrc":"20671:6:26","nodeType":"YulTypedName","src":"20671:6:26","type":""},{"name":"value1","nativeSrc":"20679:6:26","nodeType":"YulTypedName","src":"20679:6:26","type":""},{"name":"value0","nativeSrc":"20687:6:26","nodeType":"YulTypedName","src":"20687:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20698:4:26","nodeType":"YulTypedName","src":"20698:4:26","type":""}],"src":"20549:442:26"},{"body":{"nativeSrc":"21103:59:26","nodeType":"YulBlock","src":"21103:59:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21125:6:26","nodeType":"YulIdentifier","src":"21125:6:26"},{"kind":"number","nativeSrc":"21133:1:26","nodeType":"YulLiteral","src":"21133:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21121:3:26","nodeType":"YulIdentifier","src":"21121:3:26"},"nativeSrc":"21121:14:26","nodeType":"YulFunctionCall","src":"21121:14:26"},{"hexValue":"4e6f7420746f6b656e206f776e6572","kind":"string","nativeSrc":"21137:17:26","nodeType":"YulLiteral","src":"21137:17:26","type":"","value":"Not token owner"}],"functionName":{"name":"mstore","nativeSrc":"21114:6:26","nodeType":"YulIdentifier","src":"21114:6:26"},"nativeSrc":"21114:41:26","nodeType":"YulFunctionCall","src":"21114:41:26"},"nativeSrc":"21114:41:26","nodeType":"YulExpressionStatement","src":"21114:41:26"}]},"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nativeSrc":"20997:165:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21095:6:26","nodeType":"YulTypedName","src":"21095:6:26","type":""}],"src":"20997:165:26"},{"body":{"nativeSrc":"21314:220:26","nodeType":"YulBlock","src":"21314:220:26","statements":[{"nativeSrc":"21324:74:26","nodeType":"YulAssignment","src":"21324:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"21390:3:26","nodeType":"YulIdentifier","src":"21390:3:26"},{"kind":"number","nativeSrc":"21395:2:26","nodeType":"YulLiteral","src":"21395:2:26","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"21331:58:26","nodeType":"YulIdentifier","src":"21331:58:26"},"nativeSrc":"21331:67:26","nodeType":"YulFunctionCall","src":"21331:67:26"},"variableNames":[{"name":"pos","nativeSrc":"21324:3:26","nodeType":"YulIdentifier","src":"21324:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21496:3:26","nodeType":"YulIdentifier","src":"21496:3:26"}],"functionName":{"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nativeSrc":"21407:88:26","nodeType":"YulIdentifier","src":"21407:88:26"},"nativeSrc":"21407:93:26","nodeType":"YulFunctionCall","src":"21407:93:26"},"nativeSrc":"21407:93:26","nodeType":"YulExpressionStatement","src":"21407:93:26"},{"nativeSrc":"21509:19:26","nodeType":"YulAssignment","src":"21509:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"21520:3:26","nodeType":"YulIdentifier","src":"21520:3:26"},{"kind":"number","nativeSrc":"21525:2:26","nodeType":"YulLiteral","src":"21525:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21516:3:26","nodeType":"YulIdentifier","src":"21516:3:26"},"nativeSrc":"21516:12:26","nodeType":"YulFunctionCall","src":"21516:12:26"},"variableNames":[{"name":"end","nativeSrc":"21509:3:26","nodeType":"YulIdentifier","src":"21509:3:26"}]}]},"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nativeSrc":"21168:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21302:3:26","nodeType":"YulTypedName","src":"21302:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21310:3:26","nodeType":"YulTypedName","src":"21310:3:26","type":""}],"src":"21168:366:26"},{"body":{"nativeSrc":"21711:248:26","nodeType":"YulBlock","src":"21711:248:26","statements":[{"nativeSrc":"21721:26:26","nodeType":"YulAssignment","src":"21721:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"21733:9:26","nodeType":"YulIdentifier","src":"21733:9:26"},{"kind":"number","nativeSrc":"21744:2:26","nodeType":"YulLiteral","src":"21744:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21729:3:26","nodeType":"YulIdentifier","src":"21729:3:26"},"nativeSrc":"21729:18:26","nodeType":"YulFunctionCall","src":"21729:18:26"},"variableNames":[{"name":"tail","nativeSrc":"21721:4:26","nodeType":"YulIdentifier","src":"21721:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21768:9:26","nodeType":"YulIdentifier","src":"21768:9:26"},{"kind":"number","nativeSrc":"21779:1:26","nodeType":"YulLiteral","src":"21779:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21764:3:26","nodeType":"YulIdentifier","src":"21764:3:26"},"nativeSrc":"21764:17:26","nodeType":"YulFunctionCall","src":"21764:17:26"},{"arguments":[{"name":"tail","nativeSrc":"21787:4:26","nodeType":"YulIdentifier","src":"21787:4:26"},{"name":"headStart","nativeSrc":"21793:9:26","nodeType":"YulIdentifier","src":"21793:9:26"}],"functionName":{"name":"sub","nativeSrc":"21783:3:26","nodeType":"YulIdentifier","src":"21783:3:26"},"nativeSrc":"21783:20:26","nodeType":"YulFunctionCall","src":"21783:20:26"}],"functionName":{"name":"mstore","nativeSrc":"21757:6:26","nodeType":"YulIdentifier","src":"21757:6:26"},"nativeSrc":"21757:47:26","nodeType":"YulFunctionCall","src":"21757:47:26"},"nativeSrc":"21757:47:26","nodeType":"YulExpressionStatement","src":"21757:47:26"},{"nativeSrc":"21813:139:26","nodeType":"YulAssignment","src":"21813:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"21947:4:26","nodeType":"YulIdentifier","src":"21947:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nativeSrc":"21821:124:26","nodeType":"YulIdentifier","src":"21821:124:26"},"nativeSrc":"21821:131:26","nodeType":"YulFunctionCall","src":"21821:131:26"},"variableNames":[{"name":"tail","nativeSrc":"21813:4:26","nodeType":"YulIdentifier","src":"21813:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21540:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21691:9:26","nodeType":"YulTypedName","src":"21691:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21706:4:26","nodeType":"YulTypedName","src":"21706:4:26","type":""}],"src":"21540:419:26"},{"body":{"nativeSrc":"22071:66:26","nodeType":"YulBlock","src":"22071:66:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22093:6:26","nodeType":"YulIdentifier","src":"22093:6:26"},{"kind":"number","nativeSrc":"22101:1:26","nodeType":"YulLiteral","src":"22101:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22089:3:26","nodeType":"YulIdentifier","src":"22089:3:26"},"nativeSrc":"22089:14:26","nodeType":"YulFunctionCall","src":"22089:14:26"},{"hexValue":"4f776e65722061646472657373207265717569726564","kind":"string","nativeSrc":"22105:24:26","nodeType":"YulLiteral","src":"22105:24:26","type":"","value":"Owner address required"}],"functionName":{"name":"mstore","nativeSrc":"22082:6:26","nodeType":"YulIdentifier","src":"22082:6:26"},"nativeSrc":"22082:48:26","nodeType":"YulFunctionCall","src":"22082:48:26"},"nativeSrc":"22082:48:26","nodeType":"YulExpressionStatement","src":"22082:48:26"}]},"name":"store_literal_in_memory_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a","nativeSrc":"21965:172:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22063:6:26","nodeType":"YulTypedName","src":"22063:6:26","type":""}],"src":"21965:172:26"},{"body":{"nativeSrc":"22289:220:26","nodeType":"YulBlock","src":"22289:220:26","statements":[{"nativeSrc":"22299:74:26","nodeType":"YulAssignment","src":"22299:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"22365:3:26","nodeType":"YulIdentifier","src":"22365:3:26"},{"kind":"number","nativeSrc":"22370:2:26","nodeType":"YulLiteral","src":"22370:2:26","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22306:58:26","nodeType":"YulIdentifier","src":"22306:58:26"},"nativeSrc":"22306:67:26","nodeType":"YulFunctionCall","src":"22306:67:26"},"variableNames":[{"name":"pos","nativeSrc":"22299:3:26","nodeType":"YulIdentifier","src":"22299:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22471:3:26","nodeType":"YulIdentifier","src":"22471:3:26"}],"functionName":{"name":"store_literal_in_memory_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a","nativeSrc":"22382:88:26","nodeType":"YulIdentifier","src":"22382:88:26"},"nativeSrc":"22382:93:26","nodeType":"YulFunctionCall","src":"22382:93:26"},"nativeSrc":"22382:93:26","nodeType":"YulExpressionStatement","src":"22382:93:26"},{"nativeSrc":"22484:19:26","nodeType":"YulAssignment","src":"22484:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"22495:3:26","nodeType":"YulIdentifier","src":"22495:3:26"},{"kind":"number","nativeSrc":"22500:2:26","nodeType":"YulLiteral","src":"22500:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22491:3:26","nodeType":"YulIdentifier","src":"22491:3:26"},"nativeSrc":"22491:12:26","nodeType":"YulFunctionCall","src":"22491:12:26"},"variableNames":[{"name":"end","nativeSrc":"22484:3:26","nodeType":"YulIdentifier","src":"22484:3:26"}]}]},"name":"abi_encode_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a_to_t_string_memory_ptr_fromStack","nativeSrc":"22143:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22277:3:26","nodeType":"YulTypedName","src":"22277:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22285:3:26","nodeType":"YulTypedName","src":"22285:3:26","type":""}],"src":"22143:366:26"},{"body":{"nativeSrc":"22686:248:26","nodeType":"YulBlock","src":"22686:248:26","statements":[{"nativeSrc":"22696:26:26","nodeType":"YulAssignment","src":"22696:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"22708:9:26","nodeType":"YulIdentifier","src":"22708:9:26"},{"kind":"number","nativeSrc":"22719:2:26","nodeType":"YulLiteral","src":"22719:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22704:3:26","nodeType":"YulIdentifier","src":"22704:3:26"},"nativeSrc":"22704:18:26","nodeType":"YulFunctionCall","src":"22704:18:26"},"variableNames":[{"name":"tail","nativeSrc":"22696:4:26","nodeType":"YulIdentifier","src":"22696:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22743:9:26","nodeType":"YulIdentifier","src":"22743:9:26"},{"kind":"number","nativeSrc":"22754:1:26","nodeType":"YulLiteral","src":"22754:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22739:3:26","nodeType":"YulIdentifier","src":"22739:3:26"},"nativeSrc":"22739:17:26","nodeType":"YulFunctionCall","src":"22739:17:26"},{"arguments":[{"name":"tail","nativeSrc":"22762:4:26","nodeType":"YulIdentifier","src":"22762:4:26"},{"name":"headStart","nativeSrc":"22768:9:26","nodeType":"YulIdentifier","src":"22768:9:26"}],"functionName":{"name":"sub","nativeSrc":"22758:3:26","nodeType":"YulIdentifier","src":"22758:3:26"},"nativeSrc":"22758:20:26","nodeType":"YulFunctionCall","src":"22758:20:26"}],"functionName":{"name":"mstore","nativeSrc":"22732:6:26","nodeType":"YulIdentifier","src":"22732:6:26"},"nativeSrc":"22732:47:26","nodeType":"YulFunctionCall","src":"22732:47:26"},"nativeSrc":"22732:47:26","nodeType":"YulExpressionStatement","src":"22732:47:26"},{"nativeSrc":"22788:139:26","nodeType":"YulAssignment","src":"22788:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"22922:4:26","nodeType":"YulIdentifier","src":"22922:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a_to_t_string_memory_ptr_fromStack","nativeSrc":"22796:124:26","nodeType":"YulIdentifier","src":"22796:124:26"},"nativeSrc":"22796:131:26","nodeType":"YulFunctionCall","src":"22796:131:26"},"variableNames":[{"name":"tail","nativeSrc":"22788:4:26","nodeType":"YulIdentifier","src":"22788:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22515:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22666:9:26","nodeType":"YulTypedName","src":"22666:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22681:4:26","nodeType":"YulTypedName","src":"22681:4:26","type":""}],"src":"22515:419:26"},{"body":{"nativeSrc":"22968:152:26","nodeType":"YulBlock","src":"22968:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22985:1:26","nodeType":"YulLiteral","src":"22985:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"22988:77:26","nodeType":"YulLiteral","src":"22988:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"22978:6:26","nodeType":"YulIdentifier","src":"22978:6:26"},"nativeSrc":"22978:88:26","nodeType":"YulFunctionCall","src":"22978:88:26"},"nativeSrc":"22978:88:26","nodeType":"YulExpressionStatement","src":"22978:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23082:1:26","nodeType":"YulLiteral","src":"23082:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"23085:4:26","nodeType":"YulLiteral","src":"23085:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"23075:6:26","nodeType":"YulIdentifier","src":"23075:6:26"},"nativeSrc":"23075:15:26","nodeType":"YulFunctionCall","src":"23075:15:26"},"nativeSrc":"23075:15:26","nodeType":"YulExpressionStatement","src":"23075:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23106:1:26","nodeType":"YulLiteral","src":"23106:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"23109:4:26","nodeType":"YulLiteral","src":"23109:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23099:6:26","nodeType":"YulIdentifier","src":"23099:6:26"},"nativeSrc":"23099:15:26","nodeType":"YulFunctionCall","src":"23099:15:26"},"nativeSrc":"23099:15:26","nodeType":"YulExpressionStatement","src":"23099:15:26"}]},"name":"panic_error_0x11","nativeSrc":"22940:180:26","nodeType":"YulFunctionDefinition","src":"22940:180:26"},{"body":{"nativeSrc":"23170:147:26","nodeType":"YulBlock","src":"23170:147:26","statements":[{"nativeSrc":"23180:25:26","nodeType":"YulAssignment","src":"23180:25:26","value":{"arguments":[{"name":"x","nativeSrc":"23203:1:26","nodeType":"YulIdentifier","src":"23203:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23185:17:26","nodeType":"YulIdentifier","src":"23185:17:26"},"nativeSrc":"23185:20:26","nodeType":"YulFunctionCall","src":"23185:20:26"},"variableNames":[{"name":"x","nativeSrc":"23180:1:26","nodeType":"YulIdentifier","src":"23180:1:26"}]},{"nativeSrc":"23214:25:26","nodeType":"YulAssignment","src":"23214:25:26","value":{"arguments":[{"name":"y","nativeSrc":"23237:1:26","nodeType":"YulIdentifier","src":"23237:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23219:17:26","nodeType":"YulIdentifier","src":"23219:17:26"},"nativeSrc":"23219:20:26","nodeType":"YulFunctionCall","src":"23219:20:26"},"variableNames":[{"name":"y","nativeSrc":"23214:1:26","nodeType":"YulIdentifier","src":"23214:1:26"}]},{"nativeSrc":"23248:16:26","nodeType":"YulAssignment","src":"23248:16:26","value":{"arguments":[{"name":"x","nativeSrc":"23259:1:26","nodeType":"YulIdentifier","src":"23259:1:26"},{"name":"y","nativeSrc":"23262:1:26","nodeType":"YulIdentifier","src":"23262:1:26"}],"functionName":{"name":"add","nativeSrc":"23255:3:26","nodeType":"YulIdentifier","src":"23255:3:26"},"nativeSrc":"23255:9:26","nodeType":"YulFunctionCall","src":"23255:9:26"},"variableNames":[{"name":"sum","nativeSrc":"23248:3:26","nodeType":"YulIdentifier","src":"23248:3:26"}]},{"body":{"nativeSrc":"23288:22:26","nodeType":"YulBlock","src":"23288:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"23290:16:26","nodeType":"YulIdentifier","src":"23290:16:26"},"nativeSrc":"23290:18:26","nodeType":"YulFunctionCall","src":"23290:18:26"},"nativeSrc":"23290:18:26","nodeType":"YulExpressionStatement","src":"23290:18:26"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"23280:1:26","nodeType":"YulIdentifier","src":"23280:1:26"},{"name":"sum","nativeSrc":"23283:3:26","nodeType":"YulIdentifier","src":"23283:3:26"}],"functionName":{"name":"gt","nativeSrc":"23277:2:26","nodeType":"YulIdentifier","src":"23277:2:26"},"nativeSrc":"23277:10:26","nodeType":"YulFunctionCall","src":"23277:10:26"},"nativeSrc":"23274:36:26","nodeType":"YulIf","src":"23274:36:26"}]},"name":"checked_add_t_uint256","nativeSrc":"23126:191:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"23157:1:26","nodeType":"YulTypedName","src":"23157:1:26","type":""},{"name":"y","nativeSrc":"23160:1:26","nodeType":"YulTypedName","src":"23160:1:26","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"23166:3:26","nodeType":"YulTypedName","src":"23166:3:26","type":""}],"src":"23126:191:26"},{"body":{"nativeSrc":"23377:87:26","nodeType":"YulBlock","src":"23377:87:26","statements":[{"nativeSrc":"23387:11:26","nodeType":"YulAssignment","src":"23387:11:26","value":{"name":"ptr","nativeSrc":"23395:3:26","nodeType":"YulIdentifier","src":"23395:3:26"},"variableNames":[{"name":"data","nativeSrc":"23387:4:26","nodeType":"YulIdentifier","src":"23387:4:26"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23415:1:26","nodeType":"YulLiteral","src":"23415:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"23418:3:26","nodeType":"YulIdentifier","src":"23418:3:26"}],"functionName":{"name":"mstore","nativeSrc":"23408:6:26","nodeType":"YulIdentifier","src":"23408:6:26"},"nativeSrc":"23408:14:26","nodeType":"YulFunctionCall","src":"23408:14:26"},"nativeSrc":"23408:14:26","nodeType":"YulExpressionStatement","src":"23408:14:26"},{"nativeSrc":"23431:26:26","nodeType":"YulAssignment","src":"23431:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"23449:1:26","nodeType":"YulLiteral","src":"23449:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"23452:4:26","nodeType":"YulLiteral","src":"23452:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"23439:9:26","nodeType":"YulIdentifier","src":"23439:9:26"},"nativeSrc":"23439:18:26","nodeType":"YulFunctionCall","src":"23439:18:26"},"variableNames":[{"name":"data","nativeSrc":"23431:4:26","nodeType":"YulIdentifier","src":"23431:4:26"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"23323:141:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"23364:3:26","nodeType":"YulTypedName","src":"23364:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"23372:4:26","nodeType":"YulTypedName","src":"23372:4:26","type":""}],"src":"23323:141:26"},{"body":{"nativeSrc":"23514:49:26","nodeType":"YulBlock","src":"23514:49:26","statements":[{"nativeSrc":"23524:33:26","nodeType":"YulAssignment","src":"23524:33:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23542:5:26","nodeType":"YulIdentifier","src":"23542:5:26"},{"kind":"number","nativeSrc":"23549:2:26","nodeType":"YulLiteral","src":"23549:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"23538:3:26","nodeType":"YulIdentifier","src":"23538:3:26"},"nativeSrc":"23538:14:26","nodeType":"YulFunctionCall","src":"23538:14:26"},{"kind":"number","nativeSrc":"23554:2:26","nodeType":"YulLiteral","src":"23554:2:26","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"23534:3:26","nodeType":"YulIdentifier","src":"23534:3:26"},"nativeSrc":"23534:23:26","nodeType":"YulFunctionCall","src":"23534:23:26"},"variableNames":[{"name":"result","nativeSrc":"23524:6:26","nodeType":"YulIdentifier","src":"23524:6:26"}]}]},"name":"divide_by_32_ceil","nativeSrc":"23470:93:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23497:5:26","nodeType":"YulTypedName","src":"23497:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23507:6:26","nodeType":"YulTypedName","src":"23507:6:26","type":""}],"src":"23470:93:26"},{"body":{"nativeSrc":"23622:54:26","nodeType":"YulBlock","src":"23622:54:26","statements":[{"nativeSrc":"23632:37:26","nodeType":"YulAssignment","src":"23632:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"23657:4:26","nodeType":"YulIdentifier","src":"23657:4:26"},{"name":"value","nativeSrc":"23663:5:26","nodeType":"YulIdentifier","src":"23663:5:26"}],"functionName":{"name":"shl","nativeSrc":"23653:3:26","nodeType":"YulIdentifier","src":"23653:3:26"},"nativeSrc":"23653:16:26","nodeType":"YulFunctionCall","src":"23653:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"23632:8:26","nodeType":"YulIdentifier","src":"23632:8:26"}]}]},"name":"shift_left_dynamic","nativeSrc":"23569:107:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"23597:4:26","nodeType":"YulTypedName","src":"23597:4:26","type":""},{"name":"value","nativeSrc":"23603:5:26","nodeType":"YulTypedName","src":"23603:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"23613:8:26","nodeType":"YulTypedName","src":"23613:8:26","type":""}],"src":"23569:107:26"},{"body":{"nativeSrc":"23758:317:26","nodeType":"YulBlock","src":"23758:317:26","statements":[{"nativeSrc":"23768:35:26","nodeType":"YulVariableDeclaration","src":"23768:35:26","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"23789:10:26","nodeType":"YulIdentifier","src":"23789:10:26"},{"kind":"number","nativeSrc":"23801:1:26","nodeType":"YulLiteral","src":"23801:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"23785:3:26","nodeType":"YulIdentifier","src":"23785:3:26"},"nativeSrc":"23785:18:26","nodeType":"YulFunctionCall","src":"23785:18:26"},"variables":[{"name":"shiftBits","nativeSrc":"23772:9:26","nodeType":"YulTypedName","src":"23772:9:26","type":""}]},{"nativeSrc":"23812:109:26","nodeType":"YulVariableDeclaration","src":"23812:109:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23843:9:26","nodeType":"YulIdentifier","src":"23843:9:26"},{"kind":"number","nativeSrc":"23854:66:26","nodeType":"YulLiteral","src":"23854:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23824:18:26","nodeType":"YulIdentifier","src":"23824:18:26"},"nativeSrc":"23824:97:26","nodeType":"YulFunctionCall","src":"23824:97:26"},"variables":[{"name":"mask","nativeSrc":"23816:4:26","nodeType":"YulTypedName","src":"23816:4:26","type":""}]},{"nativeSrc":"23930:51:26","nodeType":"YulAssignment","src":"23930:51:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23961:9:26","nodeType":"YulIdentifier","src":"23961:9:26"},{"name":"toInsert","nativeSrc":"23972:8:26","nodeType":"YulIdentifier","src":"23972:8:26"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23942:18:26","nodeType":"YulIdentifier","src":"23942:18:26"},"nativeSrc":"23942:39:26","nodeType":"YulFunctionCall","src":"23942:39:26"},"variableNames":[{"name":"toInsert","nativeSrc":"23930:8:26","nodeType":"YulIdentifier","src":"23930:8:26"}]},{"nativeSrc":"23990:30:26","nodeType":"YulAssignment","src":"23990:30:26","value":{"arguments":[{"name":"value","nativeSrc":"24003:5:26","nodeType":"YulIdentifier","src":"24003:5:26"},{"arguments":[{"name":"mask","nativeSrc":"24014:4:26","nodeType":"YulIdentifier","src":"24014:4:26"}],"functionName":{"name":"not","nativeSrc":"24010:3:26","nodeType":"YulIdentifier","src":"24010:3:26"},"nativeSrc":"24010:9:26","nodeType":"YulFunctionCall","src":"24010:9:26"}],"functionName":{"name":"and","nativeSrc":"23999:3:26","nodeType":"YulIdentifier","src":"23999:3:26"},"nativeSrc":"23999:21:26","nodeType":"YulFunctionCall","src":"23999:21:26"},"variableNames":[{"name":"value","nativeSrc":"23990:5:26","nodeType":"YulIdentifier","src":"23990:5:26"}]},{"nativeSrc":"24029:40:26","nodeType":"YulAssignment","src":"24029:40:26","value":{"arguments":[{"name":"value","nativeSrc":"24042:5:26","nodeType":"YulIdentifier","src":"24042:5:26"},{"arguments":[{"name":"toInsert","nativeSrc":"24053:8:26","nodeType":"YulIdentifier","src":"24053:8:26"},{"name":"mask","nativeSrc":"24063:4:26","nodeType":"YulIdentifier","src":"24063:4:26"}],"functionName":{"name":"and","nativeSrc":"24049:3:26","nodeType":"YulIdentifier","src":"24049:3:26"},"nativeSrc":"24049:19:26","nodeType":"YulFunctionCall","src":"24049:19:26"}],"functionName":{"name":"or","nativeSrc":"24039:2:26","nodeType":"YulIdentifier","src":"24039:2:26"},"nativeSrc":"24039:30:26","nodeType":"YulFunctionCall","src":"24039:30:26"},"variableNames":[{"name":"result","nativeSrc":"24029:6:26","nodeType":"YulIdentifier","src":"24029:6:26"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"23682:393:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23719:5:26","nodeType":"YulTypedName","src":"23719:5:26","type":""},{"name":"shiftBytes","nativeSrc":"23726:10:26","nodeType":"YulTypedName","src":"23726:10:26","type":""},{"name":"toInsert","nativeSrc":"23738:8:26","nodeType":"YulTypedName","src":"23738:8:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23751:6:26","nodeType":"YulTypedName","src":"23751:6:26","type":""}],"src":"23682:393:26"},{"body":{"nativeSrc":"24141:82:26","nodeType":"YulBlock","src":"24141:82:26","statements":[{"nativeSrc":"24151:66:26","nodeType":"YulAssignment","src":"24151:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24209:5:26","nodeType":"YulIdentifier","src":"24209:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"24191:17:26","nodeType":"YulIdentifier","src":"24191:17:26"},"nativeSrc":"24191:24:26","nodeType":"YulFunctionCall","src":"24191:24:26"}],"functionName":{"name":"identity","nativeSrc":"24182:8:26","nodeType":"YulIdentifier","src":"24182:8:26"},"nativeSrc":"24182:34:26","nodeType":"YulFunctionCall","src":"24182:34:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"24164:17:26","nodeType":"YulIdentifier","src":"24164:17:26"},"nativeSrc":"24164:53:26","nodeType":"YulFunctionCall","src":"24164:53:26"},"variableNames":[{"name":"converted","nativeSrc":"24151:9:26","nodeType":"YulIdentifier","src":"24151:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"24081:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24121:5:26","nodeType":"YulTypedName","src":"24121:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"24131:9:26","nodeType":"YulTypedName","src":"24131:9:26","type":""}],"src":"24081:142:26"},{"body":{"nativeSrc":"24276:28:26","nodeType":"YulBlock","src":"24276:28:26","statements":[{"nativeSrc":"24286:12:26","nodeType":"YulAssignment","src":"24286:12:26","value":{"name":"value","nativeSrc":"24293:5:26","nodeType":"YulIdentifier","src":"24293:5:26"},"variableNames":[{"name":"ret","nativeSrc":"24286:3:26","nodeType":"YulIdentifier","src":"24286:3:26"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"24229:75:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24262:5:26","nodeType":"YulTypedName","src":"24262:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"24272:3:26","nodeType":"YulTypedName","src":"24272:3:26","type":""}],"src":"24229:75:26"},{"body":{"nativeSrc":"24386:193:26","nodeType":"YulBlock","src":"24386:193:26","statements":[{"nativeSrc":"24396:63:26","nodeType":"YulVariableDeclaration","src":"24396:63:26","value":{"arguments":[{"name":"value_0","nativeSrc":"24451:7:26","nodeType":"YulIdentifier","src":"24451:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"24420:30:26","nodeType":"YulIdentifier","src":"24420:30:26"},"nativeSrc":"24420:39:26","nodeType":"YulFunctionCall","src":"24420:39:26"},"variables":[{"name":"convertedValue_0","nativeSrc":"24400:16:26","nodeType":"YulTypedName","src":"24400:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24475:4:26","nodeType":"YulIdentifier","src":"24475:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"24515:4:26","nodeType":"YulIdentifier","src":"24515:4:26"}],"functionName":{"name":"sload","nativeSrc":"24509:5:26","nodeType":"YulIdentifier","src":"24509:5:26"},"nativeSrc":"24509:11:26","nodeType":"YulFunctionCall","src":"24509:11:26"},{"name":"offset","nativeSrc":"24522:6:26","nodeType":"YulIdentifier","src":"24522:6:26"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"24554:16:26","nodeType":"YulIdentifier","src":"24554:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"24530:23:26","nodeType":"YulIdentifier","src":"24530:23:26"},"nativeSrc":"24530:41:26","nodeType":"YulFunctionCall","src":"24530:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"24481:27:26","nodeType":"YulIdentifier","src":"24481:27:26"},"nativeSrc":"24481:91:26","nodeType":"YulFunctionCall","src":"24481:91:26"}],"functionName":{"name":"sstore","nativeSrc":"24468:6:26","nodeType":"YulIdentifier","src":"24468:6:26"},"nativeSrc":"24468:105:26","nodeType":"YulFunctionCall","src":"24468:105:26"},"nativeSrc":"24468:105:26","nodeType":"YulExpressionStatement","src":"24468:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24310:269:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24363:4:26","nodeType":"YulTypedName","src":"24363:4:26","type":""},{"name":"offset","nativeSrc":"24369:6:26","nodeType":"YulTypedName","src":"24369:6:26","type":""},{"name":"value_0","nativeSrc":"24377:7:26","nodeType":"YulTypedName","src":"24377:7:26","type":""}],"src":"24310:269:26"},{"body":{"nativeSrc":"24634:24:26","nodeType":"YulBlock","src":"24634:24:26","statements":[{"nativeSrc":"24644:8:26","nodeType":"YulAssignment","src":"24644:8:26","value":{"kind":"number","nativeSrc":"24651:1:26","nodeType":"YulLiteral","src":"24651:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"24644:3:26","nodeType":"YulIdentifier","src":"24644:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"24585:73:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"24630:3:26","nodeType":"YulTypedName","src":"24630:3:26","type":""}],"src":"24585:73:26"},{"body":{"nativeSrc":"24717:136:26","nodeType":"YulBlock","src":"24717:136:26","statements":[{"nativeSrc":"24727:46:26","nodeType":"YulVariableDeclaration","src":"24727:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"24741:30:26","nodeType":"YulIdentifier","src":"24741:30:26"},"nativeSrc":"24741:32:26","nodeType":"YulFunctionCall","src":"24741:32:26"},"variables":[{"name":"zero_0","nativeSrc":"24731:6:26","nodeType":"YulTypedName","src":"24731:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24826:4:26","nodeType":"YulIdentifier","src":"24826:4:26"},{"name":"offset","nativeSrc":"24832:6:26","nodeType":"YulIdentifier","src":"24832:6:26"},{"name":"zero_0","nativeSrc":"24840:6:26","nodeType":"YulIdentifier","src":"24840:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24782:43:26","nodeType":"YulIdentifier","src":"24782:43:26"},"nativeSrc":"24782:65:26","nodeType":"YulFunctionCall","src":"24782:65:26"},"nativeSrc":"24782:65:26","nodeType":"YulExpressionStatement","src":"24782:65:26"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"24664:189:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24703:4:26","nodeType":"YulTypedName","src":"24703:4:26","type":""},{"name":"offset","nativeSrc":"24709:6:26","nodeType":"YulTypedName","src":"24709:6:26","type":""}],"src":"24664:189:26"},{"body":{"nativeSrc":"24909:136:26","nodeType":"YulBlock","src":"24909:136:26","statements":[{"body":{"nativeSrc":"24976:63:26","nodeType":"YulBlock","src":"24976:63:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"25020:5:26","nodeType":"YulIdentifier","src":"25020:5:26"},{"kind":"number","nativeSrc":"25027:1:26","nodeType":"YulLiteral","src":"25027:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"24990:29:26","nodeType":"YulIdentifier","src":"24990:29:26"},"nativeSrc":"24990:39:26","nodeType":"YulFunctionCall","src":"24990:39:26"},"nativeSrc":"24990:39:26","nodeType":"YulExpressionStatement","src":"24990:39:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"24929:5:26","nodeType":"YulIdentifier","src":"24929:5:26"},{"name":"end","nativeSrc":"24936:3:26","nodeType":"YulIdentifier","src":"24936:3:26"}],"functionName":{"name":"lt","nativeSrc":"24926:2:26","nodeType":"YulIdentifier","src":"24926:2:26"},"nativeSrc":"24926:14:26","nodeType":"YulFunctionCall","src":"24926:14:26"},"nativeSrc":"24919:120:26","nodeType":"YulForLoop","post":{"nativeSrc":"24941:26:26","nodeType":"YulBlock","src":"24941:26:26","statements":[{"nativeSrc":"24943:22:26","nodeType":"YulAssignment","src":"24943:22:26","value":{"arguments":[{"name":"start","nativeSrc":"24956:5:26","nodeType":"YulIdentifier","src":"24956:5:26"},{"kind":"number","nativeSrc":"24963:1:26","nodeType":"YulLiteral","src":"24963:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24952:3:26","nodeType":"YulIdentifier","src":"24952:3:26"},"nativeSrc":"24952:13:26","nodeType":"YulFunctionCall","src":"24952:13:26"},"variableNames":[{"name":"start","nativeSrc":"24943:5:26","nodeType":"YulIdentifier","src":"24943:5:26"}]}]},"pre":{"nativeSrc":"24923:2:26","nodeType":"YulBlock","src":"24923:2:26","statements":[]},"src":"24919:120:26"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"24859:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"24897:5:26","nodeType":"YulTypedName","src":"24897:5:26","type":""},{"name":"end","nativeSrc":"24904:3:26","nodeType":"YulTypedName","src":"24904:3:26","type":""}],"src":"24859:186:26"},{"body":{"nativeSrc":"25130:464:26","nodeType":"YulBlock","src":"25130:464:26","statements":[{"body":{"nativeSrc":"25156:431:26","nodeType":"YulBlock","src":"25156:431:26","statements":[{"nativeSrc":"25170:54:26","nodeType":"YulVariableDeclaration","src":"25170:54:26","value":{"arguments":[{"name":"array","nativeSrc":"25218:5:26","nodeType":"YulIdentifier","src":"25218:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"25186:31:26","nodeType":"YulIdentifier","src":"25186:31:26"},"nativeSrc":"25186:38:26","nodeType":"YulFunctionCall","src":"25186:38:26"},"variables":[{"name":"dataArea","nativeSrc":"25174:8:26","nodeType":"YulTypedName","src":"25174:8:26","type":""}]},{"nativeSrc":"25237:63:26","nodeType":"YulVariableDeclaration","src":"25237:63:26","value":{"arguments":[{"name":"dataArea","nativeSrc":"25260:8:26","nodeType":"YulIdentifier","src":"25260:8:26"},{"arguments":[{"name":"startIndex","nativeSrc":"25288:10:26","nodeType":"YulIdentifier","src":"25288:10:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"25270:17:26","nodeType":"YulIdentifier","src":"25270:17:26"},"nativeSrc":"25270:29:26","nodeType":"YulFunctionCall","src":"25270:29:26"}],"functionName":{"name":"add","nativeSrc":"25256:3:26","nodeType":"YulIdentifier","src":"25256:3:26"},"nativeSrc":"25256:44:26","nodeType":"YulFunctionCall","src":"25256:44:26"},"variables":[{"name":"deleteStart","nativeSrc":"25241:11:26","nodeType":"YulTypedName","src":"25241:11:26","type":""}]},{"body":{"nativeSrc":"25457:27:26","nodeType":"YulBlock","src":"25457:27:26","statements":[{"nativeSrc":"25459:23:26","nodeType":"YulAssignment","src":"25459:23:26","value":{"name":"dataArea","nativeSrc":"25474:8:26","nodeType":"YulIdentifier","src":"25474:8:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"25459:11:26","nodeType":"YulIdentifier","src":"25459:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"25441:10:26","nodeType":"YulIdentifier","src":"25441:10:26"},{"kind":"number","nativeSrc":"25453:2:26","nodeType":"YulLiteral","src":"25453:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"25438:2:26","nodeType":"YulIdentifier","src":"25438:2:26"},"nativeSrc":"25438:18:26","nodeType":"YulFunctionCall","src":"25438:18:26"},"nativeSrc":"25435:49:26","nodeType":"YulIf","src":"25435:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"25526:11:26","nodeType":"YulIdentifier","src":"25526:11:26"},{"arguments":[{"name":"dataArea","nativeSrc":"25543:8:26","nodeType":"YulIdentifier","src":"25543:8:26"},{"arguments":[{"name":"len","nativeSrc":"25571:3:26","nodeType":"YulIdentifier","src":"25571:3:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"25553:17:26","nodeType":"YulIdentifier","src":"25553:17:26"},"nativeSrc":"25553:22:26","nodeType":"YulFunctionCall","src":"25553:22:26"}],"functionName":{"name":"add","nativeSrc":"25539:3:26","nodeType":"YulIdentifier","src":"25539:3:26"},"nativeSrc":"25539:37:26","nodeType":"YulFunctionCall","src":"25539:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"25497:28:26","nodeType":"YulIdentifier","src":"25497:28:26"},"nativeSrc":"25497:80:26","nodeType":"YulFunctionCall","src":"25497:80:26"},"nativeSrc":"25497:80:26","nodeType":"YulExpressionStatement","src":"25497:80:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"25147:3:26","nodeType":"YulIdentifier","src":"25147:3:26"},{"kind":"number","nativeSrc":"25152:2:26","nodeType":"YulLiteral","src":"25152:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"25144:2:26","nodeType":"YulIdentifier","src":"25144:2:26"},"nativeSrc":"25144:11:26","nodeType":"YulFunctionCall","src":"25144:11:26"},"nativeSrc":"25141:446:26","nodeType":"YulIf","src":"25141:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"25051:543:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"25106:5:26","nodeType":"YulTypedName","src":"25106:5:26","type":""},{"name":"len","nativeSrc":"25113:3:26","nodeType":"YulTypedName","src":"25113:3:26","type":""},{"name":"startIndex","nativeSrc":"25118:10:26","nodeType":"YulTypedName","src":"25118:10:26","type":""}],"src":"25051:543:26"},{"body":{"nativeSrc":"25663:54:26","nodeType":"YulBlock","src":"25663:54:26","statements":[{"nativeSrc":"25673:37:26","nodeType":"YulAssignment","src":"25673:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"25698:4:26","nodeType":"YulIdentifier","src":"25698:4:26"},{"name":"value","nativeSrc":"25704:5:26","nodeType":"YulIdentifier","src":"25704:5:26"}],"functionName":{"name":"shr","nativeSrc":"25694:3:26","nodeType":"YulIdentifier","src":"25694:3:26"},"nativeSrc":"25694:16:26","nodeType":"YulFunctionCall","src":"25694:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"25673:8:26","nodeType":"YulIdentifier","src":"25673:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"25600:117:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"25638:4:26","nodeType":"YulTypedName","src":"25638:4:26","type":""},{"name":"value","nativeSrc":"25644:5:26","nodeType":"YulTypedName","src":"25644:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"25654:8:26","nodeType":"YulTypedName","src":"25654:8:26","type":""}],"src":"25600:117:26"},{"body":{"nativeSrc":"25774:118:26","nodeType":"YulBlock","src":"25774:118:26","statements":[{"nativeSrc":"25784:68:26","nodeType":"YulVariableDeclaration","src":"25784:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"25833:1:26","nodeType":"YulLiteral","src":"25833:1:26","type":"","value":"8"},{"name":"bytes","nativeSrc":"25836:5:26","nodeType":"YulIdentifier","src":"25836:5:26"}],"functionName":{"name":"mul","nativeSrc":"25829:3:26","nodeType":"YulIdentifier","src":"25829:3:26"},"nativeSrc":"25829:13:26","nodeType":"YulFunctionCall","src":"25829:13:26"},{"arguments":[{"kind":"number","nativeSrc":"25848:1:26","nodeType":"YulLiteral","src":"25848:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"25844:3:26","nodeType":"YulIdentifier","src":"25844:3:26"},"nativeSrc":"25844:6:26","nodeType":"YulFunctionCall","src":"25844:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"25800:28:26","nodeType":"YulIdentifier","src":"25800:28:26"},"nativeSrc":"25800:51:26","nodeType":"YulFunctionCall","src":"25800:51:26"}],"functionName":{"name":"not","nativeSrc":"25796:3:26","nodeType":"YulIdentifier","src":"25796:3:26"},"nativeSrc":"25796:56:26","nodeType":"YulFunctionCall","src":"25796:56:26"},"variables":[{"name":"mask","nativeSrc":"25788:4:26","nodeType":"YulTypedName","src":"25788:4:26","type":""}]},{"nativeSrc":"25861:25:26","nodeType":"YulAssignment","src":"25861:25:26","value":{"arguments":[{"name":"data","nativeSrc":"25875:4:26","nodeType":"YulIdentifier","src":"25875:4:26"},{"name":"mask","nativeSrc":"25881:4:26","nodeType":"YulIdentifier","src":"25881:4:26"}],"functionName":{"name":"and","nativeSrc":"25871:3:26","nodeType":"YulIdentifier","src":"25871:3:26"},"nativeSrc":"25871:15:26","nodeType":"YulFunctionCall","src":"25871:15:26"},"variableNames":[{"name":"result","nativeSrc":"25861:6:26","nodeType":"YulIdentifier","src":"25861:6:26"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"25723:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25751:4:26","nodeType":"YulTypedName","src":"25751:4:26","type":""},{"name":"bytes","nativeSrc":"25757:5:26","nodeType":"YulTypedName","src":"25757:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"25767:6:26","nodeType":"YulTypedName","src":"25767:6:26","type":""}],"src":"25723:169:26"},{"body":{"nativeSrc":"25978:214:26","nodeType":"YulBlock","src":"25978:214:26","statements":[{"nativeSrc":"26111:37:26","nodeType":"YulAssignment","src":"26111:37:26","value":{"arguments":[{"name":"data","nativeSrc":"26138:4:26","nodeType":"YulIdentifier","src":"26138:4:26"},{"name":"len","nativeSrc":"26144:3:26","nodeType":"YulIdentifier","src":"26144:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"26119:18:26","nodeType":"YulIdentifier","src":"26119:18:26"},"nativeSrc":"26119:29:26","nodeType":"YulFunctionCall","src":"26119:29:26"},"variableNames":[{"name":"data","nativeSrc":"26111:4:26","nodeType":"YulIdentifier","src":"26111:4:26"}]},{"nativeSrc":"26157:29:26","nodeType":"YulAssignment","src":"26157:29:26","value":{"arguments":[{"name":"data","nativeSrc":"26168:4:26","nodeType":"YulIdentifier","src":"26168:4:26"},{"arguments":[{"kind":"number","nativeSrc":"26178:1:26","nodeType":"YulLiteral","src":"26178:1:26","type":"","value":"2"},{"name":"len","nativeSrc":"26181:3:26","nodeType":"YulIdentifier","src":"26181:3:26"}],"functionName":{"name":"mul","nativeSrc":"26174:3:26","nodeType":"YulIdentifier","src":"26174:3:26"},"nativeSrc":"26174:11:26","nodeType":"YulFunctionCall","src":"26174:11:26"}],"functionName":{"name":"or","nativeSrc":"26165:2:26","nodeType":"YulIdentifier","src":"26165:2:26"},"nativeSrc":"26165:21:26","nodeType":"YulFunctionCall","src":"26165:21:26"},"variableNames":[{"name":"used","nativeSrc":"26157:4:26","nodeType":"YulIdentifier","src":"26157:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"25897:295:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25959:4:26","nodeType":"YulTypedName","src":"25959:4:26","type":""},{"name":"len","nativeSrc":"25965:3:26","nodeType":"YulTypedName","src":"25965:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"25973:4:26","nodeType":"YulTypedName","src":"25973:4:26","type":""}],"src":"25897:295:26"},{"body":{"nativeSrc":"26289:1303:26","nodeType":"YulBlock","src":"26289:1303:26","statements":[{"nativeSrc":"26300:51:26","nodeType":"YulVariableDeclaration","src":"26300:51:26","value":{"arguments":[{"name":"src","nativeSrc":"26347:3:26","nodeType":"YulIdentifier","src":"26347:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"26314:32:26","nodeType":"YulIdentifier","src":"26314:32:26"},"nativeSrc":"26314:37:26","nodeType":"YulFunctionCall","src":"26314:37:26"},"variables":[{"name":"newLen","nativeSrc":"26304:6:26","nodeType":"YulTypedName","src":"26304:6:26","type":""}]},{"body":{"nativeSrc":"26436:22:26","nodeType":"YulBlock","src":"26436:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"26438:16:26","nodeType":"YulIdentifier","src":"26438:16:26"},"nativeSrc":"26438:18:26","nodeType":"YulFunctionCall","src":"26438:18:26"},"nativeSrc":"26438:18:26","nodeType":"YulExpressionStatement","src":"26438:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"26408:6:26","nodeType":"YulIdentifier","src":"26408:6:26"},{"kind":"number","nativeSrc":"26416:18:26","nodeType":"YulLiteral","src":"26416:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26405:2:26","nodeType":"YulIdentifier","src":"26405:2:26"},"nativeSrc":"26405:30:26","nodeType":"YulFunctionCall","src":"26405:30:26"},"nativeSrc":"26402:56:26","nodeType":"YulIf","src":"26402:56:26"},{"nativeSrc":"26468:52:26","nodeType":"YulVariableDeclaration","src":"26468:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"26514:4:26","nodeType":"YulIdentifier","src":"26514:4:26"}],"functionName":{"name":"sload","nativeSrc":"26508:5:26","nodeType":"YulIdentifier","src":"26508:5:26"},"nativeSrc":"26508:11:26","nodeType":"YulFunctionCall","src":"26508:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"26482:25:26","nodeType":"YulIdentifier","src":"26482:25:26"},"nativeSrc":"26482:38:26","nodeType":"YulFunctionCall","src":"26482:38:26"},"variables":[{"name":"oldLen","nativeSrc":"26472:6:26","nodeType":"YulTypedName","src":"26472:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"26613:4:26","nodeType":"YulIdentifier","src":"26613:4:26"},{"name":"oldLen","nativeSrc":"26619:6:26","nodeType":"YulIdentifier","src":"26619:6:26"},{"name":"newLen","nativeSrc":"26627:6:26","nodeType":"YulIdentifier","src":"26627:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"26567:45:26","nodeType":"YulIdentifier","src":"26567:45:26"},"nativeSrc":"26567:67:26","nodeType":"YulFunctionCall","src":"26567:67:26"},"nativeSrc":"26567:67:26","nodeType":"YulExpressionStatement","src":"26567:67:26"},{"nativeSrc":"26644:18:26","nodeType":"YulVariableDeclaration","src":"26644:18:26","value":{"kind":"number","nativeSrc":"26661:1:26","nodeType":"YulLiteral","src":"26661:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"26648:9:26","nodeType":"YulTypedName","src":"26648:9:26","type":""}]},{"nativeSrc":"26672:17:26","nodeType":"YulAssignment","src":"26672:17:26","value":{"kind":"number","nativeSrc":"26685:4:26","nodeType":"YulLiteral","src":"26685:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"26672:9:26","nodeType":"YulIdentifier","src":"26672:9:26"}]},{"cases":[{"body":{"nativeSrc":"26736:611:26","nodeType":"YulBlock","src":"26736:611:26","statements":[{"nativeSrc":"26750:37:26","nodeType":"YulVariableDeclaration","src":"26750:37:26","value":{"arguments":[{"name":"newLen","nativeSrc":"26769:6:26","nodeType":"YulIdentifier","src":"26769:6:26"},{"arguments":[{"kind":"number","nativeSrc":"26781:4:26","nodeType":"YulLiteral","src":"26781:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"26777:3:26","nodeType":"YulIdentifier","src":"26777:3:26"},"nativeSrc":"26777:9:26","nodeType":"YulFunctionCall","src":"26777:9:26"}],"functionName":{"name":"and","nativeSrc":"26765:3:26","nodeType":"YulIdentifier","src":"26765:3:26"},"nativeSrc":"26765:22:26","nodeType":"YulFunctionCall","src":"26765:22:26"},"variables":[{"name":"loopEnd","nativeSrc":"26754:7:26","nodeType":"YulTypedName","src":"26754:7:26","type":""}]},{"nativeSrc":"26801:51:26","nodeType":"YulVariableDeclaration","src":"26801:51:26","value":{"arguments":[{"name":"slot","nativeSrc":"26847:4:26","nodeType":"YulIdentifier","src":"26847:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"26815:31:26","nodeType":"YulIdentifier","src":"26815:31:26"},"nativeSrc":"26815:37:26","nodeType":"YulFunctionCall","src":"26815:37:26"},"variables":[{"name":"dstPtr","nativeSrc":"26805:6:26","nodeType":"YulTypedName","src":"26805:6:26","type":""}]},{"nativeSrc":"26865:10:26","nodeType":"YulVariableDeclaration","src":"26865:10:26","value":{"kind":"number","nativeSrc":"26874:1:26","nodeType":"YulLiteral","src":"26874:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"26869:1:26","nodeType":"YulTypedName","src":"26869:1:26","type":""}]},{"body":{"nativeSrc":"26933:163:26","nodeType":"YulBlock","src":"26933:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"26958:6:26","nodeType":"YulIdentifier","src":"26958:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26976:3:26","nodeType":"YulIdentifier","src":"26976:3:26"},{"name":"srcOffset","nativeSrc":"26981:9:26","nodeType":"YulIdentifier","src":"26981:9:26"}],"functionName":{"name":"add","nativeSrc":"26972:3:26","nodeType":"YulIdentifier","src":"26972:3:26"},"nativeSrc":"26972:19:26","nodeType":"YulFunctionCall","src":"26972:19:26"}],"functionName":{"name":"mload","nativeSrc":"26966:5:26","nodeType":"YulIdentifier","src":"26966:5:26"},"nativeSrc":"26966:26:26","nodeType":"YulFunctionCall","src":"26966:26:26"}],"functionName":{"name":"sstore","nativeSrc":"26951:6:26","nodeType":"YulIdentifier","src":"26951:6:26"},"nativeSrc":"26951:42:26","nodeType":"YulFunctionCall","src":"26951:42:26"},"nativeSrc":"26951:42:26","nodeType":"YulExpressionStatement","src":"26951:42:26"},{"nativeSrc":"27010:24:26","nodeType":"YulAssignment","src":"27010:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"27024:6:26","nodeType":"YulIdentifier","src":"27024:6:26"},{"kind":"number","nativeSrc":"27032:1:26","nodeType":"YulLiteral","src":"27032:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27020:3:26","nodeType":"YulIdentifier","src":"27020:3:26"},"nativeSrc":"27020:14:26","nodeType":"YulFunctionCall","src":"27020:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"27010:6:26","nodeType":"YulIdentifier","src":"27010:6:26"}]},{"nativeSrc":"27051:31:26","nodeType":"YulAssignment","src":"27051:31:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"27068:9:26","nodeType":"YulIdentifier","src":"27068:9:26"},{"kind":"number","nativeSrc":"27079:2:26","nodeType":"YulLiteral","src":"27079:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27064:3:26","nodeType":"YulIdentifier","src":"27064:3:26"},"nativeSrc":"27064:18:26","nodeType":"YulFunctionCall","src":"27064:18:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"27051:9:26","nodeType":"YulIdentifier","src":"27051:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"26899:1:26","nodeType":"YulIdentifier","src":"26899:1:26"},{"name":"loopEnd","nativeSrc":"26902:7:26","nodeType":"YulIdentifier","src":"26902:7:26"}],"functionName":{"name":"lt","nativeSrc":"26896:2:26","nodeType":"YulIdentifier","src":"26896:2:26"},"nativeSrc":"26896:14:26","nodeType":"YulFunctionCall","src":"26896:14:26"},"nativeSrc":"26888:208:26","nodeType":"YulForLoop","post":{"nativeSrc":"26911:21:26","nodeType":"YulBlock","src":"26911:21:26","statements":[{"nativeSrc":"26913:17:26","nodeType":"YulAssignment","src":"26913:17:26","value":{"arguments":[{"name":"i","nativeSrc":"26922:1:26","nodeType":"YulIdentifier","src":"26922:1:26"},{"kind":"number","nativeSrc":"26925:4:26","nodeType":"YulLiteral","src":"26925:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26918:3:26","nodeType":"YulIdentifier","src":"26918:3:26"},"nativeSrc":"26918:12:26","nodeType":"YulFunctionCall","src":"26918:12:26"},"variableNames":[{"name":"i","nativeSrc":"26913:1:26","nodeType":"YulIdentifier","src":"26913:1:26"}]}]},"pre":{"nativeSrc":"26892:3:26","nodeType":"YulBlock","src":"26892:3:26","statements":[]},"src":"26888:208:26"},{"body":{"nativeSrc":"27132:156:26","nodeType":"YulBlock","src":"27132:156:26","statements":[{"nativeSrc":"27150:43:26","nodeType":"YulVariableDeclaration","src":"27150:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27177:3:26","nodeType":"YulIdentifier","src":"27177:3:26"},{"name":"srcOffset","nativeSrc":"27182:9:26","nodeType":"YulIdentifier","src":"27182:9:26"}],"functionName":{"name":"add","nativeSrc":"27173:3:26","nodeType":"YulIdentifier","src":"27173:3:26"},"nativeSrc":"27173:19:26","nodeType":"YulFunctionCall","src":"27173:19:26"}],"functionName":{"name":"mload","nativeSrc":"27167:5:26","nodeType":"YulIdentifier","src":"27167:5:26"},"nativeSrc":"27167:26:26","nodeType":"YulFunctionCall","src":"27167:26:26"},"variables":[{"name":"lastValue","nativeSrc":"27154:9:26","nodeType":"YulTypedName","src":"27154:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"27217:6:26","nodeType":"YulIdentifier","src":"27217:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"27244:9:26","nodeType":"YulIdentifier","src":"27244:9:26"},{"arguments":[{"name":"newLen","nativeSrc":"27259:6:26","nodeType":"YulIdentifier","src":"27259:6:26"},{"kind":"number","nativeSrc":"27267:4:26","nodeType":"YulLiteral","src":"27267:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"27255:3:26","nodeType":"YulIdentifier","src":"27255:3:26"},"nativeSrc":"27255:17:26","nodeType":"YulFunctionCall","src":"27255:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"27225:18:26","nodeType":"YulIdentifier","src":"27225:18:26"},"nativeSrc":"27225:48:26","nodeType":"YulFunctionCall","src":"27225:48:26"}],"functionName":{"name":"sstore","nativeSrc":"27210:6:26","nodeType":"YulIdentifier","src":"27210:6:26"},"nativeSrc":"27210:64:26","nodeType":"YulFunctionCall","src":"27210:64:26"},"nativeSrc":"27210:64:26","nodeType":"YulExpressionStatement","src":"27210:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"27115:7:26","nodeType":"YulIdentifier","src":"27115:7:26"},{"name":"newLen","nativeSrc":"27124:6:26","nodeType":"YulIdentifier","src":"27124:6:26"}],"functionName":{"name":"lt","nativeSrc":"27112:2:26","nodeType":"YulIdentifier","src":"27112:2:26"},"nativeSrc":"27112:19:26","nodeType":"YulFunctionCall","src":"27112:19:26"},"nativeSrc":"27109:179:26","nodeType":"YulIf","src":"27109:179:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27308:4:26","nodeType":"YulIdentifier","src":"27308:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"27322:6:26","nodeType":"YulIdentifier","src":"27322:6:26"},{"kind":"number","nativeSrc":"27330:1:26","nodeType":"YulLiteral","src":"27330:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"27318:3:26","nodeType":"YulIdentifier","src":"27318:3:26"},"nativeSrc":"27318:14:26","nodeType":"YulFunctionCall","src":"27318:14:26"},{"kind":"number","nativeSrc":"27334:1:26","nodeType":"YulLiteral","src":"27334:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27314:3:26","nodeType":"YulIdentifier","src":"27314:3:26"},"nativeSrc":"27314:22:26","nodeType":"YulFunctionCall","src":"27314:22:26"}],"functionName":{"name":"sstore","nativeSrc":"27301:6:26","nodeType":"YulIdentifier","src":"27301:6:26"},"nativeSrc":"27301:36:26","nodeType":"YulFunctionCall","src":"27301:36:26"},"nativeSrc":"27301:36:26","nodeType":"YulExpressionStatement","src":"27301:36:26"}]},"nativeSrc":"26729:618:26","nodeType":"YulCase","src":"26729:618:26","value":{"kind":"number","nativeSrc":"26734:1:26","nodeType":"YulLiteral","src":"26734:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"27364:222:26","nodeType":"YulBlock","src":"27364:222:26","statements":[{"nativeSrc":"27378:14:26","nodeType":"YulVariableDeclaration","src":"27378:14:26","value":{"kind":"number","nativeSrc":"27391:1:26","nodeType":"YulLiteral","src":"27391:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"27382:5:26","nodeType":"YulTypedName","src":"27382:5:26","type":""}]},{"body":{"nativeSrc":"27415:67:26","nodeType":"YulBlock","src":"27415:67:26","statements":[{"nativeSrc":"27433:35:26","nodeType":"YulAssignment","src":"27433:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27452:3:26","nodeType":"YulIdentifier","src":"27452:3:26"},{"name":"srcOffset","nativeSrc":"27457:9:26","nodeType":"YulIdentifier","src":"27457:9:26"}],"functionName":{"name":"add","nativeSrc":"27448:3:26","nodeType":"YulIdentifier","src":"27448:3:26"},"nativeSrc":"27448:19:26","nodeType":"YulFunctionCall","src":"27448:19:26"}],"functionName":{"name":"mload","nativeSrc":"27442:5:26","nodeType":"YulIdentifier","src":"27442:5:26"},"nativeSrc":"27442:26:26","nodeType":"YulFunctionCall","src":"27442:26:26"},"variableNames":[{"name":"value","nativeSrc":"27433:5:26","nodeType":"YulIdentifier","src":"27433:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"27408:6:26","nodeType":"YulIdentifier","src":"27408:6:26"},"nativeSrc":"27405:77:26","nodeType":"YulIf","src":"27405:77:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27502:4:26","nodeType":"YulIdentifier","src":"27502:4:26"},{"arguments":[{"name":"value","nativeSrc":"27561:5:26","nodeType":"YulIdentifier","src":"27561:5:26"},{"name":"newLen","nativeSrc":"27568:6:26","nodeType":"YulIdentifier","src":"27568:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"27508:52:26","nodeType":"YulIdentifier","src":"27508:52:26"},"nativeSrc":"27508:67:26","nodeType":"YulFunctionCall","src":"27508:67:26"}],"functionName":{"name":"sstore","nativeSrc":"27495:6:26","nodeType":"YulIdentifier","src":"27495:6:26"},"nativeSrc":"27495:81:26","nodeType":"YulFunctionCall","src":"27495:81:26"},"nativeSrc":"27495:81:26","nodeType":"YulExpressionStatement","src":"27495:81:26"}]},"nativeSrc":"27356:230:26","nodeType":"YulCase","src":"27356:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"26709:6:26","nodeType":"YulIdentifier","src":"26709:6:26"},{"kind":"number","nativeSrc":"26717:2:26","nodeType":"YulLiteral","src":"26717:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"26706:2:26","nodeType":"YulIdentifier","src":"26706:2:26"},"nativeSrc":"26706:14:26","nodeType":"YulFunctionCall","src":"26706:14:26"},"nativeSrc":"26699:887:26","nodeType":"YulSwitch","src":"26699:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"26197:1395:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"26278:4:26","nodeType":"YulTypedName","src":"26278:4:26","type":""},{"name":"src","nativeSrc":"26284:3:26","nodeType":"YulTypedName","src":"26284:3:26","type":""}],"src":"26197:1395:26"},{"body":{"nativeSrc":"27764:348:26","nodeType":"YulBlock","src":"27764:348:26","statements":[{"nativeSrc":"27774:26:26","nodeType":"YulAssignment","src":"27774:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"27786:9:26","nodeType":"YulIdentifier","src":"27786:9:26"},{"kind":"number","nativeSrc":"27797:2:26","nodeType":"YulLiteral","src":"27797:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27782:3:26","nodeType":"YulIdentifier","src":"27782:3:26"},"nativeSrc":"27782:18:26","nodeType":"YulFunctionCall","src":"27782:18:26"},"variableNames":[{"name":"tail","nativeSrc":"27774:4:26","nodeType":"YulIdentifier","src":"27774:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27821:9:26","nodeType":"YulIdentifier","src":"27821:9:26"},{"kind":"number","nativeSrc":"27832:1:26","nodeType":"YulLiteral","src":"27832:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27817:3:26","nodeType":"YulIdentifier","src":"27817:3:26"},"nativeSrc":"27817:17:26","nodeType":"YulFunctionCall","src":"27817:17:26"},{"arguments":[{"name":"tail","nativeSrc":"27840:4:26","nodeType":"YulIdentifier","src":"27840:4:26"},{"name":"headStart","nativeSrc":"27846:9:26","nodeType":"YulIdentifier","src":"27846:9:26"}],"functionName":{"name":"sub","nativeSrc":"27836:3:26","nodeType":"YulIdentifier","src":"27836:3:26"},"nativeSrc":"27836:20:26","nodeType":"YulFunctionCall","src":"27836:20:26"}],"functionName":{"name":"mstore","nativeSrc":"27810:6:26","nodeType":"YulIdentifier","src":"27810:6:26"},"nativeSrc":"27810:47:26","nodeType":"YulFunctionCall","src":"27810:47:26"},"nativeSrc":"27810:47:26","nodeType":"YulExpressionStatement","src":"27810:47:26"},{"nativeSrc":"27866:86:26","nodeType":"YulAssignment","src":"27866:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"27938:6:26","nodeType":"YulIdentifier","src":"27938:6:26"},{"name":"tail","nativeSrc":"27947:4:26","nodeType":"YulIdentifier","src":"27947:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"27874:63:26","nodeType":"YulIdentifier","src":"27874:63:26"},"nativeSrc":"27874:78:26","nodeType":"YulFunctionCall","src":"27874:78:26"},"variableNames":[{"name":"tail","nativeSrc":"27866:4:26","nodeType":"YulIdentifier","src":"27866:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27973:9:26","nodeType":"YulIdentifier","src":"27973:9:26"},{"kind":"number","nativeSrc":"27984:2:26","nodeType":"YulLiteral","src":"27984:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27969:3:26","nodeType":"YulIdentifier","src":"27969:3:26"},"nativeSrc":"27969:18:26","nodeType":"YulFunctionCall","src":"27969:18:26"},{"arguments":[{"name":"tail","nativeSrc":"27993:4:26","nodeType":"YulIdentifier","src":"27993:4:26"},{"name":"headStart","nativeSrc":"27999:9:26","nodeType":"YulIdentifier","src":"27999:9:26"}],"functionName":{"name":"sub","nativeSrc":"27989:3:26","nodeType":"YulIdentifier","src":"27989:3:26"},"nativeSrc":"27989:20:26","nodeType":"YulFunctionCall","src":"27989:20:26"}],"functionName":{"name":"mstore","nativeSrc":"27962:6:26","nodeType":"YulIdentifier","src":"27962:6:26"},"nativeSrc":"27962:48:26","nodeType":"YulFunctionCall","src":"27962:48:26"},"nativeSrc":"27962:48:26","nodeType":"YulExpressionStatement","src":"27962:48:26"},{"nativeSrc":"28019:86:26","nodeType":"YulAssignment","src":"28019:86:26","value":{"arguments":[{"name":"value1","nativeSrc":"28091:6:26","nodeType":"YulIdentifier","src":"28091:6:26"},{"name":"tail","nativeSrc":"28100:4:26","nodeType":"YulIdentifier","src":"28100:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"28027:63:26","nodeType":"YulIdentifier","src":"28027:63:26"},"nativeSrc":"28027:78:26","nodeType":"YulFunctionCall","src":"28027:78:26"},"variableNames":[{"name":"tail","nativeSrc":"28019:4:26","nodeType":"YulIdentifier","src":"28019:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27598:514:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27728:9:26","nodeType":"YulTypedName","src":"27728:9:26","type":""},{"name":"value1","nativeSrc":"27740:6:26","nodeType":"YulTypedName","src":"27740:6:26","type":""},{"name":"value0","nativeSrc":"27748:6:26","nodeType":"YulTypedName","src":"27748:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27759:4:26","nodeType":"YulTypedName","src":"27759:4:26","type":""}],"src":"27598:514:26"},{"body":{"nativeSrc":"28224:61:26","nodeType":"YulBlock","src":"28224:61:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28246:6:26","nodeType":"YulIdentifier","src":"28246:6:26"},{"kind":"number","nativeSrc":"28254:1:26","nodeType":"YulLiteral","src":"28254:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28242:3:26","nodeType":"YulIdentifier","src":"28242:3:26"},"nativeSrc":"28242:14:26","nodeType":"YulFunctionCall","src":"28242:14:26"},{"hexValue":"50726f6a656374206e6f7420666f756e64","kind":"string","nativeSrc":"28258:19:26","nodeType":"YulLiteral","src":"28258:19:26","type":"","value":"Project not found"}],"functionName":{"name":"mstore","nativeSrc":"28235:6:26","nodeType":"YulIdentifier","src":"28235:6:26"},"nativeSrc":"28235:43:26","nodeType":"YulFunctionCall","src":"28235:43:26"},"nativeSrc":"28235:43:26","nodeType":"YulExpressionStatement","src":"28235:43:26"}]},"name":"store_literal_in_memory_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611","nativeSrc":"28118:167:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28216:6:26","nodeType":"YulTypedName","src":"28216:6:26","type":""}],"src":"28118:167:26"},{"body":{"nativeSrc":"28437:220:26","nodeType":"YulBlock","src":"28437:220:26","statements":[{"nativeSrc":"28447:74:26","nodeType":"YulAssignment","src":"28447:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"28513:3:26","nodeType":"YulIdentifier","src":"28513:3:26"},{"kind":"number","nativeSrc":"28518:2:26","nodeType":"YulLiteral","src":"28518:2:26","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28454:58:26","nodeType":"YulIdentifier","src":"28454:58:26"},"nativeSrc":"28454:67:26","nodeType":"YulFunctionCall","src":"28454:67:26"},"variableNames":[{"name":"pos","nativeSrc":"28447:3:26","nodeType":"YulIdentifier","src":"28447:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28619:3:26","nodeType":"YulIdentifier","src":"28619:3:26"}],"functionName":{"name":"store_literal_in_memory_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611","nativeSrc":"28530:88:26","nodeType":"YulIdentifier","src":"28530:88:26"},"nativeSrc":"28530:93:26","nodeType":"YulFunctionCall","src":"28530:93:26"},"nativeSrc":"28530:93:26","nodeType":"YulExpressionStatement","src":"28530:93:26"},{"nativeSrc":"28632:19:26","nodeType":"YulAssignment","src":"28632:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"28643:3:26","nodeType":"YulIdentifier","src":"28643:3:26"},{"kind":"number","nativeSrc":"28648:2:26","nodeType":"YulLiteral","src":"28648:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28639:3:26","nodeType":"YulIdentifier","src":"28639:3:26"},"nativeSrc":"28639:12:26","nodeType":"YulFunctionCall","src":"28639:12:26"},"variableNames":[{"name":"end","nativeSrc":"28632:3:26","nodeType":"YulIdentifier","src":"28632:3:26"}]}]},"name":"abi_encode_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611_to_t_string_memory_ptr_fromStack","nativeSrc":"28291:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28425:3:26","nodeType":"YulTypedName","src":"28425:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28433:3:26","nodeType":"YulTypedName","src":"28433:3:26","type":""}],"src":"28291:366:26"},{"body":{"nativeSrc":"28834:248:26","nodeType":"YulBlock","src":"28834:248:26","statements":[{"nativeSrc":"28844:26:26","nodeType":"YulAssignment","src":"28844:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"28856:9:26","nodeType":"YulIdentifier","src":"28856:9:26"},{"kind":"number","nativeSrc":"28867:2:26","nodeType":"YulLiteral","src":"28867:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28852:3:26","nodeType":"YulIdentifier","src":"28852:3:26"},"nativeSrc":"28852:18:26","nodeType":"YulFunctionCall","src":"28852:18:26"},"variableNames":[{"name":"tail","nativeSrc":"28844:4:26","nodeType":"YulIdentifier","src":"28844:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28891:9:26","nodeType":"YulIdentifier","src":"28891:9:26"},{"kind":"number","nativeSrc":"28902:1:26","nodeType":"YulLiteral","src":"28902:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28887:3:26","nodeType":"YulIdentifier","src":"28887:3:26"},"nativeSrc":"28887:17:26","nodeType":"YulFunctionCall","src":"28887:17:26"},{"arguments":[{"name":"tail","nativeSrc":"28910:4:26","nodeType":"YulIdentifier","src":"28910:4:26"},{"name":"headStart","nativeSrc":"28916:9:26","nodeType":"YulIdentifier","src":"28916:9:26"}],"functionName":{"name":"sub","nativeSrc":"28906:3:26","nodeType":"YulIdentifier","src":"28906:3:26"},"nativeSrc":"28906:20:26","nodeType":"YulFunctionCall","src":"28906:20:26"}],"functionName":{"name":"mstore","nativeSrc":"28880:6:26","nodeType":"YulIdentifier","src":"28880:6:26"},"nativeSrc":"28880:47:26","nodeType":"YulFunctionCall","src":"28880:47:26"},"nativeSrc":"28880:47:26","nodeType":"YulExpressionStatement","src":"28880:47:26"},{"nativeSrc":"28936:139:26","nodeType":"YulAssignment","src":"28936:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"29070:4:26","nodeType":"YulIdentifier","src":"29070:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611_to_t_string_memory_ptr_fromStack","nativeSrc":"28944:124:26","nodeType":"YulIdentifier","src":"28944:124:26"},"nativeSrc":"28944:131:26","nodeType":"YulFunctionCall","src":"28944:131:26"},"variableNames":[{"name":"tail","nativeSrc":"28936:4:26","nodeType":"YulIdentifier","src":"28936:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28663:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28814:9:26","nodeType":"YulTypedName","src":"28814:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28829:4:26","nodeType":"YulTypedName","src":"28829:4:26","type":""}],"src":"28663:419:26"},{"body":{"nativeSrc":"29131:190:26","nodeType":"YulBlock","src":"29131:190:26","statements":[{"nativeSrc":"29141:33:26","nodeType":"YulAssignment","src":"29141:33:26","value":{"arguments":[{"name":"value","nativeSrc":"29168:5:26","nodeType":"YulIdentifier","src":"29168:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29150:17:26","nodeType":"YulIdentifier","src":"29150:17:26"},"nativeSrc":"29150:24:26","nodeType":"YulFunctionCall","src":"29150:24:26"},"variableNames":[{"name":"value","nativeSrc":"29141:5:26","nodeType":"YulIdentifier","src":"29141:5:26"}]},{"body":{"nativeSrc":"29264:22:26","nodeType":"YulBlock","src":"29264:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"29266:16:26","nodeType":"YulIdentifier","src":"29266:16:26"},"nativeSrc":"29266:18:26","nodeType":"YulFunctionCall","src":"29266:18:26"},"nativeSrc":"29266:18:26","nodeType":"YulExpressionStatement","src":"29266:18:26"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"29189:5:26","nodeType":"YulIdentifier","src":"29189:5:26"},{"kind":"number","nativeSrc":"29196:66:26","nodeType":"YulLiteral","src":"29196:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"29186:2:26","nodeType":"YulIdentifier","src":"29186:2:26"},"nativeSrc":"29186:77:26","nodeType":"YulFunctionCall","src":"29186:77:26"},"nativeSrc":"29183:103:26","nodeType":"YulIf","src":"29183:103:26"},{"nativeSrc":"29295:20:26","nodeType":"YulAssignment","src":"29295:20:26","value":{"arguments":[{"name":"value","nativeSrc":"29306:5:26","nodeType":"YulIdentifier","src":"29306:5:26"},{"kind":"number","nativeSrc":"29313:1:26","nodeType":"YulLiteral","src":"29313:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"29302:3:26","nodeType":"YulIdentifier","src":"29302:3:26"},"nativeSrc":"29302:13:26","nodeType":"YulFunctionCall","src":"29302:13:26"},"variableNames":[{"name":"ret","nativeSrc":"29295:3:26","nodeType":"YulIdentifier","src":"29295:3:26"}]}]},"name":"increment_t_uint256","nativeSrc":"29088:233:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29117:5:26","nodeType":"YulTypedName","src":"29117:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"29127:3:26","nodeType":"YulTypedName","src":"29127:3:26","type":""}],"src":"29088:233:26"},{"body":{"nativeSrc":"29501:359:26","nodeType":"YulBlock","src":"29501:359:26","statements":[{"nativeSrc":"29511:26:26","nodeType":"YulAssignment","src":"29511:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"29523:9:26","nodeType":"YulIdentifier","src":"29523:9:26"},{"kind":"number","nativeSrc":"29534:2:26","nodeType":"YulLiteral","src":"29534:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29519:3:26","nodeType":"YulIdentifier","src":"29519:3:26"},"nativeSrc":"29519:18:26","nodeType":"YulFunctionCall","src":"29519:18:26"},"variableNames":[{"name":"tail","nativeSrc":"29511:4:26","nodeType":"YulIdentifier","src":"29511:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29591:6:26","nodeType":"YulIdentifier","src":"29591:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"29604:9:26","nodeType":"YulIdentifier","src":"29604:9:26"},{"kind":"number","nativeSrc":"29615:1:26","nodeType":"YulLiteral","src":"29615:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29600:3:26","nodeType":"YulIdentifier","src":"29600:3:26"},"nativeSrc":"29600:17:26","nodeType":"YulFunctionCall","src":"29600:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"29547:43:26","nodeType":"YulIdentifier","src":"29547:43:26"},"nativeSrc":"29547:71:26","nodeType":"YulFunctionCall","src":"29547:71:26"},"nativeSrc":"29547:71:26","nodeType":"YulExpressionStatement","src":"29547:71:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29639:9:26","nodeType":"YulIdentifier","src":"29639:9:26"},{"kind":"number","nativeSrc":"29650:2:26","nodeType":"YulLiteral","src":"29650:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29635:3:26","nodeType":"YulIdentifier","src":"29635:3:26"},"nativeSrc":"29635:18:26","nodeType":"YulFunctionCall","src":"29635:18:26"},{"arguments":[{"name":"tail","nativeSrc":"29659:4:26","nodeType":"YulIdentifier","src":"29659:4:26"},{"name":"headStart","nativeSrc":"29665:9:26","nodeType":"YulIdentifier","src":"29665:9:26"}],"functionName":{"name":"sub","nativeSrc":"29655:3:26","nodeType":"YulIdentifier","src":"29655:3:26"},"nativeSrc":"29655:20:26","nodeType":"YulFunctionCall","src":"29655:20:26"}],"functionName":{"name":"mstore","nativeSrc":"29628:6:26","nodeType":"YulIdentifier","src":"29628:6:26"},"nativeSrc":"29628:48:26","nodeType":"YulFunctionCall","src":"29628:48:26"},"nativeSrc":"29628:48:26","nodeType":"YulExpressionStatement","src":"29628:48:26"},{"nativeSrc":"29685:86:26","nodeType":"YulAssignment","src":"29685:86:26","value":{"arguments":[{"name":"value1","nativeSrc":"29757:6:26","nodeType":"YulIdentifier","src":"29757:6:26"},{"name":"tail","nativeSrc":"29766:4:26","nodeType":"YulIdentifier","src":"29766:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"29693:63:26","nodeType":"YulIdentifier","src":"29693:63:26"},"nativeSrc":"29693:78:26","nodeType":"YulFunctionCall","src":"29693:78:26"},"variableNames":[{"name":"tail","nativeSrc":"29685:4:26","nodeType":"YulIdentifier","src":"29685:4:26"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"29825:6:26","nodeType":"YulIdentifier","src":"29825:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"29838:9:26","nodeType":"YulIdentifier","src":"29838:9:26"},{"kind":"number","nativeSrc":"29849:2:26","nodeType":"YulLiteral","src":"29849:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29834:3:26","nodeType":"YulIdentifier","src":"29834:3:26"},"nativeSrc":"29834:18:26","nodeType":"YulFunctionCall","src":"29834:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29781:43:26","nodeType":"YulIdentifier","src":"29781:43:26"},"nativeSrc":"29781:72:26","nodeType":"YulFunctionCall","src":"29781:72:26"},"nativeSrc":"29781:72:26","nodeType":"YulExpressionStatement","src":"29781:72:26"}]},"name":"abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_address__to_t_bytes32_t_string_memory_ptr_t_address__fromStack_reversed","nativeSrc":"29327:533:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29457:9:26","nodeType":"YulTypedName","src":"29457:9:26","type":""},{"name":"value2","nativeSrc":"29469:6:26","nodeType":"YulTypedName","src":"29469:6:26","type":""},{"name":"value1","nativeSrc":"29477:6:26","nodeType":"YulTypedName","src":"29477:6:26","type":""},{"name":"value0","nativeSrc":"29485:6:26","nodeType":"YulTypedName","src":"29485:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29496:4:26","nodeType":"YulTypedName","src":"29496:4:26","type":""}],"src":"29327:533:26"},{"body":{"nativeSrc":"29972:71:26","nodeType":"YulBlock","src":"29972:71:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"29994:6:26","nodeType":"YulIdentifier","src":"29994:6:26"},{"kind":"number","nativeSrc":"30002:1:26","nodeType":"YulLiteral","src":"30002:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29990:3:26","nodeType":"YulIdentifier","src":"29990:3:26"},"nativeSrc":"29990:14:26","nodeType":"YulFunctionCall","src":"29990:14:26"},{"hexValue":"4f6e6c79206f776e6572206f722070726f6a656374206f776e6572","kind":"string","nativeSrc":"30006:29:26","nodeType":"YulLiteral","src":"30006:29:26","type":"","value":"Only owner or project owner"}],"functionName":{"name":"mstore","nativeSrc":"29983:6:26","nodeType":"YulIdentifier","src":"29983:6:26"},"nativeSrc":"29983:53:26","nodeType":"YulFunctionCall","src":"29983:53:26"},"nativeSrc":"29983:53:26","nodeType":"YulExpressionStatement","src":"29983:53:26"}]},"name":"store_literal_in_memory_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72","nativeSrc":"29866:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"29964:6:26","nodeType":"YulTypedName","src":"29964:6:26","type":""}],"src":"29866:177:26"},{"body":{"nativeSrc":"30195:220:26","nodeType":"YulBlock","src":"30195:220:26","statements":[{"nativeSrc":"30205:74:26","nodeType":"YulAssignment","src":"30205:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"30271:3:26","nodeType":"YulIdentifier","src":"30271:3:26"},{"kind":"number","nativeSrc":"30276:2:26","nodeType":"YulLiteral","src":"30276:2:26","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"30212:58:26","nodeType":"YulIdentifier","src":"30212:58:26"},"nativeSrc":"30212:67:26","nodeType":"YulFunctionCall","src":"30212:67:26"},"variableNames":[{"name":"pos","nativeSrc":"30205:3:26","nodeType":"YulIdentifier","src":"30205:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30377:3:26","nodeType":"YulIdentifier","src":"30377:3:26"}],"functionName":{"name":"store_literal_in_memory_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72","nativeSrc":"30288:88:26","nodeType":"YulIdentifier","src":"30288:88:26"},"nativeSrc":"30288:93:26","nodeType":"YulFunctionCall","src":"30288:93:26"},"nativeSrc":"30288:93:26","nodeType":"YulExpressionStatement","src":"30288:93:26"},{"nativeSrc":"30390:19:26","nodeType":"YulAssignment","src":"30390:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"30401:3:26","nodeType":"YulIdentifier","src":"30401:3:26"},{"kind":"number","nativeSrc":"30406:2:26","nodeType":"YulLiteral","src":"30406:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30397:3:26","nodeType":"YulIdentifier","src":"30397:3:26"},"nativeSrc":"30397:12:26","nodeType":"YulFunctionCall","src":"30397:12:26"},"variableNames":[{"name":"end","nativeSrc":"30390:3:26","nodeType":"YulIdentifier","src":"30390:3:26"}]}]},"name":"abi_encode_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72_to_t_string_memory_ptr_fromStack","nativeSrc":"30049:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30183:3:26","nodeType":"YulTypedName","src":"30183:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30191:3:26","nodeType":"YulTypedName","src":"30191:3:26","type":""}],"src":"30049:366:26"},{"body":{"nativeSrc":"30592:248:26","nodeType":"YulBlock","src":"30592:248:26","statements":[{"nativeSrc":"30602:26:26","nodeType":"YulAssignment","src":"30602:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"30614:9:26","nodeType":"YulIdentifier","src":"30614:9:26"},{"kind":"number","nativeSrc":"30625:2:26","nodeType":"YulLiteral","src":"30625:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30610:3:26","nodeType":"YulIdentifier","src":"30610:3:26"},"nativeSrc":"30610:18:26","nodeType":"YulFunctionCall","src":"30610:18:26"},"variableNames":[{"name":"tail","nativeSrc":"30602:4:26","nodeType":"YulIdentifier","src":"30602:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30649:9:26","nodeType":"YulIdentifier","src":"30649:9:26"},{"kind":"number","nativeSrc":"30660:1:26","nodeType":"YulLiteral","src":"30660:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30645:3:26","nodeType":"YulIdentifier","src":"30645:3:26"},"nativeSrc":"30645:17:26","nodeType":"YulFunctionCall","src":"30645:17:26"},{"arguments":[{"name":"tail","nativeSrc":"30668:4:26","nodeType":"YulIdentifier","src":"30668:4:26"},{"name":"headStart","nativeSrc":"30674:9:26","nodeType":"YulIdentifier","src":"30674:9:26"}],"functionName":{"name":"sub","nativeSrc":"30664:3:26","nodeType":"YulIdentifier","src":"30664:3:26"},"nativeSrc":"30664:20:26","nodeType":"YulFunctionCall","src":"30664:20:26"}],"functionName":{"name":"mstore","nativeSrc":"30638:6:26","nodeType":"YulIdentifier","src":"30638:6:26"},"nativeSrc":"30638:47:26","nodeType":"YulFunctionCall","src":"30638:47:26"},"nativeSrc":"30638:47:26","nodeType":"YulExpressionStatement","src":"30638:47:26"},{"nativeSrc":"30694:139:26","nodeType":"YulAssignment","src":"30694:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"30828:4:26","nodeType":"YulIdentifier","src":"30828:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72_to_t_string_memory_ptr_fromStack","nativeSrc":"30702:124:26","nodeType":"YulIdentifier","src":"30702:124:26"},"nativeSrc":"30702:131:26","nodeType":"YulFunctionCall","src":"30702:131:26"},"variableNames":[{"name":"tail","nativeSrc":"30694:4:26","nodeType":"YulIdentifier","src":"30694:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30421:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30572:9:26","nodeType":"YulTypedName","src":"30572:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30587:4:26","nodeType":"YulTypedName","src":"30587:4:26","type":""}],"src":"30421:419:26"},{"body":{"nativeSrc":"30972:206:26","nodeType":"YulBlock","src":"30972:206:26","statements":[{"nativeSrc":"30982:26:26","nodeType":"YulAssignment","src":"30982:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"30994:9:26","nodeType":"YulIdentifier","src":"30994:9:26"},{"kind":"number","nativeSrc":"31005:2:26","nodeType":"YulLiteral","src":"31005:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30990:3:26","nodeType":"YulIdentifier","src":"30990:3:26"},"nativeSrc":"30990:18:26","nodeType":"YulFunctionCall","src":"30990:18:26"},"variableNames":[{"name":"tail","nativeSrc":"30982:4:26","nodeType":"YulIdentifier","src":"30982:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"31062:6:26","nodeType":"YulIdentifier","src":"31062:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"31075:9:26","nodeType":"YulIdentifier","src":"31075:9:26"},{"kind":"number","nativeSrc":"31086:1:26","nodeType":"YulLiteral","src":"31086:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31071:3:26","nodeType":"YulIdentifier","src":"31071:3:26"},"nativeSrc":"31071:17:26","nodeType":"YulFunctionCall","src":"31071:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"31018:43:26","nodeType":"YulIdentifier","src":"31018:43:26"},"nativeSrc":"31018:71:26","nodeType":"YulFunctionCall","src":"31018:71:26"},"nativeSrc":"31018:71:26","nodeType":"YulExpressionStatement","src":"31018:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"31143:6:26","nodeType":"YulIdentifier","src":"31143:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"31156:9:26","nodeType":"YulIdentifier","src":"31156:9:26"},{"kind":"number","nativeSrc":"31167:2:26","nodeType":"YulLiteral","src":"31167:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31152:3:26","nodeType":"YulIdentifier","src":"31152:3:26"},"nativeSrc":"31152:18:26","nodeType":"YulFunctionCall","src":"31152:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"31099:43:26","nodeType":"YulIdentifier","src":"31099:43:26"},"nativeSrc":"31099:72:26","nodeType":"YulFunctionCall","src":"31099:72:26"},"nativeSrc":"31099:72:26","nodeType":"YulExpressionStatement","src":"31099:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"30846:332:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30936:9:26","nodeType":"YulTypedName","src":"30936:9:26","type":""},{"name":"value1","nativeSrc":"30948:6:26","nodeType":"YulTypedName","src":"30948:6:26","type":""},{"name":"value0","nativeSrc":"30956:6:26","nodeType":"YulTypedName","src":"30956:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30967:4:26","nodeType":"YulTypedName","src":"30967:4:26","type":""}],"src":"30846:332:26"},{"body":{"nativeSrc":"31244:77:26","nodeType":"YulBlock","src":"31244:77:26","statements":[{"nativeSrc":"31254:22:26","nodeType":"YulAssignment","src":"31254:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"31269:6:26","nodeType":"YulIdentifier","src":"31269:6:26"}],"functionName":{"name":"mload","nativeSrc":"31263:5:26","nodeType":"YulIdentifier","src":"31263:5:26"},"nativeSrc":"31263:13:26","nodeType":"YulFunctionCall","src":"31263:13:26"},"variableNames":[{"name":"value","nativeSrc":"31254:5:26","nodeType":"YulIdentifier","src":"31254:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"31309:5:26","nodeType":"YulIdentifier","src":"31309:5:26"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"31285:23:26","nodeType":"YulIdentifier","src":"31285:23:26"},"nativeSrc":"31285:30:26","nodeType":"YulFunctionCall","src":"31285:30:26"},"nativeSrc":"31285:30:26","nodeType":"YulExpressionStatement","src":"31285:30:26"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"31184:137:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"31222:6:26","nodeType":"YulTypedName","src":"31222:6:26","type":""},{"name":"end","nativeSrc":"31230:3:26","nodeType":"YulTypedName","src":"31230:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"31238:5:26","nodeType":"YulTypedName","src":"31238:5:26","type":""}],"src":"31184:137:26"},{"body":{"nativeSrc":"31401:271:26","nodeType":"YulBlock","src":"31401:271:26","statements":[{"body":{"nativeSrc":"31447:83:26","nodeType":"YulBlock","src":"31447:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"31449:77:26","nodeType":"YulIdentifier","src":"31449:77:26"},"nativeSrc":"31449:79:26","nodeType":"YulFunctionCall","src":"31449:79:26"},"nativeSrc":"31449:79:26","nodeType":"YulExpressionStatement","src":"31449:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"31422:7:26","nodeType":"YulIdentifier","src":"31422:7:26"},{"name":"headStart","nativeSrc":"31431:9:26","nodeType":"YulIdentifier","src":"31431:9:26"}],"functionName":{"name":"sub","nativeSrc":"31418:3:26","nodeType":"YulIdentifier","src":"31418:3:26"},"nativeSrc":"31418:23:26","nodeType":"YulFunctionCall","src":"31418:23:26"},{"kind":"number","nativeSrc":"31443:2:26","nodeType":"YulLiteral","src":"31443:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"31414:3:26","nodeType":"YulIdentifier","src":"31414:3:26"},"nativeSrc":"31414:32:26","nodeType":"YulFunctionCall","src":"31414:32:26"},"nativeSrc":"31411:119:26","nodeType":"YulIf","src":"31411:119:26"},{"nativeSrc":"31540:125:26","nodeType":"YulBlock","src":"31540:125:26","statements":[{"nativeSrc":"31555:15:26","nodeType":"YulVariableDeclaration","src":"31555:15:26","value":{"kind":"number","nativeSrc":"31569:1:26","nodeType":"YulLiteral","src":"31569:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"31559:6:26","nodeType":"YulTypedName","src":"31559:6:26","type":""}]},{"nativeSrc":"31584:71:26","nodeType":"YulAssignment","src":"31584:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31627:9:26","nodeType":"YulIdentifier","src":"31627:9:26"},{"name":"offset","nativeSrc":"31638:6:26","nodeType":"YulIdentifier","src":"31638:6:26"}],"functionName":{"name":"add","nativeSrc":"31623:3:26","nodeType":"YulIdentifier","src":"31623:3:26"},"nativeSrc":"31623:22:26","nodeType":"YulFunctionCall","src":"31623:22:26"},{"name":"dataEnd","nativeSrc":"31647:7:26","nodeType":"YulIdentifier","src":"31647:7:26"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"31594:28:26","nodeType":"YulIdentifier","src":"31594:28:26"},"nativeSrc":"31594:61:26","nodeType":"YulFunctionCall","src":"31594:61:26"},"variableNames":[{"name":"value0","nativeSrc":"31584:6:26","nodeType":"YulIdentifier","src":"31584:6:26"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"31327:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31371:9:26","nodeType":"YulTypedName","src":"31371:9:26","type":""},{"name":"dataEnd","nativeSrc":"31382:7:26","nodeType":"YulTypedName","src":"31382:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"31394:6:26","nodeType":"YulTypedName","src":"31394:6:26","type":""}],"src":"31327:345:26"},{"body":{"nativeSrc":"31784:65:26","nodeType":"YulBlock","src":"31784:65:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31806:6:26","nodeType":"YulIdentifier","src":"31806:6:26"},{"kind":"number","nativeSrc":"31814:1:26","nodeType":"YulLiteral","src":"31814:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31802:3:26","nodeType":"YulIdentifier","src":"31802:3:26"},"nativeSrc":"31802:14:26","nodeType":"YulFunctionCall","src":"31802:14:26"},{"hexValue":"496e76616c696420746f6b656e2061646472657373","kind":"string","nativeSrc":"31818:23:26","nodeType":"YulLiteral","src":"31818:23:26","type":"","value":"Invalid token address"}],"functionName":{"name":"mstore","nativeSrc":"31795:6:26","nodeType":"YulIdentifier","src":"31795:6:26"},"nativeSrc":"31795:47:26","nodeType":"YulFunctionCall","src":"31795:47:26"},"nativeSrc":"31795:47:26","nodeType":"YulExpressionStatement","src":"31795:47:26"}]},"name":"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","nativeSrc":"31678:171:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31776:6:26","nodeType":"YulTypedName","src":"31776:6:26","type":""}],"src":"31678:171:26"},{"body":{"nativeSrc":"32001:220:26","nodeType":"YulBlock","src":"32001:220:26","statements":[{"nativeSrc":"32011:74:26","nodeType":"YulAssignment","src":"32011:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"32077:3:26","nodeType":"YulIdentifier","src":"32077:3:26"},{"kind":"number","nativeSrc":"32082:2:26","nodeType":"YulLiteral","src":"32082:2:26","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32018:58:26","nodeType":"YulIdentifier","src":"32018:58:26"},"nativeSrc":"32018:67:26","nodeType":"YulFunctionCall","src":"32018:67:26"},"variableNames":[{"name":"pos","nativeSrc":"32011:3:26","nodeType":"YulIdentifier","src":"32011:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32183:3:26","nodeType":"YulIdentifier","src":"32183:3:26"}],"functionName":{"name":"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","nativeSrc":"32094:88:26","nodeType":"YulIdentifier","src":"32094:88:26"},"nativeSrc":"32094:93:26","nodeType":"YulFunctionCall","src":"32094:93:26"},"nativeSrc":"32094:93:26","nodeType":"YulExpressionStatement","src":"32094:93:26"},{"nativeSrc":"32196:19:26","nodeType":"YulAssignment","src":"32196:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"32207:3:26","nodeType":"YulIdentifier","src":"32207:3:26"},{"kind":"number","nativeSrc":"32212:2:26","nodeType":"YulLiteral","src":"32212:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32203:3:26","nodeType":"YulIdentifier","src":"32203:3:26"},"nativeSrc":"32203:12:26","nodeType":"YulFunctionCall","src":"32203:12:26"},"variableNames":[{"name":"end","nativeSrc":"32196:3:26","nodeType":"YulIdentifier","src":"32196:3:26"}]}]},"name":"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack","nativeSrc":"31855:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31989:3:26","nodeType":"YulTypedName","src":"31989:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31997:3:26","nodeType":"YulTypedName","src":"31997:3:26","type":""}],"src":"31855:366:26"},{"body":{"nativeSrc":"32398:248:26","nodeType":"YulBlock","src":"32398:248:26","statements":[{"nativeSrc":"32408:26:26","nodeType":"YulAssignment","src":"32408:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"32420:9:26","nodeType":"YulIdentifier","src":"32420:9:26"},{"kind":"number","nativeSrc":"32431:2:26","nodeType":"YulLiteral","src":"32431:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32416:3:26","nodeType":"YulIdentifier","src":"32416:3:26"},"nativeSrc":"32416:18:26","nodeType":"YulFunctionCall","src":"32416:18:26"},"variableNames":[{"name":"tail","nativeSrc":"32408:4:26","nodeType":"YulIdentifier","src":"32408:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32455:9:26","nodeType":"YulIdentifier","src":"32455:9:26"},{"kind":"number","nativeSrc":"32466:1:26","nodeType":"YulLiteral","src":"32466:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32451:3:26","nodeType":"YulIdentifier","src":"32451:3:26"},"nativeSrc":"32451:17:26","nodeType":"YulFunctionCall","src":"32451:17:26"},{"arguments":[{"name":"tail","nativeSrc":"32474:4:26","nodeType":"YulIdentifier","src":"32474:4:26"},{"name":"headStart","nativeSrc":"32480:9:26","nodeType":"YulIdentifier","src":"32480:9:26"}],"functionName":{"name":"sub","nativeSrc":"32470:3:26","nodeType":"YulIdentifier","src":"32470:3:26"},"nativeSrc":"32470:20:26","nodeType":"YulFunctionCall","src":"32470:20:26"}],"functionName":{"name":"mstore","nativeSrc":"32444:6:26","nodeType":"YulIdentifier","src":"32444:6:26"},"nativeSrc":"32444:47:26","nodeType":"YulFunctionCall","src":"32444:47:26"},"nativeSrc":"32444:47:26","nodeType":"YulExpressionStatement","src":"32444:47:26"},{"nativeSrc":"32500:139:26","nodeType":"YulAssignment","src":"32500:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"32634:4:26","nodeType":"YulIdentifier","src":"32634:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack","nativeSrc":"32508:124:26","nodeType":"YulIdentifier","src":"32508:124:26"},"nativeSrc":"32508:131:26","nodeType":"YulFunctionCall","src":"32508:131:26"},"variableNames":[{"name":"tail","nativeSrc":"32500:4:26","nodeType":"YulIdentifier","src":"32500:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32227:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32378:9:26","nodeType":"YulTypedName","src":"32378:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32393:4:26","nodeType":"YulTypedName","src":"32393:4:26","type":""}],"src":"32227:419:26"},{"body":{"nativeSrc":"32766:34:26","nodeType":"YulBlock","src":"32766:34:26","statements":[{"nativeSrc":"32776:18:26","nodeType":"YulAssignment","src":"32776:18:26","value":{"name":"pos","nativeSrc":"32791:3:26","nodeType":"YulIdentifier","src":"32791:3:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"32776:11:26","nodeType":"YulIdentifier","src":"32776:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"32652:148:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32738:3:26","nodeType":"YulTypedName","src":"32738:3:26","type":""},{"name":"length","nativeSrc":"32743:6:26","nodeType":"YulTypedName","src":"32743:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"32754:11:26","nodeType":"YulTypedName","src":"32754:11:26","type":""}],"src":"32652:148:26"},{"body":{"nativeSrc":"32916:280:26","nodeType":"YulBlock","src":"32916:280:26","statements":[{"nativeSrc":"32926:53:26","nodeType":"YulVariableDeclaration","src":"32926:53:26","value":{"arguments":[{"name":"value","nativeSrc":"32973:5:26","nodeType":"YulIdentifier","src":"32973:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"32940:32:26","nodeType":"YulIdentifier","src":"32940:32:26"},"nativeSrc":"32940:39:26","nodeType":"YulFunctionCall","src":"32940:39:26"},"variables":[{"name":"length","nativeSrc":"32930:6:26","nodeType":"YulTypedName","src":"32930:6:26","type":""}]},{"nativeSrc":"32988:96:26","nodeType":"YulAssignment","src":"32988:96:26","value":{"arguments":[{"name":"pos","nativeSrc":"33072:3:26","nodeType":"YulIdentifier","src":"33072:3:26"},{"name":"length","nativeSrc":"33077:6:26","nodeType":"YulIdentifier","src":"33077:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"32995:76:26","nodeType":"YulIdentifier","src":"32995:76:26"},"nativeSrc":"32995:89:26","nodeType":"YulFunctionCall","src":"32995:89:26"},"variableNames":[{"name":"pos","nativeSrc":"32988:3:26","nodeType":"YulIdentifier","src":"32988:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"33132:5:26","nodeType":"YulIdentifier","src":"33132:5:26"},{"kind":"number","nativeSrc":"33139:4:26","nodeType":"YulLiteral","src":"33139:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"33128:3:26","nodeType":"YulIdentifier","src":"33128:3:26"},"nativeSrc":"33128:16:26","nodeType":"YulFunctionCall","src":"33128:16:26"},{"name":"pos","nativeSrc":"33146:3:26","nodeType":"YulIdentifier","src":"33146:3:26"},{"name":"length","nativeSrc":"33151:6:26","nodeType":"YulIdentifier","src":"33151:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"33093:34:26","nodeType":"YulIdentifier","src":"33093:34:26"},"nativeSrc":"33093:65:26","nodeType":"YulFunctionCall","src":"33093:65:26"},"nativeSrc":"33093:65:26","nodeType":"YulExpressionStatement","src":"33093:65:26"},{"nativeSrc":"33167:23:26","nodeType":"YulAssignment","src":"33167:23:26","value":{"arguments":[{"name":"pos","nativeSrc":"33178:3:26","nodeType":"YulIdentifier","src":"33178:3:26"},{"name":"length","nativeSrc":"33183:6:26","nodeType":"YulIdentifier","src":"33183:6:26"}],"functionName":{"name":"add","nativeSrc":"33174:3:26","nodeType":"YulIdentifier","src":"33174:3:26"},"nativeSrc":"33174:16:26","nodeType":"YulFunctionCall","src":"33174:16:26"},"variableNames":[{"name":"end","nativeSrc":"33167:3:26","nodeType":"YulIdentifier","src":"33167:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"32806:390:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"32897:5:26","nodeType":"YulTypedName","src":"32897:5:26","type":""},{"name":"pos","nativeSrc":"32904:3:26","nodeType":"YulTypedName","src":"32904:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32912:3:26","nodeType":"YulTypedName","src":"32912:3:26","type":""}],"src":"32806:390:26"},{"body":{"nativeSrc":"33386:251:26","nodeType":"YulBlock","src":"33386:251:26","statements":[{"nativeSrc":"33397:102:26","nodeType":"YulAssignment","src":"33397:102:26","value":{"arguments":[{"name":"value0","nativeSrc":"33486:6:26","nodeType":"YulIdentifier","src":"33486:6:26"},{"name":"pos","nativeSrc":"33495:3:26","nodeType":"YulIdentifier","src":"33495:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"33404:81:26","nodeType":"YulIdentifier","src":"33404:81:26"},"nativeSrc":"33404:95:26","nodeType":"YulFunctionCall","src":"33404:95:26"},"variableNames":[{"name":"pos","nativeSrc":"33397:3:26","nodeType":"YulIdentifier","src":"33397:3:26"}]},{"nativeSrc":"33509:102:26","nodeType":"YulAssignment","src":"33509:102:26","value":{"arguments":[{"name":"value1","nativeSrc":"33598:6:26","nodeType":"YulIdentifier","src":"33598:6:26"},{"name":"pos","nativeSrc":"33607:3:26","nodeType":"YulIdentifier","src":"33607:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"33516:81:26","nodeType":"YulIdentifier","src":"33516:81:26"},"nativeSrc":"33516:95:26","nodeType":"YulFunctionCall","src":"33516:95:26"},"variableNames":[{"name":"pos","nativeSrc":"33509:3:26","nodeType":"YulIdentifier","src":"33509:3:26"}]},{"nativeSrc":"33621:10:26","nodeType":"YulAssignment","src":"33621:10:26","value":{"name":"pos","nativeSrc":"33628:3:26","nodeType":"YulIdentifier","src":"33628:3:26"},"variableNames":[{"name":"end","nativeSrc":"33621:3:26","nodeType":"YulIdentifier","src":"33621:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"33202:435:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33357:3:26","nodeType":"YulTypedName","src":"33357:3:26","type":""},{"name":"value1","nativeSrc":"33363:6:26","nodeType":"YulTypedName","src":"33363:6:26","type":""},{"name":"value0","nativeSrc":"33371:6:26","nodeType":"YulTypedName","src":"33371:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33382:3:26","nodeType":"YulTypedName","src":"33382:3:26","type":""}],"src":"33202:435:26"},{"body":{"nativeSrc":"33749:62:26","nodeType":"YulBlock","src":"33749:62:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"33771:6:26","nodeType":"YulIdentifier","src":"33771:6:26"},{"kind":"number","nativeSrc":"33779:1:26","nodeType":"YulLiteral","src":"33779:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33767:3:26","nodeType":"YulIdentifier","src":"33767:3:26"},"nativeSrc":"33767:14:26","nodeType":"YulFunctionCall","src":"33767:14:26"},{"hexValue":"45766964656e6365206e6f7420666f756e64","kind":"string","nativeSrc":"33783:20:26","nodeType":"YulLiteral","src":"33783:20:26","type":"","value":"Evidence not found"}],"functionName":{"name":"mstore","nativeSrc":"33760:6:26","nodeType":"YulIdentifier","src":"33760:6:26"},"nativeSrc":"33760:44:26","nodeType":"YulFunctionCall","src":"33760:44:26"},"nativeSrc":"33760:44:26","nodeType":"YulExpressionStatement","src":"33760:44:26"}]},"name":"store_literal_in_memory_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb","nativeSrc":"33643:168:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"33741:6:26","nodeType":"YulTypedName","src":"33741:6:26","type":""}],"src":"33643:168:26"},{"body":{"nativeSrc":"33963:220:26","nodeType":"YulBlock","src":"33963:220:26","statements":[{"nativeSrc":"33973:74:26","nodeType":"YulAssignment","src":"33973:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"34039:3:26","nodeType":"YulIdentifier","src":"34039:3:26"},{"kind":"number","nativeSrc":"34044:2:26","nodeType":"YulLiteral","src":"34044:2:26","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"33980:58:26","nodeType":"YulIdentifier","src":"33980:58:26"},"nativeSrc":"33980:67:26","nodeType":"YulFunctionCall","src":"33980:67:26"},"variableNames":[{"name":"pos","nativeSrc":"33973:3:26","nodeType":"YulIdentifier","src":"33973:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"34145:3:26","nodeType":"YulIdentifier","src":"34145:3:26"}],"functionName":{"name":"store_literal_in_memory_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb","nativeSrc":"34056:88:26","nodeType":"YulIdentifier","src":"34056:88:26"},"nativeSrc":"34056:93:26","nodeType":"YulFunctionCall","src":"34056:93:26"},"nativeSrc":"34056:93:26","nodeType":"YulExpressionStatement","src":"34056:93:26"},{"nativeSrc":"34158:19:26","nodeType":"YulAssignment","src":"34158:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"34169:3:26","nodeType":"YulIdentifier","src":"34169:3:26"},{"kind":"number","nativeSrc":"34174:2:26","nodeType":"YulLiteral","src":"34174:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34165:3:26","nodeType":"YulIdentifier","src":"34165:3:26"},"nativeSrc":"34165:12:26","nodeType":"YulFunctionCall","src":"34165:12:26"},"variableNames":[{"name":"end","nativeSrc":"34158:3:26","nodeType":"YulIdentifier","src":"34158:3:26"}]}]},"name":"abi_encode_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb_to_t_string_memory_ptr_fromStack","nativeSrc":"33817:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33951:3:26","nodeType":"YulTypedName","src":"33951:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33959:3:26","nodeType":"YulTypedName","src":"33959:3:26","type":""}],"src":"33817:366:26"},{"body":{"nativeSrc":"34360:248:26","nodeType":"YulBlock","src":"34360:248:26","statements":[{"nativeSrc":"34370:26:26","nodeType":"YulAssignment","src":"34370:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"34382:9:26","nodeType":"YulIdentifier","src":"34382:9:26"},{"kind":"number","nativeSrc":"34393:2:26","nodeType":"YulLiteral","src":"34393:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34378:3:26","nodeType":"YulIdentifier","src":"34378:3:26"},"nativeSrc":"34378:18:26","nodeType":"YulFunctionCall","src":"34378:18:26"},"variableNames":[{"name":"tail","nativeSrc":"34370:4:26","nodeType":"YulIdentifier","src":"34370:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34417:9:26","nodeType":"YulIdentifier","src":"34417:9:26"},{"kind":"number","nativeSrc":"34428:1:26","nodeType":"YulLiteral","src":"34428:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34413:3:26","nodeType":"YulIdentifier","src":"34413:3:26"},"nativeSrc":"34413:17:26","nodeType":"YulFunctionCall","src":"34413:17:26"},{"arguments":[{"name":"tail","nativeSrc":"34436:4:26","nodeType":"YulIdentifier","src":"34436:4:26"},{"name":"headStart","nativeSrc":"34442:9:26","nodeType":"YulIdentifier","src":"34442:9:26"}],"functionName":{"name":"sub","nativeSrc":"34432:3:26","nodeType":"YulIdentifier","src":"34432:3:26"},"nativeSrc":"34432:20:26","nodeType":"YulFunctionCall","src":"34432:20:26"}],"functionName":{"name":"mstore","nativeSrc":"34406:6:26","nodeType":"YulIdentifier","src":"34406:6:26"},"nativeSrc":"34406:47:26","nodeType":"YulFunctionCall","src":"34406:47:26"},"nativeSrc":"34406:47:26","nodeType":"YulExpressionStatement","src":"34406:47:26"},{"nativeSrc":"34462:139:26","nodeType":"YulAssignment","src":"34462:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"34596:4:26","nodeType":"YulIdentifier","src":"34596:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb_to_t_string_memory_ptr_fromStack","nativeSrc":"34470:124:26","nodeType":"YulIdentifier","src":"34470:124:26"},"nativeSrc":"34470:131:26","nodeType":"YulFunctionCall","src":"34470:131:26"},"variableNames":[{"name":"tail","nativeSrc":"34462:4:26","nodeType":"YulIdentifier","src":"34462:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"34189:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"34340:9:26","nodeType":"YulTypedName","src":"34340:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"34355:4:26","nodeType":"YulTypedName","src":"34355:4:26","type":""}],"src":"34189:419:26"},{"body":{"nativeSrc":"34720:60:26","nodeType":"YulBlock","src":"34720:60:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34742:6:26","nodeType":"YulIdentifier","src":"34742:6:26"},{"kind":"number","nativeSrc":"34750:1:26","nodeType":"YulLiteral","src":"34750:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34738:3:26","nodeType":"YulIdentifier","src":"34738:3:26"},"nativeSrc":"34738:14:26","nodeType":"YulFunctionCall","src":"34738:14:26"},{"hexValue":"416c7265616479207665726966696564","kind":"string","nativeSrc":"34754:18:26","nodeType":"YulLiteral","src":"34754:18:26","type":"","value":"Already verified"}],"functionName":{"name":"mstore","nativeSrc":"34731:6:26","nodeType":"YulIdentifier","src":"34731:6:26"},"nativeSrc":"34731:42:26","nodeType":"YulFunctionCall","src":"34731:42:26"},"nativeSrc":"34731:42:26","nodeType":"YulExpressionStatement","src":"34731:42:26"}]},"name":"store_literal_in_memory_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","nativeSrc":"34614:166:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"34712:6:26","nodeType":"YulTypedName","src":"34712:6:26","type":""}],"src":"34614:166:26"},{"body":{"nativeSrc":"34932:220:26","nodeType":"YulBlock","src":"34932:220:26","statements":[{"nativeSrc":"34942:74:26","nodeType":"YulAssignment","src":"34942:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"35008:3:26","nodeType":"YulIdentifier","src":"35008:3:26"},{"kind":"number","nativeSrc":"35013:2:26","nodeType":"YulLiteral","src":"35013:2:26","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34949:58:26","nodeType":"YulIdentifier","src":"34949:58:26"},"nativeSrc":"34949:67:26","nodeType":"YulFunctionCall","src":"34949:67:26"},"variableNames":[{"name":"pos","nativeSrc":"34942:3:26","nodeType":"YulIdentifier","src":"34942:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"35114:3:26","nodeType":"YulIdentifier","src":"35114:3:26"}],"functionName":{"name":"store_literal_in_memory_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","nativeSrc":"35025:88:26","nodeType":"YulIdentifier","src":"35025:88:26"},"nativeSrc":"35025:93:26","nodeType":"YulFunctionCall","src":"35025:93:26"},"nativeSrc":"35025:93:26","nodeType":"YulExpressionStatement","src":"35025:93:26"},{"nativeSrc":"35127:19:26","nodeType":"YulAssignment","src":"35127:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"35138:3:26","nodeType":"YulIdentifier","src":"35138:3:26"},{"kind":"number","nativeSrc":"35143:2:26","nodeType":"YulLiteral","src":"35143:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35134:3:26","nodeType":"YulIdentifier","src":"35134:3:26"},"nativeSrc":"35134:12:26","nodeType":"YulFunctionCall","src":"35134:12:26"},"variableNames":[{"name":"end","nativeSrc":"35127:3:26","nodeType":"YulIdentifier","src":"35127:3:26"}]}]},"name":"abi_encode_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5_to_t_string_memory_ptr_fromStack","nativeSrc":"34786:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34920:3:26","nodeType":"YulTypedName","src":"34920:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34928:3:26","nodeType":"YulTypedName","src":"34928:3:26","type":""}],"src":"34786:366:26"},{"body":{"nativeSrc":"35329:248:26","nodeType":"YulBlock","src":"35329:248:26","statements":[{"nativeSrc":"35339:26:26","nodeType":"YulAssignment","src":"35339:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"35351:9:26","nodeType":"YulIdentifier","src":"35351:9:26"},{"kind":"number","nativeSrc":"35362:2:26","nodeType":"YulLiteral","src":"35362:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35347:3:26","nodeType":"YulIdentifier","src":"35347:3:26"},"nativeSrc":"35347:18:26","nodeType":"YulFunctionCall","src":"35347:18:26"},"variableNames":[{"name":"tail","nativeSrc":"35339:4:26","nodeType":"YulIdentifier","src":"35339:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35386:9:26","nodeType":"YulIdentifier","src":"35386:9:26"},{"kind":"number","nativeSrc":"35397:1:26","nodeType":"YulLiteral","src":"35397:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35382:3:26","nodeType":"YulIdentifier","src":"35382:3:26"},"nativeSrc":"35382:17:26","nodeType":"YulFunctionCall","src":"35382:17:26"},{"arguments":[{"name":"tail","nativeSrc":"35405:4:26","nodeType":"YulIdentifier","src":"35405:4:26"},{"name":"headStart","nativeSrc":"35411:9:26","nodeType":"YulIdentifier","src":"35411:9:26"}],"functionName":{"name":"sub","nativeSrc":"35401:3:26","nodeType":"YulIdentifier","src":"35401:3:26"},"nativeSrc":"35401:20:26","nodeType":"YulFunctionCall","src":"35401:20:26"}],"functionName":{"name":"mstore","nativeSrc":"35375:6:26","nodeType":"YulIdentifier","src":"35375:6:26"},"nativeSrc":"35375:47:26","nodeType":"YulFunctionCall","src":"35375:47:26"},"nativeSrc":"35375:47:26","nodeType":"YulExpressionStatement","src":"35375:47:26"},{"nativeSrc":"35431:139:26","nodeType":"YulAssignment","src":"35431:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"35565:4:26","nodeType":"YulIdentifier","src":"35565:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5_to_t_string_memory_ptr_fromStack","nativeSrc":"35439:124:26","nodeType":"YulIdentifier","src":"35439:124:26"},"nativeSrc":"35439:131:26","nodeType":"YulFunctionCall","src":"35439:131:26"},"variableNames":[{"name":"tail","nativeSrc":"35431:4:26","nodeType":"YulIdentifier","src":"35431:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35158:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35309:9:26","nodeType":"YulTypedName","src":"35309:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35324:4:26","nodeType":"YulTypedName","src":"35324:4:26","type":""}],"src":"35158:419:26"},{"body":{"nativeSrc":"35689:64:26","nodeType":"YulBlock","src":"35689:64:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35711:6:26","nodeType":"YulIdentifier","src":"35711:6:26"},{"kind":"number","nativeSrc":"35719:1:26","nodeType":"YulLiteral","src":"35719:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35707:3:26","nodeType":"YulIdentifier","src":"35707:3:26"},"nativeSrc":"35707:14:26","nodeType":"YulFunctionCall","src":"35707:14:26"},{"hexValue":"436172626f6e20746f6b656e206e6f7420736574","kind":"string","nativeSrc":"35723:22:26","nodeType":"YulLiteral","src":"35723:22:26","type":"","value":"Carbon token not set"}],"functionName":{"name":"mstore","nativeSrc":"35700:6:26","nodeType":"YulIdentifier","src":"35700:6:26"},"nativeSrc":"35700:46:26","nodeType":"YulFunctionCall","src":"35700:46:26"},"nativeSrc":"35700:46:26","nodeType":"YulExpressionStatement","src":"35700:46:26"}]},"name":"store_literal_in_memory_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f","nativeSrc":"35583:170:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"35681:6:26","nodeType":"YulTypedName","src":"35681:6:26","type":""}],"src":"35583:170:26"},{"body":{"nativeSrc":"35905:220:26","nodeType":"YulBlock","src":"35905:220:26","statements":[{"nativeSrc":"35915:74:26","nodeType":"YulAssignment","src":"35915:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"35981:3:26","nodeType":"YulIdentifier","src":"35981:3:26"},{"kind":"number","nativeSrc":"35986:2:26","nodeType":"YulLiteral","src":"35986:2:26","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35922:58:26","nodeType":"YulIdentifier","src":"35922:58:26"},"nativeSrc":"35922:67:26","nodeType":"YulFunctionCall","src":"35922:67:26"},"variableNames":[{"name":"pos","nativeSrc":"35915:3:26","nodeType":"YulIdentifier","src":"35915:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"36087:3:26","nodeType":"YulIdentifier","src":"36087:3:26"}],"functionName":{"name":"store_literal_in_memory_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f","nativeSrc":"35998:88:26","nodeType":"YulIdentifier","src":"35998:88:26"},"nativeSrc":"35998:93:26","nodeType":"YulFunctionCall","src":"35998:93:26"},"nativeSrc":"35998:93:26","nodeType":"YulExpressionStatement","src":"35998:93:26"},{"nativeSrc":"36100:19:26","nodeType":"YulAssignment","src":"36100:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"36111:3:26","nodeType":"YulIdentifier","src":"36111:3:26"},{"kind":"number","nativeSrc":"36116:2:26","nodeType":"YulLiteral","src":"36116:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36107:3:26","nodeType":"YulIdentifier","src":"36107:3:26"},"nativeSrc":"36107:12:26","nodeType":"YulFunctionCall","src":"36107:12:26"},"variableNames":[{"name":"end","nativeSrc":"36100:3:26","nodeType":"YulIdentifier","src":"36100:3:26"}]}]},"name":"abi_encode_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f_to_t_string_memory_ptr_fromStack","nativeSrc":"35759:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35893:3:26","nodeType":"YulTypedName","src":"35893:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35901:3:26","nodeType":"YulTypedName","src":"35901:3:26","type":""}],"src":"35759:366:26"},{"body":{"nativeSrc":"36302:248:26","nodeType":"YulBlock","src":"36302:248:26","statements":[{"nativeSrc":"36312:26:26","nodeType":"YulAssignment","src":"36312:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"36324:9:26","nodeType":"YulIdentifier","src":"36324:9:26"},{"kind":"number","nativeSrc":"36335:2:26","nodeType":"YulLiteral","src":"36335:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36320:3:26","nodeType":"YulIdentifier","src":"36320:3:26"},"nativeSrc":"36320:18:26","nodeType":"YulFunctionCall","src":"36320:18:26"},"variableNames":[{"name":"tail","nativeSrc":"36312:4:26","nodeType":"YulIdentifier","src":"36312:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36359:9:26","nodeType":"YulIdentifier","src":"36359:9:26"},{"kind":"number","nativeSrc":"36370:1:26","nodeType":"YulLiteral","src":"36370:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36355:3:26","nodeType":"YulIdentifier","src":"36355:3:26"},"nativeSrc":"36355:17:26","nodeType":"YulFunctionCall","src":"36355:17:26"},{"arguments":[{"name":"tail","nativeSrc":"36378:4:26","nodeType":"YulIdentifier","src":"36378:4:26"},{"name":"headStart","nativeSrc":"36384:9:26","nodeType":"YulIdentifier","src":"36384:9:26"}],"functionName":{"name":"sub","nativeSrc":"36374:3:26","nodeType":"YulIdentifier","src":"36374:3:26"},"nativeSrc":"36374:20:26","nodeType":"YulFunctionCall","src":"36374:20:26"}],"functionName":{"name":"mstore","nativeSrc":"36348:6:26","nodeType":"YulIdentifier","src":"36348:6:26"},"nativeSrc":"36348:47:26","nodeType":"YulFunctionCall","src":"36348:47:26"},"nativeSrc":"36348:47:26","nodeType":"YulExpressionStatement","src":"36348:47:26"},{"nativeSrc":"36404:139:26","nodeType":"YulAssignment","src":"36404:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"36538:4:26","nodeType":"YulIdentifier","src":"36538:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f_to_t_string_memory_ptr_fromStack","nativeSrc":"36412:124:26","nodeType":"YulIdentifier","src":"36412:124:26"},"nativeSrc":"36412:131:26","nodeType":"YulFunctionCall","src":"36412:131:26"},"variableNames":[{"name":"tail","nativeSrc":"36404:4:26","nodeType":"YulIdentifier","src":"36404:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"36131:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36282:9:26","nodeType":"YulTypedName","src":"36282:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36297:4:26","nodeType":"YulTypedName","src":"36297:4:26","type":""}],"src":"36131:419:26"},{"body":{"nativeSrc":"36614:40:26","nodeType":"YulBlock","src":"36614:40:26","statements":[{"nativeSrc":"36625:22:26","nodeType":"YulAssignment","src":"36625:22:26","value":{"arguments":[{"name":"value","nativeSrc":"36641:5:26","nodeType":"YulIdentifier","src":"36641:5:26"}],"functionName":{"name":"mload","nativeSrc":"36635:5:26","nodeType":"YulIdentifier","src":"36635:5:26"},"nativeSrc":"36635:12:26","nodeType":"YulFunctionCall","src":"36635:12:26"},"variableNames":[{"name":"length","nativeSrc":"36625:6:26","nodeType":"YulIdentifier","src":"36625:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"36556:98:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36597:5:26","nodeType":"YulTypedName","src":"36597:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"36607:6:26","nodeType":"YulTypedName","src":"36607:6:26","type":""}],"src":"36556:98:26"},{"body":{"nativeSrc":"36755:73:26","nodeType":"YulBlock","src":"36755:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"36772:3:26","nodeType":"YulIdentifier","src":"36772:3:26"},{"name":"length","nativeSrc":"36777:6:26","nodeType":"YulIdentifier","src":"36777:6:26"}],"functionName":{"name":"mstore","nativeSrc":"36765:6:26","nodeType":"YulIdentifier","src":"36765:6:26"},"nativeSrc":"36765:19:26","nodeType":"YulFunctionCall","src":"36765:19:26"},"nativeSrc":"36765:19:26","nodeType":"YulExpressionStatement","src":"36765:19:26"},{"nativeSrc":"36793:29:26","nodeType":"YulAssignment","src":"36793:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"36812:3:26","nodeType":"YulIdentifier","src":"36812:3:26"},{"kind":"number","nativeSrc":"36817:4:26","nodeType":"YulLiteral","src":"36817:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"36808:3:26","nodeType":"YulIdentifier","src":"36808:3:26"},"nativeSrc":"36808:14:26","nodeType":"YulFunctionCall","src":"36808:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"36793:11:26","nodeType":"YulIdentifier","src":"36793:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"36660:168:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"36727:3:26","nodeType":"YulTypedName","src":"36727:3:26","type":""},{"name":"length","nativeSrc":"36732:6:26","nodeType":"YulTypedName","src":"36732:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"36743:11:26","nodeType":"YulTypedName","src":"36743:11:26","type":""}],"src":"36660:168:26"},{"body":{"nativeSrc":"36924:283:26","nodeType":"YulBlock","src":"36924:283:26","statements":[{"nativeSrc":"36934:52:26","nodeType":"YulVariableDeclaration","src":"36934:52:26","value":{"arguments":[{"name":"value","nativeSrc":"36980:5:26","nodeType":"YulIdentifier","src":"36980:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"36948:31:26","nodeType":"YulIdentifier","src":"36948:31:26"},"nativeSrc":"36948:38:26","nodeType":"YulFunctionCall","src":"36948:38:26"},"variables":[{"name":"length","nativeSrc":"36938:6:26","nodeType":"YulTypedName","src":"36938:6:26","type":""}]},{"nativeSrc":"36995:77:26","nodeType":"YulAssignment","src":"36995:77:26","value":{"arguments":[{"name":"pos","nativeSrc":"37060:3:26","nodeType":"YulIdentifier","src":"37060:3:26"},{"name":"length","nativeSrc":"37065:6:26","nodeType":"YulIdentifier","src":"37065:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"37002:57:26","nodeType":"YulIdentifier","src":"37002:57:26"},"nativeSrc":"37002:70:26","nodeType":"YulFunctionCall","src":"37002:70:26"},"variableNames":[{"name":"pos","nativeSrc":"36995:3:26","nodeType":"YulIdentifier","src":"36995:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"37120:5:26","nodeType":"YulIdentifier","src":"37120:5:26"},{"kind":"number","nativeSrc":"37127:4:26","nodeType":"YulLiteral","src":"37127:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"37116:3:26","nodeType":"YulIdentifier","src":"37116:3:26"},"nativeSrc":"37116:16:26","nodeType":"YulFunctionCall","src":"37116:16:26"},{"name":"pos","nativeSrc":"37134:3:26","nodeType":"YulIdentifier","src":"37134:3:26"},{"name":"length","nativeSrc":"37139:6:26","nodeType":"YulIdentifier","src":"37139:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"37081:34:26","nodeType":"YulIdentifier","src":"37081:34:26"},"nativeSrc":"37081:65:26","nodeType":"YulFunctionCall","src":"37081:65:26"},"nativeSrc":"37081:65:26","nodeType":"YulExpressionStatement","src":"37081:65:26"},{"nativeSrc":"37155:46:26","nodeType":"YulAssignment","src":"37155:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"37166:3:26","nodeType":"YulIdentifier","src":"37166:3:26"},{"arguments":[{"name":"length","nativeSrc":"37193:6:26","nodeType":"YulIdentifier","src":"37193:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"37171:21:26","nodeType":"YulIdentifier","src":"37171:21:26"},"nativeSrc":"37171:29:26","nodeType":"YulFunctionCall","src":"37171:29:26"}],"functionName":{"name":"add","nativeSrc":"37162:3:26","nodeType":"YulIdentifier","src":"37162:3:26"},"nativeSrc":"37162:39:26","nodeType":"YulFunctionCall","src":"37162:39:26"},"variableNames":[{"name":"end","nativeSrc":"37155:3:26","nodeType":"YulIdentifier","src":"37155:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"36834:373:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36905:5:26","nodeType":"YulTypedName","src":"36905:5:26","type":""},{"name":"pos","nativeSrc":"36912:3:26","nodeType":"YulTypedName","src":"36912:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"36920:3:26","nodeType":"YulTypedName","src":"36920:3:26","type":""}],"src":"36834:373:26"},{"body":{"nativeSrc":"37413:440:26","nodeType":"YulBlock","src":"37413:440:26","statements":[{"nativeSrc":"37423:27:26","nodeType":"YulAssignment","src":"37423:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"37435:9:26","nodeType":"YulIdentifier","src":"37435:9:26"},{"kind":"number","nativeSrc":"37446:3:26","nodeType":"YulLiteral","src":"37446:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"37431:3:26","nodeType":"YulIdentifier","src":"37431:3:26"},"nativeSrc":"37431:19:26","nodeType":"YulFunctionCall","src":"37431:19:26"},"variableNames":[{"name":"tail","nativeSrc":"37423:4:26","nodeType":"YulIdentifier","src":"37423:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"37504:6:26","nodeType":"YulIdentifier","src":"37504:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"37517:9:26","nodeType":"YulIdentifier","src":"37517:9:26"},{"kind":"number","nativeSrc":"37528:1:26","nodeType":"YulLiteral","src":"37528:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37513:3:26","nodeType":"YulIdentifier","src":"37513:3:26"},"nativeSrc":"37513:17:26","nodeType":"YulFunctionCall","src":"37513:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"37460:43:26","nodeType":"YulIdentifier","src":"37460:43:26"},"nativeSrc":"37460:71:26","nodeType":"YulFunctionCall","src":"37460:71:26"},"nativeSrc":"37460:71:26","nodeType":"YulExpressionStatement","src":"37460:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"37585:6:26","nodeType":"YulIdentifier","src":"37585:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"37598:9:26","nodeType":"YulIdentifier","src":"37598:9:26"},{"kind":"number","nativeSrc":"37609:2:26","nodeType":"YulLiteral","src":"37609:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37594:3:26","nodeType":"YulIdentifier","src":"37594:3:26"},"nativeSrc":"37594:18:26","nodeType":"YulFunctionCall","src":"37594:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"37541:43:26","nodeType":"YulIdentifier","src":"37541:43:26"},"nativeSrc":"37541:72:26","nodeType":"YulFunctionCall","src":"37541:72:26"},"nativeSrc":"37541:72:26","nodeType":"YulExpressionStatement","src":"37541:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"37667:6:26","nodeType":"YulIdentifier","src":"37667:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"37680:9:26","nodeType":"YulIdentifier","src":"37680:9:26"},{"kind":"number","nativeSrc":"37691:2:26","nodeType":"YulLiteral","src":"37691:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37676:3:26","nodeType":"YulIdentifier","src":"37676:3:26"},"nativeSrc":"37676:18:26","nodeType":"YulFunctionCall","src":"37676:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37623:43:26","nodeType":"YulIdentifier","src":"37623:43:26"},"nativeSrc":"37623:72:26","nodeType":"YulFunctionCall","src":"37623:72:26"},"nativeSrc":"37623:72:26","nodeType":"YulExpressionStatement","src":"37623:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37716:9:26","nodeType":"YulIdentifier","src":"37716:9:26"},{"kind":"number","nativeSrc":"37727:2:26","nodeType":"YulLiteral","src":"37727:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"37712:3:26","nodeType":"YulIdentifier","src":"37712:3:26"},"nativeSrc":"37712:18:26","nodeType":"YulFunctionCall","src":"37712:18:26"},{"arguments":[{"name":"tail","nativeSrc":"37736:4:26","nodeType":"YulIdentifier","src":"37736:4:26"},{"name":"headStart","nativeSrc":"37742:9:26","nodeType":"YulIdentifier","src":"37742:9:26"}],"functionName":{"name":"sub","nativeSrc":"37732:3:26","nodeType":"YulIdentifier","src":"37732:3:26"},"nativeSrc":"37732:20:26","nodeType":"YulFunctionCall","src":"37732:20:26"}],"functionName":{"name":"mstore","nativeSrc":"37705:6:26","nodeType":"YulIdentifier","src":"37705:6:26"},"nativeSrc":"37705:48:26","nodeType":"YulFunctionCall","src":"37705:48:26"},"nativeSrc":"37705:48:26","nodeType":"YulExpressionStatement","src":"37705:48:26"},{"nativeSrc":"37762:84:26","nodeType":"YulAssignment","src":"37762:84:26","value":{"arguments":[{"name":"value3","nativeSrc":"37832:6:26","nodeType":"YulIdentifier","src":"37832:6:26"},{"name":"tail","nativeSrc":"37841:4:26","nodeType":"YulIdentifier","src":"37841:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"37770:61:26","nodeType":"YulIdentifier","src":"37770:61:26"},"nativeSrc":"37770:76:26","nodeType":"YulFunctionCall","src":"37770:76:26"},"variableNames":[{"name":"tail","nativeSrc":"37762:4:26","nodeType":"YulIdentifier","src":"37762:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"37213:640:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37361:9:26","nodeType":"YulTypedName","src":"37361:9:26","type":""},{"name":"value3","nativeSrc":"37373:6:26","nodeType":"YulTypedName","src":"37373:6:26","type":""},{"name":"value2","nativeSrc":"37381:6:26","nodeType":"YulTypedName","src":"37381:6:26","type":""},{"name":"value1","nativeSrc":"37389:6:26","nodeType":"YulTypedName","src":"37389:6:26","type":""},{"name":"value0","nativeSrc":"37397:6:26","nodeType":"YulTypedName","src":"37397:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37408:4:26","nodeType":"YulTypedName","src":"37408:4:26","type":""}],"src":"37213:640:26"},{"body":{"nativeSrc":"37921:79:26","nodeType":"YulBlock","src":"37921:79:26","statements":[{"nativeSrc":"37931:22:26","nodeType":"YulAssignment","src":"37931:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"37946:6:26","nodeType":"YulIdentifier","src":"37946:6:26"}],"functionName":{"name":"mload","nativeSrc":"37940:5:26","nodeType":"YulIdentifier","src":"37940:5:26"},"nativeSrc":"37940:13:26","nodeType":"YulFunctionCall","src":"37940:13:26"},"variableNames":[{"name":"value","nativeSrc":"37931:5:26","nodeType":"YulIdentifier","src":"37931:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"37988:5:26","nodeType":"YulIdentifier","src":"37988:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"37962:25:26","nodeType":"YulIdentifier","src":"37962:25:26"},"nativeSrc":"37962:32:26","nodeType":"YulFunctionCall","src":"37962:32:26"},"nativeSrc":"37962:32:26","nodeType":"YulExpressionStatement","src":"37962:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"37859:141:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"37899:6:26","nodeType":"YulTypedName","src":"37899:6:26","type":""},{"name":"end","nativeSrc":"37907:3:26","nodeType":"YulTypedName","src":"37907:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"37915:5:26","nodeType":"YulTypedName","src":"37915:5:26","type":""}],"src":"37859:141:26"},{"body":{"nativeSrc":"38082:273:26","nodeType":"YulBlock","src":"38082:273:26","statements":[{"body":{"nativeSrc":"38128:83:26","nodeType":"YulBlock","src":"38128:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"38130:77:26","nodeType":"YulIdentifier","src":"38130:77:26"},"nativeSrc":"38130:79:26","nodeType":"YulFunctionCall","src":"38130:79:26"},"nativeSrc":"38130:79:26","nodeType":"YulExpressionStatement","src":"38130:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"38103:7:26","nodeType":"YulIdentifier","src":"38103:7:26"},{"name":"headStart","nativeSrc":"38112:9:26","nodeType":"YulIdentifier","src":"38112:9:26"}],"functionName":{"name":"sub","nativeSrc":"38099:3:26","nodeType":"YulIdentifier","src":"38099:3:26"},"nativeSrc":"38099:23:26","nodeType":"YulFunctionCall","src":"38099:23:26"},{"kind":"number","nativeSrc":"38124:2:26","nodeType":"YulLiteral","src":"38124:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"38095:3:26","nodeType":"YulIdentifier","src":"38095:3:26"},"nativeSrc":"38095:32:26","nodeType":"YulFunctionCall","src":"38095:32:26"},"nativeSrc":"38092:119:26","nodeType":"YulIf","src":"38092:119:26"},{"nativeSrc":"38221:127:26","nodeType":"YulBlock","src":"38221:127:26","statements":[{"nativeSrc":"38236:15:26","nodeType":"YulVariableDeclaration","src":"38236:15:26","value":{"kind":"number","nativeSrc":"38250:1:26","nodeType":"YulLiteral","src":"38250:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"38240:6:26","nodeType":"YulTypedName","src":"38240:6:26","type":""}]},{"nativeSrc":"38265:73:26","nodeType":"YulAssignment","src":"38265:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38310:9:26","nodeType":"YulIdentifier","src":"38310:9:26"},{"name":"offset","nativeSrc":"38321:6:26","nodeType":"YulIdentifier","src":"38321:6:26"}],"functionName":{"name":"add","nativeSrc":"38306:3:26","nodeType":"YulIdentifier","src":"38306:3:26"},"nativeSrc":"38306:22:26","nodeType":"YulFunctionCall","src":"38306:22:26"},{"name":"dataEnd","nativeSrc":"38330:7:26","nodeType":"YulIdentifier","src":"38330:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"38275:30:26","nodeType":"YulIdentifier","src":"38275:30:26"},"nativeSrc":"38275:63:26","nodeType":"YulFunctionCall","src":"38275:63:26"},"variableNames":[{"name":"value0","nativeSrc":"38265:6:26","nodeType":"YulIdentifier","src":"38265:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"38006:349:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38052:9:26","nodeType":"YulTypedName","src":"38052:9:26","type":""},{"name":"dataEnd","nativeSrc":"38063:7:26","nodeType":"YulTypedName","src":"38063:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"38075:6:26","nodeType":"YulTypedName","src":"38075:6:26","type":""}],"src":"38006:349:26"},{"body":{"nativeSrc":"38487:206:26","nodeType":"YulBlock","src":"38487:206:26","statements":[{"nativeSrc":"38497:26:26","nodeType":"YulAssignment","src":"38497:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"38509:9:26","nodeType":"YulIdentifier","src":"38509:9:26"},{"kind":"number","nativeSrc":"38520:2:26","nodeType":"YulLiteral","src":"38520:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"38505:3:26","nodeType":"YulIdentifier","src":"38505:3:26"},"nativeSrc":"38505:18:26","nodeType":"YulFunctionCall","src":"38505:18:26"},"variableNames":[{"name":"tail","nativeSrc":"38497:4:26","nodeType":"YulIdentifier","src":"38497:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"38577:6:26","nodeType":"YulIdentifier","src":"38577:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"38590:9:26","nodeType":"YulIdentifier","src":"38590:9:26"},{"kind":"number","nativeSrc":"38601:1:26","nodeType":"YulLiteral","src":"38601:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38586:3:26","nodeType":"YulIdentifier","src":"38586:3:26"},"nativeSrc":"38586:17:26","nodeType":"YulFunctionCall","src":"38586:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"38533:43:26","nodeType":"YulIdentifier","src":"38533:43:26"},"nativeSrc":"38533:71:26","nodeType":"YulFunctionCall","src":"38533:71:26"},"nativeSrc":"38533:71:26","nodeType":"YulExpressionStatement","src":"38533:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"38658:6:26","nodeType":"YulIdentifier","src":"38658:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"38671:9:26","nodeType":"YulIdentifier","src":"38671:9:26"},{"kind":"number","nativeSrc":"38682:2:26","nodeType":"YulLiteral","src":"38682:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38667:3:26","nodeType":"YulIdentifier","src":"38667:3:26"},"nativeSrc":"38667:18:26","nodeType":"YulFunctionCall","src":"38667:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"38614:43:26","nodeType":"YulIdentifier","src":"38614:43:26"},"nativeSrc":"38614:72:26","nodeType":"YulFunctionCall","src":"38614:72:26"},"nativeSrc":"38614:72:26","nodeType":"YulExpressionStatement","src":"38614:72:26"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"38361:332:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38451:9:26","nodeType":"YulTypedName","src":"38451:9:26","type":""},{"name":"value1","nativeSrc":"38463:6:26","nodeType":"YulTypedName","src":"38463:6:26","type":""},{"name":"value0","nativeSrc":"38471:6:26","nodeType":"YulTypedName","src":"38471:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38482:4:26","nodeType":"YulTypedName","src":"38482:4:26","type":""}],"src":"38361:332:26"},{"body":{"nativeSrc":"38727:152:26","nodeType":"YulBlock","src":"38727:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"38744:1:26","nodeType":"YulLiteral","src":"38744:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"38747:77:26","nodeType":"YulLiteral","src":"38747:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"38737:6:26","nodeType":"YulIdentifier","src":"38737:6:26"},"nativeSrc":"38737:88:26","nodeType":"YulFunctionCall","src":"38737:88:26"},"nativeSrc":"38737:88:26","nodeType":"YulExpressionStatement","src":"38737:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"38841:1:26","nodeType":"YulLiteral","src":"38841:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"38844:4:26","nodeType":"YulLiteral","src":"38844:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"38834:6:26","nodeType":"YulIdentifier","src":"38834:6:26"},"nativeSrc":"38834:15:26","nodeType":"YulFunctionCall","src":"38834:15:26"},"nativeSrc":"38834:15:26","nodeType":"YulExpressionStatement","src":"38834:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"38865:1:26","nodeType":"YulLiteral","src":"38865:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"38868:4:26","nodeType":"YulLiteral","src":"38868:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"38858:6:26","nodeType":"YulIdentifier","src":"38858:6:26"},"nativeSrc":"38858:15:26","nodeType":"YulFunctionCall","src":"38858:15:26"},"nativeSrc":"38858:15:26","nodeType":"YulExpressionStatement","src":"38858:15:26"}]},"name":"panic_error_0x12","nativeSrc":"38699:180:26","nodeType":"YulFunctionDefinition","src":"38699:180:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_bool_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_bool_t_uint256_t_uint256__to_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CarbonToken_$7790_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CarbonToken_$7790_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CarbonToken_$7790_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CarbonToken_$7790__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CarbonToken_$7790_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_boolt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner address required\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a6f61ae6b7b0cc94845e726c32848f6c7f57c83b50357dbb5c8ccbc0275003a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611(memPtr) {\n\n        mstore(add(memPtr, 0), \"Project not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8162328626e260fc250c13894924c7a55dbe0d4a394e9072c0c37a860e95611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_address__to_t_bytes32_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner or project owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c79eefb8b0fb1427306c2e45c14c011622c8e84841f5bd52a37b3b5db6f2e72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Evidence not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_493ff129f49fa22bd5a28d79ce00b8f03c9b750453d22b39992c95bff034d5fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already verified\")\n\n    }\n\n    function abi_encode_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Carbon token not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b62251a6e1786ea67bc41d7521c2ba327239b3b06a0c045321187d97ddb1173f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102345760003560e01c80639000b3d61161012e578063c87b56dd116100ab578063e7705db61161006f578063e7705db6146108b9578063e985e9c5146108e4578063f0f3f2c814610921578063f2fde38b14610964578063f7f7229e1461098d57610235565b8063c87b56dd146107aa578063c956f143146107e7578063ca2dfd0a1461082a578063d547741f14610853578063e4a49b461461087c57610235565b8063a217fddf116100f2578063a217fddf146106db578063a22cb46514610706578063b2118a8d1461072f578063b88d4fde14610758578063c6bdee611461078157610235565b80639000b3d6146105f657806391546c341461061f57806391d148541461064857806395d89b41146106855780639c361e4e146106b057610235565b806336568abe116101bc578063715018a611610180578063715018a61461050f57806380aba8fe1461052657806382a71ef21461056357806383f8187c1461058e5780638da5cb5b146105cb57610235565b806336568abe1461041a57806340c808521461044357806342842e0e1461046c5780636352211e1461049557806370a08231146104d257610235565b8063107046bd11610203578063107046bd1461030557806323b872dd14610348578063248a9ca3146103715780632e4546cd146103ae5780632f2ff15d146103f157610235565b806301ffc9a71461023757806306fdde0314610274578063081812fc1461029f578063095ea7b3146102dc57610235565b5b005b34801561024357600080fd5b5061025e600480360381019061025991906139ad565b6109b6565b60405161026b91906139f5565b60405180910390f35b34801561028057600080fd5b506102896109c8565b6040516102969190613aa0565b60405180910390f35b3480156102ab57600080fd5b506102c660048036038101906102c19190613af8565b610a5a565b6040516102d39190613b66565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe9190613bad565b610a76565b005b34801561031157600080fd5b5061032c60048036038101906103279190613af8565b610a8c565b60405161033f9796959493929190613bfc565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190613c80565b610c93565b005b34801561037d57600080fd5b5061039860048036038101906103939190613d09565b610d95565b6040516103a59190613d45565b60405180910390f35b3480156103ba57600080fd5b506103d560048036038101906103d09190613af8565b610db5565b6040516103e89796959493929190613d60565b60405180910390f35b3480156103fd57600080fd5b5061041860048036038101906104139190613dd6565b610eac565b005b34801561042657600080fd5b50610441600480360381019061043c9190613dd6565b610ece565b005b34801561044f57600080fd5b5061046a60048036038101906104659190613af8565b610f49565b005b34801561047857600080fd5b50610493600480360381019061048e9190613c80565b61100f565b005b3480156104a157600080fd5b506104bc60048036038101906104b79190613af8565b61102f565b6040516104c99190613b66565b60405180910390f35b3480156104de57600080fd5b506104f960048036038101906104f49190613e16565b611041565b6040516105069190613e43565b60405180910390f35b34801561051b57600080fd5b506105246110fb565b005b34801561053257600080fd5b5061054d60048036038101906105489190613f93565b61110f565b60405161055a9190613e43565b60405180910390f35b34801561056f57600080fd5b5061057861131a565b60405161058591906140c1565b60405180910390f35b34801561059a57600080fd5b506105b560048036038101906105b091906140dc565b611340565b6040516105c29190613e43565b60405180910390f35b3480156105d757600080fd5b506105e0611508565b6040516105ed9190613b66565b60405180910390f35b34801561060257600080fd5b5061061d60048036038101906106189190613e16565b611532565b005b34801561062b57600080fd5b506106466004803603810190610641919061414b565b61156d565b005b34801561065457600080fd5b5061066f600480360381019061066a9190613dd6565b6116d9565b60405161067c91906139f5565b60405180910390f35b34801561069157600080fd5b5061069a611744565b6040516106a79190613aa0565b60405180910390f35b3480156106bc57600080fd5b506106c56117d6565b6040516106d29190613e43565b60405180910390f35b3480156106e757600080fd5b506106f06117dc565b6040516106fd9190613d45565b60405180910390f35b34801561071257600080fd5b5061072d600480360381019061072891906141d3565b6117e3565b005b34801561073b57600080fd5b5061075660048036038101906107519190613c80565b6117f9565b005b34801561076457600080fd5b5061077f600480360381019061077a91906142b4565b611885565b005b34801561078d57600080fd5b506107a860048036038101906107a39190613e16565b6118aa565b005b3480156107b657600080fd5b506107d160048036038101906107cc9190613af8565b611965565b6040516107de9190613aa0565b60405180910390f35b3480156107f357600080fd5b5061080e60048036038101906108099190613af8565b611a78565b6040516108219796959493929190613d60565b60405180910390f35b34801561083657600080fd5b50610851600480360381019061084c9190613e16565b611c0d565b005b34801561085f57600080fd5b5061087a60048036038101906108759190613dd6565b611c48565b005b34801561088857600080fd5b506108a3600480360381019061089e9190614337565b611c6a565b6040516108b09190613e43565b60405180910390f35b3480156108c557600080fd5b506108ce612077565b6040516108db9190613d45565b60405180910390f35b3480156108f057600080fd5b5061090b600480360381019061090691906143ba565b61209b565b60405161091891906139f5565b60405180910390f35b34801561092d57600080fd5b5061094860048036038101906109439190613af8565b61212f565b60405161095b9796959493929190613bfc565b60405180910390f35b34801561097057600080fd5b5061098b60048036038101906109869190613e16565b6123d4565b005b34801561099957600080fd5b506109b460048036038101906109af9190613bad565b61245a565b005b60006109c182612525565b9050919050565b6060600080546109d790614429565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0390614429565b8015610a505780601f10610a2557610100808354040283529160200191610a50565b820191906000526020600020905b815481529060010190602001808311610a3357829003601f168201915b5050505050905090565b6000610a658261259f565b50610a6f82612627565b9050919050565b610a888282610a83612664565b61266c565b5050565b600d602052806000526040600020600091509050806000018054610aaf90614429565b80601f0160208091040260200160405190810160405280929190818152602001828054610adb90614429565b8015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b505050505090806001018054610b3d90614429565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6990614429565b8015610bb65780601f10610b8b57610100808354040283529160200191610bb6565b820191906000526020600020905b815481529060010190602001808311610b9957829003601f168201915b5050505050908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806004018054610bf790614429565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2390614429565b8015610c705780601f10610c4557610100808354040283529160200191610c70565b820191906000526020600020905b815481529060010190602001808311610c5357829003601f168201915b5050505050908060050160009054906101000a900460ff16908060060154905087565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d055760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610cfc9190613b66565b60405180910390fd5b6000610d198383610d14612664565b61267e565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d8f578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610d869392919061445a565b60405180910390fd5b50505050565b600060076000838152602001908152602001600020600101549050919050565b600e602052806000526040600020600091509050806000015490806001015490806002018054610de490614429565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1090614429565b8015610e5d5780601f10610e3257610100808354040283529160200191610e5d565b820191906000526020600020905b815481529060010190602001808311610e4057829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16908060040154908060050154905087565b610eb582610d95565b610ebe81612898565b610ec883836128ac565b50505050565b610ed6612664565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f3a576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f44828261299e565b505050565b3373ffffffffffffffffffffffffffffffffffffffff16610f698261102f565b73ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb6906144dd565b60405180910390fd5b610fc881612a91565b3373ffffffffffffffffffffffffffffffffffffffff16817f675f826c7b38aa0548de6f37e8e4cf39a6f9a62f7bcd3828bcb6fc7be280233e60405160405180910390a350565b61102a83838360405180602001604052806000815250611885565b505050565b600061103a8261259f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110b45760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016110ab9190613b66565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611103612b17565b61110d6000612b9e565b565b6000611119612b17565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f90614549565b60405180910390fd5b6001600a546111979190614598565b90506040518060e001604052808781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016001151581526020016000815250600d6000838152602001908152602001600020600082015181600001908161120e919061476e565b506020820151816001019081611224919061476e565b506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401908161128b919061476e565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015590505080600a819055508273ffffffffffffffffffffffffffffffffffffffff16817f182a3c36d70101c00c1251172cafd87f69e7e51caa24ab27ee82e181d0b5c3478885604051611309929190614840565b60405180910390a395945050505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600d600085815260200190815260200160002060050160009054906101000a900460ff166113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c906148c3565b60405180910390fd5b600b600081546113b4906148e3565b91905081905590506040518060e001604052808581526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020014281526020016000815250600e600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611445919061476e565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015590505083817f9f07fb2089847eaa89482a475227f9748f6f8670f45c70651a9929c3b2ff0bd48585336040516114f99392919061492b565b60405180910390a39392505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000801b61153f81612898565b6115697f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0983610eac565b5050565b600d600083815260200190815260200160002060050160009054906101000a900460ff166115d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c7906148c3565b60405180910390fd5b6115d8611508565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806116725750600d600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6116b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a8906149b5565b60405180910390fd5b80600d600084815260200190815260200160002060040190816116d4919061476e565b505050565b60006007600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606001805461175390614429565b80601f016020809104026020016040519081016040528092919081815260200182805461177f90614429565b80156117cc5780601f106117a1576101008083540402835291602001916117cc565b820191906000526020600020905b8154815290600101906020018083116117af57829003601f168201915b5050505050905090565b600a5481565b6000801b81565b6117f56117ee612664565b8383612c64565b5050565b611801612b17565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161183c9291906149d5565b6020604051808303816000875af115801561185b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187f9190614a13565b50505050565b611890848484610c93565b6118a461189b612664565b85858585612dd3565b50505050565b6118b2612b17565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191890614a8c565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606119708261259f565b50600060066000848152602001908152602001600020805461199190614429565b80601f01602080910402602001604051908101604052809291908181526020018280546119bd90614429565b8015611a0a5780601f106119df57610100808354040283529160200191611a0a565b820191906000526020600020905b8154815290600101906020018083116119ed57829003601f168201915b505050505090506000611a1b612f84565b90506000815103611a30578192505050611a73565b600082511115611a65578082604051602001611a4d929190614ae8565b60405160208183030381529060405292505050611a73565b611a6e84612f9b565b925050505b919050565b60008060606000806000806000600e60008a81526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282018054611ac790614429565b80601f0160208091040260200160405190810160405280929190818152602001828054611af390614429565b8015611b405780601f10611b1557610100808354040283529160200191611b40565b820191906000526020600020905b815481529060010190602001808311611b2357829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815250509050806000015181602001518260400151836060015184608001518560a001518660c00151975097509750975097509750975050919395979092949650565b6000801b611c1a81612898565b611c447f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0983611c48565b5050565b611c5182610d95565b611c5a81612898565b611c64838361299e565b50505050565b60007f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09611c9681612898565b6000600e600088815260200190815260200160002090506000816004015403611cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ceb90614b58565b60405180910390fd5b8060030160149054906101000a900460ff1615611d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3d90614bc4565b60405180910390fd5b60018160030160146101000a81548160ff0219169083151502179055508515611e3c57600c6000815480929190611d7c906148e3565b9190505550600c549250611db48160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684613004565b600085511115611dc957611dc88386613022565b5b8281600501819055508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1687847fddbf9d9b2b8ec52d81ebdd4358971424e6dcfd1343b0f03b2dceb9c85c168e3560405160405180910390a45b600084111561202a57600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ecd90614c30565b60405180910390fd5b6000600d60008360000154815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1982876040518363ffffffff1660e01b8152600401611f729291906149d5565b600060405180830381600087803b158015611f8c57600080fd5b505af1158015611fa0573d6000803e3d6000fd5b5050505084600d6000846000015481526020019081526020016000206006016000828254611fce9190614598565b925050819055508073ffffffffffffffffffffffffffffffffffffffff1682600001547f921c08e825069e4d980f75f8c9d39ab505649f98d18f620f19759e16f0e3ba6b876040516120209190613e43565b60405180910390a3505b8060000154877f268daa65823d8fa0335b05c9de4adf451d91e6feee90c955137643b9a98625cf3384600501546040516120659291906149d5565b60405180910390a35050949350505050565b7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0981565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60608060008060606000806000600d60008a81526020019081526020016000206040518060e001604052908160008201805461216a90614429565b80601f016020809104026020016040519081016040528092919081815260200182805461219690614429565b80156121e35780601f106121b8576101008083540402835291602001916121e3565b820191906000526020600020905b8154815290600101906020018083116121c657829003601f168201915b505050505081526020016001820180546121fc90614429565b80601f016020809104026020016040519081016040528092919081815260200182805461222890614429565b80156122755780601f1061224a57610100808354040283529160200191612275565b820191906000526020600020905b81548152906001019060200180831161225857829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820180546122ee90614429565b80601f016020809104026020016040519081016040528092919081815260200182805461231a90614429565b80156123675780601f1061233c57610100808354040283529160200191612367565b820191906000526020600020905b81548152906001019060200180831161234a57829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581526020016006820154815250509050806000015181602001518260400151836060015184608001518560a001518660c00151975097509750975097509750975050919395979092949650565b6123dc612b17565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361244e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016124459190613b66565b60405180910390fd5b61245781612b9e565b50565b3373ffffffffffffffffffffffffffffffffffffffff1661247a8261102f565b73ffffffffffffffffffffffffffffffffffffffff16146124d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124c7906144dd565b60405180910390fd5b6124db33838361100f565b8173ffffffffffffffffffffffffffffffffffffffff166000827fddbf9d9b2b8ec52d81ebdd4358971424e6dcfd1343b0f03b2dceb9c85c168e3560405160405180910390a45050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061259857506125978261307e565b5b9050919050565b6000806125ab836130df565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361261e57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016126159190613e43565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b612679838383600161311c565b505050565b60008061268a846130df565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146126cc576126cb8184866132e1565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461275d5761270e60008560008061311c565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146127e0576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6128a9816128a4612664565b6133a5565b50565b60006128b883836116d9565b6129935760016007600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612930612664565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050612998565b600090505b92915050565b60006129aa83836116d9565b15612a865760006007600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612a23612664565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050612a8b565b600090505b92915050565b6000612aa0600083600061267e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b1357816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612b0a9190613e43565b60405180910390fd5b5050565b612b1f612664565b73ffffffffffffffffffffffffffffffffffffffff16612b3d611508565b73ffffffffffffffffffffffffffffffffffffffff1614612b9c57612b60612664565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401612b939190613b66565b60405180910390fd5b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612cd557816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401612ccc9190613b66565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051612dc691906139f5565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612f7d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401612e329493929190614ca5565b6020604051808303816000875af1925050508015612e6e57506040513d601f19601f82011682018060405250810190612e6b9190614d06565b60015b612ef2573d8060008114612e9e576040519150601f19603f3d011682016040523d82523d6000602084013e612ea3565b606091505b506000815103612eea57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612ee19190613b66565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612f7b57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612f729190613b66565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060612fa68261259f565b506000612fb1612f84565b90506000815111612fd15760405180602001604052806000815250612ffc565b80612fdb846133f6565b604051602001612fec929190614ae8565b6040516020818303038152906040525b915050919050565b61301e8282604051806020016040528060008152506134c4565b5050565b80600660008481526020019081526020016000209081613042919061476e565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516130729190613e43565b60405180910390a15050565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806130d857506130d7826134e8565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806131555750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156132895760006131658461259f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156131d057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156131e357506131e1818461209b565b155b1561322557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161321c9190613b66565b60405180910390fd5b811561328757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6132ec8383836135ca565b6133a057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361336157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016133589190613e43565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016133979291906149d5565b60405180910390fd5b505050565b6133af82826116d9565b6133f25780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016133e9929190614d33565b60405180910390fd5b5050565b6060600060016134058461368b565b01905060008167ffffffffffffffff81111561342457613423613e68565b5b6040519080825280601f01601f1916602001820160405280156134565781602001600182028036833780820191505090505b509050600082602083010190505b6001156134b9578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816134ad576134ac614d5c565b5b04945060008503613464575b819350505050919050565b6134ce83836137de565b6134e36134d9612664565b6000858585612dd3565b505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806135b357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806135c357506135c2826138d7565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561368257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806136435750613642848461209b565b5b8061368157508273ffffffffffffffffffffffffffffffffffffffff1661366983612627565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106136e9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816136df576136de614d5c565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613726576d04ee2d6d415b85acef8100000000838161371c5761371b614d5c565b5b0492506020810190505b662386f26fc10000831061375557662386f26fc10000838161374b5761374a614d5c565b5b0492506010810190505b6305f5e100831061377e576305f5e100838161377457613773614d5c565b5b0492506008810190505b61271083106137a357612710838161379957613798614d5c565b5b0492506004810190505b606483106137c657606483816137bc576137bb614d5c565b5b0492506002810190505b600a83106137d5576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036138505760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016138479190613b66565b60405180910390fd5b600061385e8383600061267e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146138d25760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016138c99190613b66565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61398a81613955565b811461399557600080fd5b50565b6000813590506139a781613981565b92915050565b6000602082840312156139c3576139c261394b565b5b60006139d184828501613998565b91505092915050565b60008115159050919050565b6139ef816139da565b82525050565b6000602082019050613a0a60008301846139e6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613a4a578082015181840152602081019050613a2f565b60008484015250505050565b6000601f19601f8301169050919050565b6000613a7282613a10565b613a7c8185613a1b565b9350613a8c818560208601613a2c565b613a9581613a56565b840191505092915050565b60006020820190508181036000830152613aba8184613a67565b905092915050565b6000819050919050565b613ad581613ac2565b8114613ae057600080fd5b50565b600081359050613af281613acc565b92915050565b600060208284031215613b0e57613b0d61394b565b5b6000613b1c84828501613ae3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613b5082613b25565b9050919050565b613b6081613b45565b82525050565b6000602082019050613b7b6000830184613b57565b92915050565b613b8a81613b45565b8114613b9557600080fd5b50565b600081359050613ba781613b81565b92915050565b60008060408385031215613bc457613bc361394b565b5b6000613bd285828601613b98565b9250506020613be385828601613ae3565b9150509250929050565b613bf681613ac2565b82525050565b600060e0820190508181036000830152613c16818a613a67565b90508181036020830152613c2a8189613a67565b9050613c396040830188613bed565b613c466060830187613b57565b8181036080830152613c588186613a67565b9050613c6760a08301856139e6565b613c7460c0830184613bed565b98975050505050505050565b600080600060608486031215613c9957613c9861394b565b5b6000613ca786828701613b98565b9350506020613cb886828701613b98565b9250506040613cc986828701613ae3565b9150509250925092565b6000819050919050565b613ce681613cd3565b8114613cf157600080fd5b50565b600081359050613d0381613cdd565b92915050565b600060208284031215613d1f57613d1e61394b565b5b6000613d2d84828501613cf4565b91505092915050565b613d3f81613cd3565b82525050565b6000602082019050613d5a6000830184613d36565b92915050565b600060e082019050613d75600083018a613bed565b613d826020830189613d36565b8181036040830152613d948188613a67565b9050613da36060830187613b57565b613db060808301866139e6565b613dbd60a0830185613bed565b613dca60c0830184613bed565b98975050505050505050565b60008060408385031215613ded57613dec61394b565b5b6000613dfb85828601613cf4565b9250506020613e0c85828601613b98565b9150509250929050565b600060208284031215613e2c57613e2b61394b565b5b6000613e3a84828501613b98565b91505092915050565b6000602082019050613e586000830184613bed565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613ea082613a56565b810181811067ffffffffffffffff82111715613ebf57613ebe613e68565b5b80604052505050565b6000613ed2613941565b9050613ede8282613e97565b919050565b600067ffffffffffffffff821115613efe57613efd613e68565b5b613f0782613a56565b9050602081019050919050565b82818337600083830152505050565b6000613f36613f3184613ee3565b613ec8565b905082815260208101848484011115613f5257613f51613e63565b5b613f5d848285613f14565b509392505050565b600082601f830112613f7a57613f79613e5e565b5b8135613f8a848260208601613f23565b91505092915050565b600080600080600060a08688031215613faf57613fae61394b565b5b600086013567ffffffffffffffff811115613fcd57613fcc613950565b5b613fd988828901613f65565b955050602086013567ffffffffffffffff811115613ffa57613ff9613950565b5b61400688828901613f65565b945050604061401788828901613ae3565b935050606061402888828901613b98565b925050608086013567ffffffffffffffff81111561404957614048613950565b5b61405588828901613f65565b9150509295509295909350565b6000819050919050565b600061408761408261407d84613b25565b614062565b613b25565b9050919050565b60006140998261406c565b9050919050565b60006140ab8261408e565b9050919050565b6140bb816140a0565b82525050565b60006020820190506140d660008301846140b2565b92915050565b6000806000606084860312156140f5576140f461394b565b5b600061410386828701613ae3565b935050602061411486828701613cf4565b925050604084013567ffffffffffffffff81111561413557614134613950565b5b61414186828701613f65565b9150509250925092565b600080604083850312156141625761416161394b565b5b600061417085828601613ae3565b925050602083013567ffffffffffffffff81111561419157614190613950565b5b61419d85828601613f65565b9150509250929050565b6141b0816139da565b81146141bb57600080fd5b50565b6000813590506141cd816141a7565b92915050565b600080604083850312156141ea576141e961394b565b5b60006141f885828601613b98565b9250506020614209858286016141be565b9150509250929050565b600067ffffffffffffffff82111561422e5761422d613e68565b5b61423782613a56565b9050602081019050919050565b600061425761425284614213565b613ec8565b90508281526020810184848401111561427357614272613e63565b5b61427e848285613f14565b509392505050565b600082601f83011261429b5761429a613e5e565b5b81356142ab848260208601614244565b91505092915050565b600080600080608085870312156142ce576142cd61394b565b5b60006142dc87828801613b98565b94505060206142ed87828801613b98565b93505060406142fe87828801613ae3565b925050606085013567ffffffffffffffff81111561431f5761431e613950565b5b61432b87828801614286565b91505092959194509250565b600080600080608085870312156143515761435061394b565b5b600061435f87828801613ae3565b9450506020614370878288016141be565b935050604085013567ffffffffffffffff81111561439157614390613950565b5b61439d87828801613f65565b92505060606143ae87828801613ae3565b91505092959194509250565b600080604083850312156143d1576143d061394b565b5b60006143df85828601613b98565b92505060206143f085828601613b98565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061444157607f821691505b602082108103614454576144536143fa565b5b50919050565b600060608201905061446f6000830186613b57565b61447c6020830185613bed565b6144896040830184613b57565b949350505050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b60006144c7600f83613a1b565b91506144d282614491565b602082019050919050565b600060208201905081810360008301526144f6816144ba565b9050919050565b7f4f776e6572206164647265737320726571756972656400000000000000000000600082015250565b6000614533601683613a1b565b915061453e826144fd565b602082019050919050565b6000602082019050818103600083015261456281614526565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006145a382613ac2565b91506145ae83613ac2565b92508282019050808211156145c6576145c5614569565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261462e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826145f1565b61463886836145f1565b95508019841693508086168417925050509392505050565b600061466b61466661466184613ac2565b614062565b613ac2565b9050919050565b6000819050919050565b61468583614650565b61469961469182614672565b8484546145fe565b825550505050565b600090565b6146ae6146a1565b6146b981848461467c565b505050565b5b818110156146dd576146d26000826146a6565b6001810190506146bf565b5050565b601f821115614722576146f3816145cc565b6146fc846145e1565b8101602085101561470b578190505b61471f614717856145e1565b8301826146be565b50505b505050565b600082821c905092915050565b600061474560001984600802614727565b1980831691505092915050565b600061475e8383614734565b9150826002028217905092915050565b61477782613a10565b67ffffffffffffffff8111156147905761478f613e68565b5b61479a8254614429565b6147a58282856146e1565b600060209050601f8311600181146147d857600084156147c6578287015190505b6147d08582614752565b865550614838565b601f1984166147e6866145cc565b60005b8281101561480e578489015182556001820191506020850194506020810190506147e9565b8683101561482b5784890151614827601f891682614734565b8355505b6001600288020188555050505b505050505050565b6000604082019050818103600083015261485a8185613a67565b9050818103602083015261486e8184613a67565b90509392505050565b7f50726f6a656374206e6f7420666f756e64000000000000000000000000000000600082015250565b60006148ad601183613a1b565b91506148b882614877565b602082019050919050565b600060208201905081810360008301526148dc816148a0565b9050919050565b60006148ee82613ac2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036149205761491f614569565b5b600182019050919050565b60006060820190506149406000830186613d36565b81810360208301526149528185613a67565b90506149616040830184613b57565b949350505050565b7f4f6e6c79206f776e6572206f722070726f6a656374206f776e65720000000000600082015250565b600061499f601b83613a1b565b91506149aa82614969565b602082019050919050565b600060208201905081810360008301526149ce81614992565b9050919050565b60006040820190506149ea6000830185613b57565b6149f76020830184613bed565b9392505050565b600081519050614a0d816141a7565b92915050565b600060208284031215614a2957614a2861394b565b5b6000614a37848285016149fe565b91505092915050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b6000614a76601583613a1b565b9150614a8182614a40565b602082019050919050565b60006020820190508181036000830152614aa581614a69565b9050919050565b600081905092915050565b6000614ac282613a10565b614acc8185614aac565b9350614adc818560208601613a2c565b80840191505092915050565b6000614af48285614ab7565b9150614b008284614ab7565b91508190509392505050565b7f45766964656e6365206e6f7420666f756e640000000000000000000000000000600082015250565b6000614b42601283613a1b565b9150614b4d82614b0c565b602082019050919050565b60006020820190508181036000830152614b7181614b35565b9050919050565b7f416c726561647920766572696669656400000000000000000000000000000000600082015250565b6000614bae601083613a1b565b9150614bb982614b78565b602082019050919050565b60006020820190508181036000830152614bdd81614ba1565b9050919050565b7f436172626f6e20746f6b656e206e6f7420736574000000000000000000000000600082015250565b6000614c1a601483613a1b565b9150614c2582614be4565b602082019050919050565b60006020820190508181036000830152614c4981614c0d565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000614c7782614c50565b614c818185614c5b565b9350614c91818560208601613a2c565b614c9a81613a56565b840191505092915050565b6000608082019050614cba6000830187613b57565b614cc76020830186613b57565b614cd46040830185613bed565b8181036060830152614ce68184614c6c565b905095945050505050565b600081519050614d0081613981565b92915050565b600060208284031215614d1c57614d1b61394b565b5b6000614d2a84828501614cf1565b91505092915050565b6000604082019050614d486000830185613b57565b614d556020830184613d36565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220102da1515e41f8706d0b4109eea5ccd35b073d67c40f4928bd9e0f85bebb99b964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x234 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9000B3D6 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE7705DB6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8E4 JUMPI DUP1 PUSH4 0xF0F3F2C8 EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x964 JUMPI DUP1 PUSH4 0xF7F7229E EQ PUSH2 0x98D JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x7AA JUMPI DUP1 PUSH4 0xC956F143 EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xCA2DFD0A EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x853 JUMPI DUP1 PUSH4 0xE4A49B46 EQ PUSH2 0x87C JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0xC6BDEE61 EQ PUSH2 0x781 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x9000B3D6 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x91546C34 EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x6B0 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x80ABA8FE EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x82A71EF2 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x83F8187C EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5CB JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x40C80852 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4D2 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x107046BD GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x2E4546CD EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3F1 JUMPI PUSH2 0x235 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DC JUMPI PUSH2 0x235 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x3BAD JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x3C80 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0xEAC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0xF49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x3C80 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x524 PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x3F93 JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x578 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x40C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x646 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x414B JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69A PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C5 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F0 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x41D3 JUMP JUMPDEST PUSH2 0x17E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x756 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x3C80 JUMP JUMPDEST PUSH2 0x17F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x42B4 JUMP JUMPDEST PUSH2 0x1885 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x18AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x821 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x851 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x1C0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x3DD6 JUMP JUMPDEST PUSH2 0x1C48 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x4337 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8CE PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x43BA JUMP JUMPDEST PUSH2 0x209B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x948 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x3AF8 JUMP JUMPDEST PUSH2 0x212F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95B SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x986 SWAP2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x23D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x3BAD JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x9C1 DUP3 PUSH2 0x2525 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x9D7 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA03 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 PUSH2 0x259F JUMP JUMPDEST POP PUSH2 0xA6F DUP3 PUSH2 0x2627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA88 DUP3 DUP3 PUSH2 0xA83 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x266C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADB SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xB3D SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB69 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB99 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xBF7 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC23 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC70 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC45 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC70 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC53 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP4 DUP4 PUSH2 0xD14 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x267E JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8F JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x445A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xDE4 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE10 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0xEB5 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xEBE DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0xEC8 DUP4 DUP4 PUSH2 0x28AC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF44 DUP3 DUP3 PUSH2 0x299E JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF69 DUP3 PUSH2 0x102F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0x2A91 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x675F826C7B38AA0548DE6F37E8E4CF39A6F9A62F7BCD3828BCB6FC7BE280233E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x102A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1885 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A DUP3 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x110D PUSH1 0x0 PUSH2 0x2B9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1119 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117F SWAP1 PUSH2 0x4549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x4598 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x182A3C36D70101C00C1251172CAFD87F69E7E51CAA24AB27EE82E181D0B5C347 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1309 SWAP3 SWAP2 SWAP1 PUSH2 0x4840 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP1 PUSH2 0x48C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP2 SLOAD PUSH2 0x13B4 SWAP1 PUSH2 0x48E3 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP DUP4 DUP2 PUSH32 0x9F07FB2089847EAA89482A475227F9748F6F8670F45C70651A9929C3B2FF0BD4 DUP6 DUP6 CALLER PUSH1 0x40 MLOAD PUSH2 0x14F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x492B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x153F DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1569 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0xEAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C7 SWAP1 PUSH2 0x48C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D8 PUSH2 0x1508 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1672 JUMPI POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A8 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1753 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x177F SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x17F5 PUSH2 0x17EE PUSH2 0x2664 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2C64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1801 PUSH2 0x2B17 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183C SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x185B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187F SWAP2 SWAP1 PUSH2 0x4A13 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1890 DUP5 DUP5 DUP5 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x18A4 PUSH2 0x189B PUSH2 0x2664 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2DD3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x18B2 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1918 SWAP1 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1970 DUP3 PUSH2 0x259F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1991 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19BD SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A0A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A0A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A1B PUSH2 0x2F84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A30 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1A65 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4D SWAP3 SWAP2 SWAP1 PUSH2 0x4AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1A73 JUMP JUMPDEST PUSH2 0x1A6E DUP5 PUSH2 0x2F9B JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1AC7 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AF3 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B15 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH1 0xC0 ADD MLOAD SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x1C1A DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1C44 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x1C48 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C51 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x1C5A DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1C64 DUP4 DUP4 PUSH2 0x299E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH2 0x1C96 DUP2 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x1CF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEB SWAP1 PUSH2 0x4B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1D46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3D SWAP1 PUSH2 0x4BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 ISZERO PUSH2 0x1E3C JUMPI PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7C SWAP1 PUSH2 0x48E3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xC SLOAD SWAP3 POP PUSH2 0x1DB4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x3004 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT ISZERO PUSH2 0x1DC9 JUMPI PUSH2 0x1DC8 DUP4 DUP7 PUSH2 0x3022 JUMP JUMPDEST JUMPDEST DUP3 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 PUSH32 0xDDBF9D9B2B8EC52D81EBDD4358971424E6DCFD1343B0F03B2DCEB9C85C168E35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x202A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECD SWAP1 PUSH2 0x4C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP3 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F72 SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0xD PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FCE SWAP2 SWAP1 PUSH2 0x4598 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD SLOAD PUSH32 0x921C08E825069E4D980F75F8C9D39AB505649F98D18F620F19759E16F0E3BA6B DUP8 PUSH1 0x40 MLOAD PUSH2 0x2020 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP8 PUSH32 0x268DAA65823D8FA0335B05C9DE4ADF451D91E6FEEE90C955137643B9A98625CF CALLER DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x2065 SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x216A SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2196 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x21FC SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2228 SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2275 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x224A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2275 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2258 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0x22EE SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x231A SWAP1 PUSH2 0x4429 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2367 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2367 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x234A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH1 0xC0 ADD MLOAD SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH2 0x23DC PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x244E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2445 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2457 DUP2 PUSH2 0x2B9E JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x247A DUP3 PUSH2 0x102F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C7 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24DB CALLER DUP4 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 PUSH32 0xDDBF9D9B2B8EC52D81EBDD4358971424E6DCFD1343B0F03B2DCEB9C85C168E35 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2598 JUMPI POP PUSH2 0x2597 DUP3 PUSH2 0x307E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25AB DUP4 PUSH2 0x30DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x261E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2615 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2679 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x311C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x268A DUP5 PUSH2 0x30DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26CC JUMPI PUSH2 0x26CB DUP2 DUP5 DUP7 PUSH2 0x32E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x275D JUMPI PUSH2 0x270E PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27E0 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x28A9 DUP2 PUSH2 0x28A4 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x33A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B8 DUP4 DUP4 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x2993 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2930 PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AA DUP4 DUP4 PUSH2 0x16D9 JUMP JUMPDEST ISZERO PUSH2 0x2A86 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2A23 PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA0 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B13 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B0A SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2B1F PUSH2 0x2664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B3D PUSH2 0x1508 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B9C JUMPI PUSH2 0x2B60 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B93 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CD5 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CCC SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2DC6 SWAP2 SWAP1 PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2F7D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E32 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2E6E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6B SWAP2 SWAP1 PUSH2 0x4D06 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2EF2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E9E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2EEA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2F7B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F72 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2FA6 DUP3 PUSH2 0x259F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2FB1 PUSH2 0x2F84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2FD1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2FFC JUMP JUMPDEST DUP1 PUSH2 0x2FDB DUP5 PUSH2 0x33F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FEC SWAP3 SWAP2 SWAP1 PUSH2 0x4AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x301E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34C4 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3042 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3072 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x30D8 JUMPI POP PUSH2 0x30D7 DUP3 PUSH2 0x34E8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x3155 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3289 JUMPI PUSH1 0x0 PUSH2 0x3165 DUP5 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x31D0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x31E3 JUMPI POP PUSH2 0x31E1 DUP2 DUP5 PUSH2 0x209B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3225 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321C SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3287 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x32EC DUP4 DUP4 DUP4 PUSH2 0x35CA JUMP JUMPDEST PUSH2 0x33A0 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3361 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3358 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3397 SWAP3 SWAP2 SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x33AF DUP3 DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x33F2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E9 SWAP3 SWAP2 SWAP1 PUSH2 0x4D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3405 DUP5 PUSH2 0x368B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3424 JUMPI PUSH2 0x3423 PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3456 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x34B9 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34AD JUMPI PUSH2 0x34AC PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3464 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34CE DUP4 DUP4 PUSH2 0x37DE JUMP JUMPDEST PUSH2 0x34E3 PUSH2 0x34D9 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2DD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x35B3 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x35C3 JUMPI POP PUSH2 0x35C2 DUP3 PUSH2 0x38D7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3682 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3643 JUMPI POP PUSH2 0x3642 DUP5 DUP5 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3681 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3669 DUP4 PUSH2 0x2627 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x36E9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x36DF JUMPI PUSH2 0x36DE PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3726 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x371C JUMPI PUSH2 0x371B PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3755 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x374B JUMPI PUSH2 0x374A PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x377E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3774 JUMPI PUSH2 0x3773 PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x37A3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3799 JUMPI PUSH2 0x3798 PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x37C6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x37BC JUMPI PUSH2 0x37BB PUSH2 0x4D5C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x37D5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3850 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3847 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x385E DUP4 DUP4 PUSH1 0x0 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x38D2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C9 SWAP2 SWAP1 PUSH2 0x3B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x398A DUP2 PUSH2 0x3955 JUMP JUMPDEST DUP2 EQ PUSH2 0x3995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39A7 DUP2 PUSH2 0x3981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C3 JUMPI PUSH2 0x39C2 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39D1 DUP5 DUP3 DUP6 ADD PUSH2 0x3998 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39EF DUP2 PUSH2 0x39DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A4A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A72 DUP3 PUSH2 0x3A10 JUMP JUMPDEST PUSH2 0x3A7C DUP2 DUP6 PUSH2 0x3A1B JUMP JUMPDEST SWAP4 POP PUSH2 0x3A8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x3A95 DUP2 PUSH2 0x3A56 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ABA DUP2 DUP5 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AD5 DUP2 PUSH2 0x3AC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AF2 DUP2 PUSH2 0x3ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B0E JUMPI PUSH2 0x3B0D PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B1C DUP5 DUP3 DUP6 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B50 DUP3 PUSH2 0x3B25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B60 DUP2 PUSH2 0x3B45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B8A DUP2 PUSH2 0x3B45 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BA7 DUP2 PUSH2 0x3B81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BC4 JUMPI PUSH2 0x3BC3 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BD2 DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3BE3 DUP6 DUP3 DUP7 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF6 DUP2 PUSH2 0x3AC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C16 DUP2 DUP11 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C2A DUP2 DUP10 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C39 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x3C46 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3B57 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3C58 DUP2 DUP7 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C67 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x39E6 JUMP JUMPDEST PUSH2 0x3C74 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C99 JUMPI PUSH2 0x3C98 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CA7 DUP7 DUP3 DUP8 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3CB8 DUP7 DUP3 DUP8 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3CC9 DUP7 DUP3 DUP8 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE6 DUP2 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D03 DUP2 PUSH2 0x3CDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D1F JUMPI PUSH2 0x3D1E PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D2D DUP5 DUP3 DUP6 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D3F DUP2 PUSH2 0x3CD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3D75 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x3D82 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x3D36 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D94 DUP2 DUP9 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x3DB0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x39E6 JUMP JUMPDEST PUSH2 0x3DBD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x3DCA PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DED JUMPI PUSH2 0x3DEC PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DFB DUP6 DUP3 DUP7 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E0C DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E2C JUMPI PUSH2 0x3E2B PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E3A DUP5 DUP3 DUP6 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3EA0 DUP3 PUSH2 0x3A56 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3EBF JUMPI PUSH2 0x3EBE PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED2 PUSH2 0x3941 JUMP JUMPDEST SWAP1 POP PUSH2 0x3EDE DUP3 DUP3 PUSH2 0x3E97 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EFE JUMPI PUSH2 0x3EFD PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH2 0x3F07 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F36 PUSH2 0x3F31 DUP5 PUSH2 0x3EE3 JUMP JUMPDEST PUSH2 0x3EC8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3F52 JUMPI PUSH2 0x3F51 PUSH2 0x3E63 JUMP JUMPDEST JUMPDEST PUSH2 0x3F5D DUP5 DUP3 DUP6 PUSH2 0x3F14 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F7A JUMPI PUSH2 0x3F79 PUSH2 0x3E5E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F8A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3FAF JUMPI PUSH2 0x3FAE PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FCD JUMPI PUSH2 0x3FCC PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x3FD9 DUP9 DUP3 DUP10 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FFA JUMPI PUSH2 0x3FF9 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x4006 DUP9 DUP3 DUP10 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4017 DUP9 DUP3 DUP10 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4028 DUP9 DUP3 DUP10 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4049 JUMPI PUSH2 0x4048 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x4055 DUP9 DUP3 DUP10 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4087 PUSH2 0x4082 PUSH2 0x407D DUP5 PUSH2 0x3B25 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x3B25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4099 DUP3 PUSH2 0x406C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40AB DUP3 PUSH2 0x408E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40BB DUP2 PUSH2 0x40A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40F5 JUMPI PUSH2 0x40F4 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4103 DUP7 DUP3 DUP8 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4114 DUP7 DUP3 DUP8 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4135 JUMPI PUSH2 0x4134 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x4141 DUP7 DUP3 DUP8 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4162 JUMPI PUSH2 0x4161 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4170 DUP6 DUP3 DUP7 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4191 JUMPI PUSH2 0x4190 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x419D DUP6 DUP3 DUP7 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B0 DUP2 PUSH2 0x39DA JUMP JUMPDEST DUP2 EQ PUSH2 0x41BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41CD DUP2 PUSH2 0x41A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41EA JUMPI PUSH2 0x41E9 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41F8 DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4209 DUP6 DUP3 DUP7 ADD PUSH2 0x41BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x422E JUMPI PUSH2 0x422D PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH2 0x4237 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 PUSH2 0x4252 DUP5 PUSH2 0x4213 JUMP JUMPDEST PUSH2 0x3EC8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4273 JUMPI PUSH2 0x4272 PUSH2 0x3E63 JUMP JUMPDEST JUMPDEST PUSH2 0x427E DUP5 DUP3 DUP6 PUSH2 0x3F14 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x429B JUMPI PUSH2 0x429A PUSH2 0x3E5E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x42AB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4244 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x42CE JUMPI PUSH2 0x42CD PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42DC DUP8 DUP3 DUP9 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x42ED DUP8 DUP3 DUP9 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42FE DUP8 DUP3 DUP9 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x431F JUMPI PUSH2 0x431E PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x432B DUP8 DUP3 DUP9 ADD PUSH2 0x4286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4351 JUMPI PUSH2 0x4350 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x435F DUP8 DUP3 DUP9 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4370 DUP8 DUP3 DUP9 ADD PUSH2 0x41BE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4391 JUMPI PUSH2 0x4390 PUSH2 0x3950 JUMP JUMPDEST JUMPDEST PUSH2 0x439D DUP8 DUP3 DUP9 ADD PUSH2 0x3F65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x43AE DUP8 DUP3 DUP9 ADD PUSH2 0x3AE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43D1 JUMPI PUSH2 0x43D0 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43DF DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43F0 DUP6 DUP3 DUP7 ADD PUSH2 0x3B98 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4441 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4454 JUMPI PUSH2 0x4453 PUSH2 0x43FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x446F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x447C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3BED JUMP JUMPDEST PUSH2 0x4489 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C7 PUSH1 0xF DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x44D2 DUP3 PUSH2 0x4491 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44F6 DUP2 PUSH2 0x44BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E6572206164647265737320726571756972656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4533 PUSH1 0x16 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x453E DUP3 PUSH2 0x44FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4562 DUP2 PUSH2 0x4526 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45A3 DUP3 PUSH2 0x3AC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x45AE DUP4 PUSH2 0x3AC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x45C6 JUMPI PUSH2 0x45C5 PUSH2 0x4569 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x462E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x45F1 JUMP JUMPDEST PUSH2 0x4638 DUP7 DUP4 PUSH2 0x45F1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466B PUSH2 0x4666 PUSH2 0x4661 DUP5 PUSH2 0x3AC2 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x3AC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4685 DUP4 PUSH2 0x4650 JUMP JUMPDEST PUSH2 0x4699 PUSH2 0x4691 DUP3 PUSH2 0x4672 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x45FE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x46AE PUSH2 0x46A1 JUMP JUMPDEST PUSH2 0x46B9 DUP2 DUP5 DUP5 PUSH2 0x467C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x46DD JUMPI PUSH2 0x46D2 PUSH1 0x0 DUP3 PUSH2 0x46A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x46BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4722 JUMPI PUSH2 0x46F3 DUP2 PUSH2 0x45CC JUMP JUMPDEST PUSH2 0x46FC DUP5 PUSH2 0x45E1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x470B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x471F PUSH2 0x4717 DUP6 PUSH2 0x45E1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x46BE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4745 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4727 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x475E DUP4 DUP4 PUSH2 0x4734 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4777 DUP3 PUSH2 0x3A10 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4790 JUMPI PUSH2 0x478F PUSH2 0x3E68 JUMP JUMPDEST JUMPDEST PUSH2 0x479A DUP3 SLOAD PUSH2 0x4429 JUMP JUMPDEST PUSH2 0x47A5 DUP3 DUP3 DUP6 PUSH2 0x46E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x47D8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x47C6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x47D0 DUP6 DUP3 PUSH2 0x4752 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4838 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x47E6 DUP7 PUSH2 0x45CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x480E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47E9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x482B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4827 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4734 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x485A DUP2 DUP6 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x486E DUP2 DUP5 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726F6A656374206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48AD PUSH1 0x11 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x48B8 DUP3 PUSH2 0x4877 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48DC DUP2 PUSH2 0x48A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48EE DUP3 PUSH2 0x3AC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4920 JUMPI PUSH2 0x491F PUSH2 0x4569 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4940 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3D36 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4952 DUP2 DUP6 PUSH2 0x3A67 JUMP JUMPDEST SWAP1 POP PUSH2 0x4961 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E6572206F722070726F6A656374206F776E65720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499F PUSH1 0x1B DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x49AA DUP3 PUSH2 0x4969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49CE DUP2 PUSH2 0x4992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x49EA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x49F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4A0D DUP2 PUSH2 0x41A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A29 JUMPI PUSH2 0x4A28 PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A37 DUP5 DUP3 DUP6 ADD PUSH2 0x49FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A76 PUSH1 0x15 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4A81 DUP3 PUSH2 0x4A40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AA5 DUP2 PUSH2 0x4A69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC2 DUP3 PUSH2 0x3A10 JUMP JUMPDEST PUSH2 0x4ACC DUP2 DUP6 PUSH2 0x4AAC JUMP JUMPDEST SWAP4 POP PUSH2 0x4ADC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A2C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF4 DUP3 DUP6 PUSH2 0x4AB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B00 DUP3 DUP5 PUSH2 0x4AB7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45766964656E6365206E6F7420666F756E640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B42 PUSH1 0x12 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4B4D DUP3 PUSH2 0x4B0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B71 DUP2 PUSH2 0x4B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766572696669656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BAE PUSH1 0x10 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB9 DUP3 PUSH2 0x4B78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BDD DUP2 PUSH2 0x4BA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436172626F6E20746F6B656E206E6F7420736574000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1A PUSH1 0x14 DUP4 PUSH2 0x3A1B JUMP JUMPDEST SWAP2 POP PUSH2 0x4C25 DUP3 PUSH2 0x4BE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C49 DUP2 PUSH2 0x4C0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C77 DUP3 PUSH2 0x4C50 JUMP JUMPDEST PUSH2 0x4C81 DUP2 DUP6 PUSH2 0x4C5B JUMP JUMPDEST SWAP4 POP PUSH2 0x4C91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x4C9A DUP2 PUSH2 0x3A56 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4CBA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x4CC7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x4CD4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3BED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4CE6 DUP2 DUP5 PUSH2 0x4C6C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D00 DUP2 PUSH2 0x3981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D1C JUMPI PUSH2 0x4D1B PUSH2 0x394B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D2A DUP5 DUP3 DUP6 ADD PUSH2 0x4CF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4D48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3B57 JUMP JUMPDEST PUSH2 0x4D55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x2D LOG1 MLOAD MCOPY COINBASE 0xF8 PUSH17 0x6D0B4109EEA5CCD35B073D67C40F4928BD SWAP15 0xF DUP6 0xBE 0xBB SWAP10 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1362:9963:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10486:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2263:89:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3152:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2497:43:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;3852:578:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3786:120:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2571:45:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;4202:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9522:202:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4464:132:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2103:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1861:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;4712:726:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1516:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6196:685;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3932:130:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5446:332;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2394:93:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1593:28:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3487:144:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9808::25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4630:233:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3730:194:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10713:455:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;4070:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4618:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7315:1662:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1441:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3665:153:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10051:429:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9168:309:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10486:219;10632:4;10661:36;10685:11;10661:23;:36::i;:::-;10654:43;;10486:219;;;:::o;2263:89:11:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;;3425:21;3438:7;3425:12;:21::i;:::-;3418:28;;3299:154;;;:::o;3152:113::-;3223:35;3232:2;3236:7;3245:12;:10;:12::i;:::-;3223:8;:35::i;:::-;3152:113;;:::o;2497:43:25:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3852:578:11:-;3960:1;3946:16;;:2;:16;;;3942:87;;4015:1;3985:33;;;;;;;;;;;:::i;:::-;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;4292:12;:10;:12::i;:::-;4271:7;:34::i;:::-;4247:58;;4336:4;4319:21;;:13;:21;;;4315:109;;4384:4;4390:7;4399:13;4363:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4315:109;3932:498;3852:578;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;2571:45:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4202:136:0:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;9522:202:25:-;9610:10;9590:30;;:16;9598:7;9590;:16::i;:::-;:30;;;9582:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9651:14;9657:7;9651:5;:14::i;:::-;9705:10;9681:35;;9696:7;9681:35;;;;;;;;;;9522:202;:::o;4464:132:11:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;2103:118::-;2166:7;2192:22;2206:7;2192:13;:22::i;:::-;2185:29;;2103:118;;;:::o;1861:208::-;1924:7;1964:1;1947:19;;:5;:19;;;1943:87;;2016:1;1989:30;;;;;;;;;;;:::i;:::-;;;;;;;;1943:87;2046:9;:16;2056:5;2046:16;;;;;;;;;;;;;;;;2039:23;;1861:208;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4712:726:25:-;4921:17;1531:13:2;:11;:13::i;:::-;4980:1:25::1;4959:23;;:9;:23;;::::0;4951:58:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5048:1;5032:13;;:17;;;;:::i;:::-;5020:29;;5082:236;;;;;;;;5111:4;5082:236;;;;5140:8;5082:236;;;;5169:4;5082:236;;;;5195:9;5082:236;;;;;;5232:11;5082:236;;;;5266:4;5082:236;;;;;;5305:1;5082:236;;::::0;5060:8:::1;:19;5069:9;5060:19;;;;;;;;;;;:258;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5345:9;5329:13;:25;;;;5401:9;5372:58;;5390:9;5372:58;5412:4;5418:11;5372:58;;;;;;;:::i;:::-;;;;;;;;4712:726:::0;;;;;;;:::o;1516:30::-;;;;;;;;;;;;;:::o;6196:685::-;6340:18;6379:8;:19;6388:9;6379:19;;;;;;;;;;;:26;;;;;;;;;;;;6371:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;6453:15;;6451:17;;;;;:::i;:::-;;;;;;;6438:30;;6503:274;;;;;;;;6538:9;6503:274;;;;6576:12;6503:274;;;;6616:11;6503:274;;;;6652:10;6503:274;;;;;;6687:5;6503:274;;;;;;6718:15;6503:274;;;;6764:1;6503:274;;;6479:9;:21;6489:10;6479:21;;;;;;;;;;;:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6824:9;6812:10;6795:78;6835:12;6849:11;6862:10;6795:78;;;;;;;;:::i;:::-;;;;;;;;6196:685;;;;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3932:130:25:-;2241:4:0;3989:18:25;;2473:16:0;2484:4;2473:10;:16::i;:::-;4020:34:25::1;1481:26;4045:8;4020:9;:34::i;:::-;3932:130:::0;;:::o;5446:332::-;5551:8;:19;5560:9;5551:19;;;;;;;;;;;:26;;;;;;;;;;;;5543:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5632:7;:5;:7::i;:::-;5618:21;;:10;:21;;;:64;;;;5657:8;:19;5666:9;5657:19;;;;;;;;;;;:25;;;;;;;;;;;;5643:39;;:10;:39;;;5618:64;5610:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;5759:11;5725:8;:19;5734:9;5725:19;;;;;;;;;;;:31;;:45;;;;;;:::i;:::-;;5446:332;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2394:93:11:-;2441:13;2473:7;2466:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:93;:::o;1593:28:25:-;;;;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3487:144:11:-;3572:52;3591:12;:10;:12::i;:::-;3605:8;3615;3572:18;:52::i;:::-;3487:144;;:::o;9808::25:-;1531:13:2;:11;:13::i;:::-;9913:9:25::1;9906:26;;;9933:2;9937:6;9906:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9808:144:::0;;;:::o;4630:233:11:-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;4818:12;:10;:12::i;:::-;4832:4;4838:2;4842:7;4851:4;4784:33;:72::i;:::-;4630:233;;;;:::o;3730:194:25:-;1531:13:2;:11;:13::i;:::-;3838:1:25::1;3814:26;;:12;:26;;::::0;3806:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3903:12;3877:11;;:39;;;;;;;;;;;;;;;;;;3730:194:::0;:::o;1210:593:14:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;10713:455:25:-;10787:17;10815:20;10846:25;10882:16;10909:13;10933:17;10961:22;11002:17;11022:9;:21;11032:10;11022:21;;;;;;;;;;;11002:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11062:1;:11;;;11075:1;:14;;;11091:1;:13;;;11106:1;:10;;;11118:1;:10;;;11130:1;:11;;;11143:1;:16;;;11054:106;;;;;;;;;;;;;;;10713:455;;;;;;;;;:::o;4070:134::-;2241:4:0;4130:18:25;;2473:16:0;2484:4;2473:10;:16::i;:::-;4161:35:25::1;1481:26;4187:8;4161:10;:35::i;:::-;4070:134:::0;;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;7315:1662:25:-;7529:22;1481:26;2473:16:0;2484:4;2473:10;:16::i;:::-;7564:19:25::1;7586:9;:21;7596:10;7586:21;;;;;;;;;;;7564:43;;7642:1;7626:2;:12;;;:17:::0;7618:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7686:2;:11;;;;;;;;;;;;7685:12;7677:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7745:4;7731:2;:11;;;:18;;;;;;;;;;;;;;;;;;7808:11;7804:482;;;7836:19;;:21;;;;;;;;;:::i;:::-;;;;;;7889:19;;7872:36;;7923:38;7933:2;:11;;;;;;;;;;;;7946:14;7923:9;:38::i;:::-;8069:1;8043:15;8037:29;:33;8033:119;;;8091:45;8104:14;8120:15;8091:12;:45::i;:::-;8033:119;8186:14;8166:2;:17;;:34;;;;8262:2;:11;;;;;;;;;;;;8220:54;;8250:10;8234:14;8220:54;;;;;;;;;;7804:482;8393:1;8372:18;:22;8368:511;;;8451:1;8419:34;;8427:11;;;;;;;;;;;8419:34;;::::0;8411:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8493:20;8516:8;:22;8525:2;:12;;;8516:22;;;;;;;;;;;:28;;;;;;;;;;;;8493:51;;8658:11;;;;;;;;;;;:16;;;8675:12;8689:18;8658:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8768:18;8723:8;:22;8732:2;:12;;;8723:22;;;;;;;;;;;:41;;;:63;;;;;;;:::i;:::-;;;;;;;;8834:12;8806:61;;8820:2;:12;;;8806:61;8848:18;8806:61;;;;;;:::i;:::-;;;;;;;;8396:483;8368:511;8925:2;:12;;;8913:10;8896:73;8939:10;8951:2;:17;;;8896:73;;;;;;;:::i;:::-;;;;;;;;7553:1424;7315:1662:::0;;;;;;;:::o;1441:66::-;1481:26;1441:66;:::o;3665:153:11:-;3753:4;3776:18;:25;3795:5;3776:25;;;;;;;;;;;;;;;:35;3802:8;3776:35;;;;;;;;;;;;;;;;;;;;;;;;;3769:42;;3665:153;;;;:::o;10051:429:25:-;10123:18;10152:22;10185:12;10208:17;10236:25;10272:11;10294:19;10332:16;10351:8;:19;10360:9;10351:19;;;;;;;;;;;10332:38;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10389:1;:6;;;10397:1;:10;;;10409:1;:6;;;10417:1;:7;;;10426:1;:13;;;10441:1;:8;;;10451:1;:20;;;10381:91;;;;;;;;;;;;;;;10051:429;;;;;;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;9168:309:25:-;9270:10;9250:30;;:16;9258:7;9250;:16::i;:::-;:30;;;9242:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9311:41;9328:10;9340:2;9344:7;9311:16;:41::i;:::-;9394:2;9368:29;;9391:1;9382:7;9368:29;;;;;;;;;;9168:309;;:::o;2541:202:0:-;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;15858:241:11:-;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;;16004:1;15987:19;;:5;:19;;;15983:88;;16052:7;16029:31;;;;;;;;;;;:::i;:::-;;;;;;;;15983:88;16087:5;16080:12;;;15858:241;;;:::o;5609:127::-;5679:7;5705:15;:24;5721:7;5705:24;;;;;;;;;;;;;;;;;;;;;5698:31;;5609:127;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;14138:120:11:-;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;:::-;14138:120;;;:::o;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;;8720:1;8704:18;;:4;:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;8700:86;8846:1;8830:18;;:4;:18;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;9056:1;9037:9;:15;9047:4;9037:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;8826:256;9110:1;9096:16;;:2;:16;;;9092:107;;9173:1;9156:9;:13;9166:2;9156:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9092:107;9228:2;9209:7;:16;9217:7;9209:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9265:7;9261:2;9246:27;;9255:4;9246:27;;;;;;;;;;;;9291:4;9284:11;;;8507:795;;;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;11156:227:11:-;11207:21;11231:40;11247:1;11251:7;11268:1;11231:7;:40::i;:::-;11207:64;;11310:1;11285:27;;:13;:27;;;11281:96;;11358:7;11335:31;;;;;;;;;;;:::i;:::-;;;;;;;;11281:96;11197:186;11156:227;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15311:312:11:-;15438:1;15418:22;;:8;:22;;;15414:91;;15485:8;15463:31;;;;;;;;;;;:::i;:::-;;;;;;;;15414:91;15552:8;15514:18;:25;15533:5;15514:25;;;;;;;;;;;;;;;:35;15540:8;15514:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15597:8;15575:41;;15590:5;15575:41;;;15607:8;15575:41;;;;;;:::i;:::-;;;;;;;;15311:312;;;:::o;993:926:16:-;1190:1;1173:2;:14;;;:18;1169:744;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:325;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:325;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:744;993:926;;;;;:::o;3026:92:11:-;3077:13;3102:9;;;;;;;;;;;;;;3026:92;:::o;2529:255::-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;:8;:10::i;:::-;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:75;2695:82;;;2529:255;;;:::o;10302:100::-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;:::-;10302:100;;:::o;1931:167:14:-;2044:9;2022:10;:19;2033:7;2022:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2068:23;2083:7;2068:23;;;;;;:::i;:::-;;;;;;;;1931:167;;:::o;961:207::-;1063:4;816:10;809:18;;1086:35;;;:11;:35;;;;:75;;;;1125:36;1149:11;1125:23;:36::i;:::-;1086:75;1079:82;;961:207;;;:::o;5378:115:11:-;5444:7;5470;:16;5478:7;5470:16;;;;;;;;;;;;;;;;;;;;;5463:23;;5378:115;;;:::o;14440:662::-;14600:9;:31;;;;14629:1;14613:18;;:4;:18;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;;14829:1;14813:18;;:4;:18;;;;:35;;;;;14844:4;14835:13;;:5;:13;;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14931:4;14909:27;;;;;;;;;;;:::i;:::-;;;;;;;;14809:142;14969:9;14965:81;;;15023:7;15019:2;15003:28;;15012:5;15003:28;;;;;;;;;;;;14965:81;14633:423;14596:460;15093:2;15066:15;:24;15082:7;15066:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14440:662;;;;:::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;6938:1;6921:19;;:5;:19;;;6917:186;;6990:7;6967:31;;;;;;;;;;;:::i;:::-;;;;;;;;6917:186;7071:7;7080;7044:44;;;;;;;;;;;;:::i;:::-;;;;;;;;6858:255;6751:368;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;1308:634:19:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1618:6;1611:4;1603:6;1599:17;1595:30;1588:37;;1652:247;1659:4;1652:247;;;1683:5;;;;;;;;1787:10;1782:2;1775:5;1771:14;1766:32;1761:3;1753:46;1843:2;1834:11;;;;;;:::i;:::-;;;;;1876:1;1867:5;:10;1652:247;1863:21;1652:247;1919:6;1912:13;;;;;1308:634;;;:::o;10623:207:11:-;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;10779:12;:10;:12::i;:::-;10801:1;10805:2;10809:7;10818:4;10745:33;:78::i;:::-;10623:207;;;:::o;1527:300::-;1629:4;1679:25;1664:40;;;:11;:40;;;;:104;;;;1735:33;1720:48;;;:11;:48;;;;1664:104;:156;;;;1784:36;1808:11;1784:23;:36::i;:::-;1664:156;1645:175;;1527:300;;;:::o;6047:272::-;6150:4;6204:1;6185:21;;:7;:21;;;;:127;;;;;6232:7;6223:16;;:5;:16;;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:52;:88;;;;6304:7;6279:32;;:21;6292:7;6279:12;:21::i;:::-;:32;;;6223:88;6185:127;6166:146;;6047:272;;;;;:::o;29154:916:22:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;9624:327:11:-;9705:1;9691:16;;:2;:16;;;9687:87;;9760:1;9730:33;;;;;;;;;;;:::i;:::-;;;;;;;;9687:87;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;;9878:1;9853:27;;:13;:27;;;9849:96;;9931:1;9903:31;;;;;;;;;;;:::i;:::-;;;;;;;;9849:96;9677:274;9624:327;;:::o;730:146:20:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:118::-;4979:24;4997:5;4979:24;:::i;:::-;4974:3;4967:37;4892:118;;:::o;5016:1147::-;5331:4;5369:3;5358:9;5354:19;5346:27;;5419:9;5413:4;5409:20;5405:1;5394:9;5390:17;5383:47;5447:78;5520:4;5511:6;5447:78;:::i;:::-;5439:86;;5572:9;5566:4;5562:20;5557:2;5546:9;5542:18;5535:48;5600:78;5673:4;5664:6;5600:78;:::i;:::-;5592:86;;5688:72;5756:2;5745:9;5741:18;5732:6;5688:72;:::i;:::-;5770;5838:2;5827:9;5823:18;5814:6;5770:72;:::i;:::-;5890:9;5884:4;5880:20;5874:3;5863:9;5859:19;5852:49;5918:78;5991:4;5982:6;5918:78;:::i;:::-;5910:86;;6006:67;6068:3;6057:9;6053:19;6044:6;6006:67;:::i;:::-;6083:73;6151:3;6140:9;6136:19;6127:6;6083:73;:::i;:::-;5016:1147;;;;;;;;;;:::o;6169:619::-;6246:6;6254;6262;6311:2;6299:9;6290:7;6286:23;6282:32;6279:119;;;6317:79;;:::i;:::-;6279:119;6437:1;6462:53;6507:7;6498:6;6487:9;6483:22;6462:53;:::i;:::-;6452:63;;6408:117;6564:2;6590:53;6635:7;6626:6;6615:9;6611:22;6590:53;:::i;:::-;6580:63;;6535:118;6692:2;6718:53;6763:7;6754:6;6743:9;6739:22;6718:53;:::i;:::-;6708:63;;6663:118;6169:619;;;;;:::o;6794:77::-;6831:7;6860:5;6849:16;;6794:77;;;:::o;6877:122::-;6950:24;6968:5;6950:24;:::i;:::-;6943:5;6940:35;6930:63;;6989:1;6986;6979:12;6930:63;6877:122;:::o;7005:139::-;7051:5;7089:6;7076:20;7067:29;;7105:33;7132:5;7105:33;:::i;:::-;7005:139;;;;:::o;7150:329::-;7209:6;7258:2;7246:9;7237:7;7233:23;7229:32;7226:119;;;7264:79;;:::i;:::-;7226:119;7384:1;7409:53;7454:7;7445:6;7434:9;7430:22;7409:53;:::i;:::-;7399:63;;7355:117;7150:329;;;;:::o;7485:118::-;7572:24;7590:5;7572:24;:::i;:::-;7567:3;7560:37;7485:118;;:::o;7609:222::-;7702:4;7740:2;7729:9;7725:18;7717:26;;7753:71;7821:1;7810:9;7806:17;7797:6;7753:71;:::i;:::-;7609:222;;;;:::o;7837:965::-;8112:4;8150:3;8139:9;8135:19;8127:27;;8164:71;8232:1;8221:9;8217:17;8208:6;8164:71;:::i;:::-;8245:72;8313:2;8302:9;8298:18;8289:6;8245:72;:::i;:::-;8364:9;8358:4;8354:20;8349:2;8338:9;8334:18;8327:48;8392:78;8465:4;8456:6;8392:78;:::i;:::-;8384:86;;8480:72;8548:2;8537:9;8533:18;8524:6;8480:72;:::i;:::-;8562:67;8624:3;8613:9;8609:19;8600:6;8562:67;:::i;:::-;8639:73;8707:3;8696:9;8692:19;8683:6;8639:73;:::i;:::-;8722;8790:3;8779:9;8775:19;8766:6;8722:73;:::i;:::-;7837:965;;;;;;;;;;:::o;8808:474::-;8876:6;8884;8933:2;8921:9;8912:7;8908:23;8904:32;8901:119;;;8939:79;;:::i;:::-;8901:119;9059:1;9084:53;9129:7;9120:6;9109:9;9105:22;9084:53;:::i;:::-;9074:63;;9030:117;9186:2;9212:53;9257:7;9248:6;9237:9;9233:22;9212:53;:::i;:::-;9202:63;;9157:118;8808:474;;;;;:::o;9288:329::-;9347:6;9396:2;9384:9;9375:7;9371:23;9367:32;9364:119;;;9402:79;;:::i;:::-;9364:119;9522:1;9547:53;9592:7;9583:6;9572:9;9568:22;9547:53;:::i;:::-;9537:63;;9493:117;9288:329;;;;:::o;9623:222::-;9716:4;9754:2;9743:9;9739:18;9731:26;;9767:71;9835:1;9824:9;9820:17;9811:6;9767:71;:::i;:::-;9623:222;;;;:::o;9851:117::-;9960:1;9957;9950:12;9974:117;10083:1;10080;10073:12;10097:180;10145:77;10142:1;10135:88;10242:4;10239:1;10232:15;10266:4;10263:1;10256:15;10283:281;10366:27;10388:4;10366:27;:::i;:::-;10358:6;10354:40;10496:6;10484:10;10481:22;10460:18;10448:10;10445:34;10442:62;10439:88;;;10507:18;;:::i;:::-;10439:88;10547:10;10543:2;10536:22;10326:238;10283:281;;:::o;10570:129::-;10604:6;10631:20;;:::i;:::-;10621:30;;10660:33;10688:4;10680:6;10660:33;:::i;:::-;10570:129;;;:::o;10705:308::-;10767:4;10857:18;10849:6;10846:30;10843:56;;;10879:18;;:::i;:::-;10843:56;10917:29;10939:6;10917:29;:::i;:::-;10909:37;;11001:4;10995;10991:15;10983:23;;10705:308;;;:::o;11019:148::-;11117:6;11112:3;11107;11094:30;11158:1;11149:6;11144:3;11140:16;11133:27;11019:148;;;:::o;11173:425::-;11251:5;11276:66;11292:49;11334:6;11292:49;:::i;:::-;11276:66;:::i;:::-;11267:75;;11365:6;11358:5;11351:21;11403:4;11396:5;11392:16;11441:3;11432:6;11427:3;11423:16;11420:25;11417:112;;;11448:79;;:::i;:::-;11417:112;11538:54;11585:6;11580:3;11575;11538:54;:::i;:::-;11257:341;11173:425;;;;;:::o;11618:340::-;11674:5;11723:3;11716:4;11708:6;11704:17;11700:27;11690:122;;11731:79;;:::i;:::-;11690:122;11848:6;11835:20;11873:79;11948:3;11940:6;11933:4;11925:6;11921:17;11873:79;:::i;:::-;11864:88;;11680:278;11618:340;;;;:::o;11964:1451::-;12089:6;12097;12105;12113;12121;12170:3;12158:9;12149:7;12145:23;12141:33;12138:120;;;12177:79;;:::i;:::-;12138:120;12325:1;12314:9;12310:17;12297:31;12355:18;12347:6;12344:30;12341:117;;;12377:79;;:::i;:::-;12341:117;12482:63;12537:7;12528:6;12517:9;12513:22;12482:63;:::i;:::-;12472:73;;12268:287;12622:2;12611:9;12607:18;12594:32;12653:18;12645:6;12642:30;12639:117;;;12675:79;;:::i;:::-;12639:117;12780:63;12835:7;12826:6;12815:9;12811:22;12780:63;:::i;:::-;12770:73;;12565:288;12892:2;12918:53;12963:7;12954:6;12943:9;12939:22;12918:53;:::i;:::-;12908:63;;12863:118;13020:2;13046:53;13091:7;13082:6;13071:9;13067:22;13046:53;:::i;:::-;13036:63;;12991:118;13176:3;13165:9;13161:19;13148:33;13208:18;13200:6;13197:30;13194:117;;;13230:79;;:::i;:::-;13194:117;13335:63;13390:7;13381:6;13370:9;13366:22;13335:63;:::i;:::-;13325:73;;13119:289;11964:1451;;;;;;;;:::o;13421:60::-;13449:3;13470:5;13463:12;;13421:60;;;:::o;13487:142::-;13537:9;13570:53;13588:34;13597:24;13615:5;13597:24;:::i;:::-;13588:34;:::i;:::-;13570:53;:::i;:::-;13557:66;;13487:142;;;:::o;13635:126::-;13685:9;13718:37;13749:5;13718:37;:::i;:::-;13705:50;;13635:126;;;:::o;13767:146::-;13837:9;13870:37;13901:5;13870:37;:::i;:::-;13857:50;;13767:146;;;:::o;13919:171::-;14026:57;14077:5;14026:57;:::i;:::-;14021:3;14014:70;13919:171;;:::o;14096:262::-;14209:4;14247:2;14236:9;14232:18;14224:26;;14260:91;14348:1;14337:9;14333:17;14324:6;14260:91;:::i;:::-;14096:262;;;;:::o;14364:799::-;14451:6;14459;14467;14516:2;14504:9;14495:7;14491:23;14487:32;14484:119;;;14522:79;;:::i;:::-;14484:119;14642:1;14667:53;14712:7;14703:6;14692:9;14688:22;14667:53;:::i;:::-;14657:63;;14613:117;14769:2;14795:53;14840:7;14831:6;14820:9;14816:22;14795:53;:::i;:::-;14785:63;;14740:118;14925:2;14914:9;14910:18;14897:32;14956:18;14948:6;14945:30;14942:117;;;14978:79;;:::i;:::-;14942:117;15083:63;15138:7;15129:6;15118:9;15114:22;15083:63;:::i;:::-;15073:73;;14868:288;14364:799;;;;;:::o;15169:654::-;15247:6;15255;15304:2;15292:9;15283:7;15279:23;15275:32;15272:119;;;15310:79;;:::i;:::-;15272:119;15430:1;15455:53;15500:7;15491:6;15480:9;15476:22;15455:53;:::i;:::-;15445:63;;15401:117;15585:2;15574:9;15570:18;15557:32;15616:18;15608:6;15605:30;15602:117;;;15638:79;;:::i;:::-;15602:117;15743:63;15798:7;15789:6;15778:9;15774:22;15743:63;:::i;:::-;15733:73;;15528:288;15169:654;;;;;:::o;15829:116::-;15899:21;15914:5;15899:21;:::i;:::-;15892:5;15889:32;15879:60;;15935:1;15932;15925:12;15879:60;15829:116;:::o;15951:133::-;15994:5;16032:6;16019:20;16010:29;;16048:30;16072:5;16048:30;:::i;:::-;15951:133;;;;:::o;16090:468::-;16155:6;16163;16212:2;16200:9;16191:7;16187:23;16183:32;16180:119;;;16218:79;;:::i;:::-;16180:119;16338:1;16363:53;16408:7;16399:6;16388:9;16384:22;16363:53;:::i;:::-;16353:63;;16309:117;16465:2;16491:50;16533:7;16524:6;16513:9;16509:22;16491:50;:::i;:::-;16481:60;;16436:115;16090:468;;;;;:::o;16564:307::-;16625:4;16715:18;16707:6;16704:30;16701:56;;;16737:18;;:::i;:::-;16701:56;16775:29;16797:6;16775:29;:::i;:::-;16767:37;;16859:4;16853;16849:15;16841:23;;16564:307;;;:::o;16877:423::-;16954:5;16979:65;16995:48;17036:6;16995:48;:::i;:::-;16979:65;:::i;:::-;16970:74;;17067:6;17060:5;17053:21;17105:4;17098:5;17094:16;17143:3;17134:6;17129:3;17125:16;17122:25;17119:112;;;17150:79;;:::i;:::-;17119:112;17240:54;17287:6;17282:3;17277;17240:54;:::i;:::-;16960:340;16877:423;;;;;:::o;17319:338::-;17374:5;17423:3;17416:4;17408:6;17404:17;17400:27;17390:122;;17431:79;;:::i;:::-;17390:122;17548:6;17535:20;17573:78;17647:3;17639:6;17632:4;17624:6;17620:17;17573:78;:::i;:::-;17564:87;;17380:277;17319:338;;;;:::o;17663:943::-;17758:6;17766;17774;17782;17831:3;17819:9;17810:7;17806:23;17802:33;17799:120;;;17838:79;;:::i;:::-;17799:120;17958:1;17983:53;18028:7;18019:6;18008:9;18004:22;17983:53;:::i;:::-;17973:63;;17929:117;18085:2;18111:53;18156:7;18147:6;18136:9;18132:22;18111:53;:::i;:::-;18101:63;;18056:118;18213:2;18239:53;18284:7;18275:6;18264:9;18260:22;18239:53;:::i;:::-;18229:63;;18184:118;18369:2;18358:9;18354:18;18341:32;18400:18;18392:6;18389:30;18386:117;;;18422:79;;:::i;:::-;18386:117;18527:62;18581:7;18572:6;18561:9;18557:22;18527:62;:::i;:::-;18517:72;;18312:287;17663:943;;;;;;;:::o;18612:939::-;18705:6;18713;18721;18729;18778:3;18766:9;18757:7;18753:23;18749:33;18746:120;;;18785:79;;:::i;:::-;18746:120;18905:1;18930:53;18975:7;18966:6;18955:9;18951:22;18930:53;:::i;:::-;18920:63;;18876:117;19032:2;19058:50;19100:7;19091:6;19080:9;19076:22;19058:50;:::i;:::-;19048:60;;19003:115;19185:2;19174:9;19170:18;19157:32;19216:18;19208:6;19205:30;19202:117;;;19238:79;;:::i;:::-;19202:117;19343:63;19398:7;19389:6;19378:9;19374:22;19343:63;:::i;:::-;19333:73;;19128:288;19455:2;19481:53;19526:7;19517:6;19506:9;19502:22;19481:53;:::i;:::-;19471:63;;19426:118;18612:939;;;;;;;:::o;19557:474::-;19625:6;19633;19682:2;19670:9;19661:7;19657:23;19653:32;19650:119;;;19688:79;;:::i;:::-;19650:119;19808:1;19833:53;19878:7;19869:6;19858:9;19854:22;19833:53;:::i;:::-;19823:63;;19779:117;19935:2;19961:53;20006:7;19997:6;19986:9;19982:22;19961:53;:::i;:::-;19951:63;;19906:118;19557:474;;;;;:::o;20037:180::-;20085:77;20082:1;20075:88;20182:4;20179:1;20172:15;20206:4;20203:1;20196:15;20223:320;20267:6;20304:1;20298:4;20294:12;20284:22;;20351:1;20345:4;20341:12;20372:18;20362:81;;20428:4;20420:6;20416:17;20406:27;;20362:81;20490:2;20482:6;20479:14;20459:18;20456:38;20453:84;;20509:18;;:::i;:::-;20453:84;20274:269;20223:320;;;:::o;20549:442::-;20698:4;20736:2;20725:9;20721:18;20713:26;;20749:71;20817:1;20806:9;20802:17;20793:6;20749:71;:::i;:::-;20830:72;20898:2;20887:9;20883:18;20874:6;20830:72;:::i;:::-;20912;20980:2;20969:9;20965:18;20956:6;20912:72;:::i;:::-;20549:442;;;;;;:::o;20997:165::-;21137:17;21133:1;21125:6;21121:14;21114:41;20997:165;:::o;21168:366::-;21310:3;21331:67;21395:2;21390:3;21331:67;:::i;:::-;21324:74;;21407:93;21496:3;21407:93;:::i;:::-;21525:2;21520:3;21516:12;21509:19;;21168:366;;;:::o;21540:419::-;21706:4;21744:2;21733:9;21729:18;21721:26;;21793:9;21787:4;21783:20;21779:1;21768:9;21764:17;21757:47;21821:131;21947:4;21821:131;:::i;:::-;21813:139;;21540:419;;;:::o;21965:172::-;22105:24;22101:1;22093:6;22089:14;22082:48;21965:172;:::o;22143:366::-;22285:3;22306:67;22370:2;22365:3;22306:67;:::i;:::-;22299:74;;22382:93;22471:3;22382:93;:::i;:::-;22500:2;22495:3;22491:12;22484:19;;22143:366;;;:::o;22515:419::-;22681:4;22719:2;22708:9;22704:18;22696:26;;22768:9;22762:4;22758:20;22754:1;22743:9;22739:17;22732:47;22796:131;22922:4;22796:131;:::i;:::-;22788:139;;22515:419;;;:::o;22940:180::-;22988:77;22985:1;22978:88;23085:4;23082:1;23075:15;23109:4;23106:1;23099:15;23126:191;23166:3;23185:20;23203:1;23185:20;:::i;:::-;23180:25;;23219:20;23237:1;23219:20;:::i;:::-;23214:25;;23262:1;23259;23255:9;23248:16;;23283:3;23280:1;23277:10;23274:36;;;23290:18;;:::i;:::-;23274:36;23126:191;;;;:::o;23323:141::-;23372:4;23395:3;23387:11;;23418:3;23415:1;23408:14;23452:4;23449:1;23439:18;23431:26;;23323:141;;;:::o;23470:93::-;23507:6;23554:2;23549;23542:5;23538:14;23534:23;23524:33;;23470:93;;;:::o;23569:107::-;23613:8;23663:5;23657:4;23653:16;23632:37;;23569:107;;;;:::o;23682:393::-;23751:6;23801:1;23789:10;23785:18;23824:97;23854:66;23843:9;23824:97;:::i;:::-;23942:39;23972:8;23961:9;23942:39;:::i;:::-;23930:51;;24014:4;24010:9;24003:5;23999:21;23990:30;;24063:4;24053:8;24049:19;24042:5;24039:30;24029:40;;23758:317;;23682:393;;;;;:::o;24081:142::-;24131:9;24164:53;24182:34;24191:24;24209:5;24191:24;:::i;:::-;24182:34;:::i;:::-;24164:53;:::i;:::-;24151:66;;24081:142;;;:::o;24229:75::-;24272:3;24293:5;24286:12;;24229:75;;;:::o;24310:269::-;24420:39;24451:7;24420:39;:::i;:::-;24481:91;24530:41;24554:16;24530:41;:::i;:::-;24522:6;24515:4;24509:11;24481:91;:::i;:::-;24475:4;24468:105;24386:193;24310:269;;;:::o;24585:73::-;24630:3;24585:73;:::o;24664:189::-;24741:32;;:::i;:::-;24782:65;24840:6;24832;24826:4;24782:65;:::i;:::-;24717:136;24664:189;;:::o;24859:186::-;24919:120;24936:3;24929:5;24926:14;24919:120;;;24990:39;25027:1;25020:5;24990:39;:::i;:::-;24963:1;24956:5;24952:13;24943:22;;24919:120;;;24859:186;;:::o;25051:543::-;25152:2;25147:3;25144:11;25141:446;;;25186:38;25218:5;25186:38;:::i;:::-;25270:29;25288:10;25270:29;:::i;:::-;25260:8;25256:44;25453:2;25441:10;25438:18;25435:49;;;25474:8;25459:23;;25435:49;25497:80;25553:22;25571:3;25553:22;:::i;:::-;25543:8;25539:37;25526:11;25497:80;:::i;:::-;25156:431;;25141:446;25051:543;;;:::o;25600:117::-;25654:8;25704:5;25698:4;25694:16;25673:37;;25600:117;;;;:::o;25723:169::-;25767:6;25800:51;25848:1;25844:6;25836:5;25833:1;25829:13;25800:51;:::i;:::-;25796:56;25881:4;25875;25871:15;25861:25;;25774:118;25723:169;;;;:::o;25897:295::-;25973:4;26119:29;26144:3;26138:4;26119:29;:::i;:::-;26111:37;;26181:3;26178:1;26174:11;26168:4;26165:21;26157:29;;25897:295;;;;:::o;26197:1395::-;26314:37;26347:3;26314:37;:::i;:::-;26416:18;26408:6;26405:30;26402:56;;;26438:18;;:::i;:::-;26402:56;26482:38;26514:4;26508:11;26482:38;:::i;:::-;26567:67;26627:6;26619;26613:4;26567:67;:::i;:::-;26661:1;26685:4;26672:17;;26717:2;26709:6;26706:14;26734:1;26729:618;;;;27391:1;27408:6;27405:77;;;27457:9;27452:3;27448:19;27442:26;27433:35;;27405:77;27508:67;27568:6;27561:5;27508:67;:::i;:::-;27502:4;27495:81;27364:222;26699:887;;26729:618;26781:4;26777:9;26769:6;26765:22;26815:37;26847:4;26815:37;:::i;:::-;26874:1;26888:208;26902:7;26899:1;26896:14;26888:208;;;26981:9;26976:3;26972:19;26966:26;26958:6;26951:42;27032:1;27024:6;27020:14;27010:24;;27079:2;27068:9;27064:18;27051:31;;26925:4;26922:1;26918:12;26913:17;;26888:208;;;27124:6;27115:7;27112:19;27109:179;;;27182:9;27177:3;27173:19;27167:26;27225:48;27267:4;27259:6;27255:17;27244:9;27225:48;:::i;:::-;27217:6;27210:64;27132:156;27109:179;27334:1;27330;27322:6;27318:14;27314:22;27308:4;27301:36;26736:611;;;26699:887;;26289:1303;;;26197:1395;;:::o;27598:514::-;27759:4;27797:2;27786:9;27782:18;27774:26;;27846:9;27840:4;27836:20;27832:1;27821:9;27817:17;27810:47;27874:78;27947:4;27938:6;27874:78;:::i;:::-;27866:86;;27999:9;27993:4;27989:20;27984:2;27973:9;27969:18;27962:48;28027:78;28100:4;28091:6;28027:78;:::i;:::-;28019:86;;27598:514;;;;;:::o;28118:167::-;28258:19;28254:1;28246:6;28242:14;28235:43;28118:167;:::o;28291:366::-;28433:3;28454:67;28518:2;28513:3;28454:67;:::i;:::-;28447:74;;28530:93;28619:3;28530:93;:::i;:::-;28648:2;28643:3;28639:12;28632:19;;28291:366;;;:::o;28663:419::-;28829:4;28867:2;28856:9;28852:18;28844:26;;28916:9;28910:4;28906:20;28902:1;28891:9;28887:17;28880:47;28944:131;29070:4;28944:131;:::i;:::-;28936:139;;28663:419;;;:::o;29088:233::-;29127:3;29150:24;29168:5;29150:24;:::i;:::-;29141:33;;29196:66;29189:5;29186:77;29183:103;;29266:18;;:::i;:::-;29183:103;29313:1;29306:5;29302:13;29295:20;;29088:233;;;:::o;29327:533::-;29496:4;29534:2;29523:9;29519:18;29511:26;;29547:71;29615:1;29604:9;29600:17;29591:6;29547:71;:::i;:::-;29665:9;29659:4;29655:20;29650:2;29639:9;29635:18;29628:48;29693:78;29766:4;29757:6;29693:78;:::i;:::-;29685:86;;29781:72;29849:2;29838:9;29834:18;29825:6;29781:72;:::i;:::-;29327:533;;;;;;:::o;29866:177::-;30006:29;30002:1;29994:6;29990:14;29983:53;29866:177;:::o;30049:366::-;30191:3;30212:67;30276:2;30271:3;30212:67;:::i;:::-;30205:74;;30288:93;30377:3;30288:93;:::i;:::-;30406:2;30401:3;30397:12;30390:19;;30049:366;;;:::o;30421:419::-;30587:4;30625:2;30614:9;30610:18;30602:26;;30674:9;30668:4;30664:20;30660:1;30649:9;30645:17;30638:47;30702:131;30828:4;30702:131;:::i;:::-;30694:139;;30421:419;;;:::o;30846:332::-;30967:4;31005:2;30994:9;30990:18;30982:26;;31018:71;31086:1;31075:9;31071:17;31062:6;31018:71;:::i;:::-;31099:72;31167:2;31156:9;31152:18;31143:6;31099:72;:::i;:::-;30846:332;;;;;:::o;31184:137::-;31238:5;31269:6;31263:13;31254:22;;31285:30;31309:5;31285:30;:::i;:::-;31184:137;;;;:::o;31327:345::-;31394:6;31443:2;31431:9;31422:7;31418:23;31414:32;31411:119;;;31449:79;;:::i;:::-;31411:119;31569:1;31594:61;31647:7;31638:6;31627:9;31623:22;31594:61;:::i;:::-;31584:71;;31540:125;31327:345;;;;:::o;31678:171::-;31818:23;31814:1;31806:6;31802:14;31795:47;31678:171;:::o;31855:366::-;31997:3;32018:67;32082:2;32077:3;32018:67;:::i;:::-;32011:74;;32094:93;32183:3;32094:93;:::i;:::-;32212:2;32207:3;32203:12;32196:19;;31855:366;;;:::o;32227:419::-;32393:4;32431:2;32420:9;32416:18;32408:26;;32480:9;32474:4;32470:20;32466:1;32455:9;32451:17;32444:47;32508:131;32634:4;32508:131;:::i;:::-;32500:139;;32227:419;;;:::o;32652:148::-;32754:11;32791:3;32776:18;;32652:148;;;;:::o;32806:390::-;32912:3;32940:39;32973:5;32940:39;:::i;:::-;32995:89;33077:6;33072:3;32995:89;:::i;:::-;32988:96;;33093:65;33151:6;33146:3;33139:4;33132:5;33128:16;33093:65;:::i;:::-;33183:6;33178:3;33174:16;33167:23;;32916:280;32806:390;;;;:::o;33202:435::-;33382:3;33404:95;33495:3;33486:6;33404:95;:::i;:::-;33397:102;;33516:95;33607:3;33598:6;33516:95;:::i;:::-;33509:102;;33628:3;33621:10;;33202:435;;;;;:::o;33643:168::-;33783:20;33779:1;33771:6;33767:14;33760:44;33643:168;:::o;33817:366::-;33959:3;33980:67;34044:2;34039:3;33980:67;:::i;:::-;33973:74;;34056:93;34145:3;34056:93;:::i;:::-;34174:2;34169:3;34165:12;34158:19;;33817:366;;;:::o;34189:419::-;34355:4;34393:2;34382:9;34378:18;34370:26;;34442:9;34436:4;34432:20;34428:1;34417:9;34413:17;34406:47;34470:131;34596:4;34470:131;:::i;:::-;34462:139;;34189:419;;;:::o;34614:166::-;34754:18;34750:1;34742:6;34738:14;34731:42;34614:166;:::o;34786:366::-;34928:3;34949:67;35013:2;35008:3;34949:67;:::i;:::-;34942:74;;35025:93;35114:3;35025:93;:::i;:::-;35143:2;35138:3;35134:12;35127:19;;34786:366;;;:::o;35158:419::-;35324:4;35362:2;35351:9;35347:18;35339:26;;35411:9;35405:4;35401:20;35397:1;35386:9;35382:17;35375:47;35439:131;35565:4;35439:131;:::i;:::-;35431:139;;35158:419;;;:::o;35583:170::-;35723:22;35719:1;35711:6;35707:14;35700:46;35583:170;:::o;35759:366::-;35901:3;35922:67;35986:2;35981:3;35922:67;:::i;:::-;35915:74;;35998:93;36087:3;35998:93;:::i;:::-;36116:2;36111:3;36107:12;36100:19;;35759:366;;;:::o;36131:419::-;36297:4;36335:2;36324:9;36320:18;36312:26;;36384:9;36378:4;36374:20;36370:1;36359:9;36355:17;36348:47;36412:131;36538:4;36412:131;:::i;:::-;36404:139;;36131:419;;;:::o;36556:98::-;36607:6;36641:5;36635:12;36625:22;;36556:98;;;:::o;36660:168::-;36743:11;36777:6;36772:3;36765:19;36817:4;36812:3;36808:14;36793:29;;36660:168;;;;:::o;36834:373::-;36920:3;36948:38;36980:5;36948:38;:::i;:::-;37002:70;37065:6;37060:3;37002:70;:::i;:::-;36995:77;;37081:65;37139:6;37134:3;37127:4;37120:5;37116:16;37081:65;:::i;:::-;37171:29;37193:6;37171:29;:::i;:::-;37166:3;37162:39;37155:46;;36924:283;36834:373;;;;:::o;37213:640::-;37408:4;37446:3;37435:9;37431:19;37423:27;;37460:71;37528:1;37517:9;37513:17;37504:6;37460:71;:::i;:::-;37541:72;37609:2;37598:9;37594:18;37585:6;37541:72;:::i;:::-;37623;37691:2;37680:9;37676:18;37667:6;37623:72;:::i;:::-;37742:9;37736:4;37732:20;37727:2;37716:9;37712:18;37705:48;37770:76;37841:4;37832:6;37770:76;:::i;:::-;37762:84;;37213:640;;;;;;;:::o;37859:141::-;37915:5;37946:6;37940:13;37931:22;;37962:32;37988:5;37962:32;:::i;:::-;37859:141;;;;:::o;38006:349::-;38075:6;38124:2;38112:9;38103:7;38099:23;38095:32;38092:119;;;38130:79;;:::i;:::-;38092:119;38250:1;38275:63;38330:7;38321:6;38310:9;38306:22;38275:63;:::i;:::-;38265:73;;38221:127;38006:349;;;;:::o;38361:332::-;38482:4;38520:2;38509:9;38505:18;38497:26;;38533:71;38601:1;38590:9;38586:17;38577:6;38533:71;:::i;:::-;38614:72;38682:2;38671:9;38667:18;38658:6;38614:72;:::i;:::-;38361:332;;;;;:::o;38699:180::-;38747:77;38744:1;38737:88;38844:4;38841:1;38834:15;38868:4;38865:1;38858:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","VERIFIER_ROLE()":"e7705db6","addVerifier(address)":"9000b3d6","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","carbonToken()":"82a71ef2","evidences(uint256)":"2e4546cd","getApproved(uint256)":"081812fc","getEvidence(uint256)":"c956f143","getProject(uint256)":"f0f3f2c8","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","projects(uint256)":"107046bd","registerProject(string,string,uint256,address,string)":"80aba8fe","removeVerifier(address)":"ca2dfd0a","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","rescueERC20(address,address,uint256)":"b2118a8d","retireReceipt(uint256)":"40c80852","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setCarbonToken(address)":"c6bdee61","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalProjects()":"9c361e4e","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transferReceipt(address,uint256)":"f7f7229e","updateProjectMetadata(uint256,string)":"91546c34","uploadEvidence(uint256,bytes32,string)":"83f8187c","verifyEvidenceAndIssue(uint256,bool,string,uint256)":"e4a49b46"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CreditsMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"evidenceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"evidenceHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"name\":\"EvidenceUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"evidenceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receiptTokenId\",\"type\":\"uint256\"}],\"name\":\"EvidenceVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"ProjectRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"evidenceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ReceiptMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ReceiptRetired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"addVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"carbonToken\",\"outputs\":[{\"internalType\":\"contract CarbonToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"evidences\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"evidenceHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiptTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"evidenceId\",\"type\":\"uint256\"}],\"name\":\"getEvidence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"evidenceHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiptTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"getProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"area\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"area\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalIssuedCredits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"area\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerProject\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"removeVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"retireReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"setCarbonToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateProjectMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"evidenceHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"evidenceURI\",\"type\":\"string\"}],\"name\":\"uploadEvidence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"evidenceId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"evidenceId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintReceipt\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"receiptTokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mintFungibleAmount\",\"type\":\"uint256\"}],\"name\":\"verifyEvidenceAndIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiptTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"registerProject(string,string,uint256,address,string)\":{\"params\":{\"area\":\"Area measure (units documented by off-chain)\",\"location\":\"Human readable location or geojson\",\"metadataURI\":\"IPFS metadata URI describing the project\",\"name\":\"Project name\",\"ownerAddr\":\"Wallet address that will receive credits\"},\"returns\":{\"projectId\":\"newly assigned id\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uploadEvidence(uint256,bytes32,string)\":{\"params\":{\"evidenceHash\":\"SHA-256 (or chosen) hash of the evidence payload\",\"evidenceURI\":\"IPFS CID or URI for details\",\"projectId\":\"project the evidence belongs to\"},\"returns\":{\"evidenceId\":\"evidenceId\"}},\"verifyEvidenceAndIssue(uint256,bool,string,uint256)\":{\"params\":{\"evidenceId\":\"evidence to verify\",\"mintFungibleAmount\":\"amount of ERC20 token to mint to project owner (in token base units)\",\"mintReceipt\":\"whether to mint an NFT receipt for the evidence (true = mint)\",\"receiptTokenURI\":\"tokenURI for the NFT receipt if minted\"}}},\"title\":\"BlueCarbonRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"registerProject(string,string,uint256,address,string)\":{\"notice\":\"Register a new restoration project\"},\"rescueERC20(address,address,uint256)\":{\"notice\":\"Admin / owner can withdraw accidentally sent ERC20 tokens (safety)\"},\"retireReceipt(uint256)\":{\"notice\":\"Retire (burn) a receipt NFT\"},\"transferReceipt(address,uint256)\":{\"notice\":\"Wrapper to transfer a receipt NFT (standard ERC721 transfer allowed too)\"},\"uploadEvidence(uint256,bytes32,string)\":{\"notice\":\"Upload an evidence anchor (off-chain file hashed + stored in IPFS)\"},\"verifyEvidenceAndIssue(uint256,bool,string,uint256)\":{\"notice\":\"Verifier approves evidence -> optional mint receipt NFT and/or mint fungible credits\"}},\"notice\":\"Registry for blue carbon restoration projects, MRV evidence anchoring,         verifier/admin roles, NFT receipts, and issuance of fungible carbon tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlueCarbonRegistry.sol\":\"BlueCarbonRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/BlueCarbonRegistry.sol\":{\"keccak256\":\"0x0c2b143df8c5eda22ddf1d133a6f722c10f5551731d7d6348b4d4fdb8bef8d51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8ff435b5d82ef104829c25c8457c39b0013e603b29be3c89bdaf2ecff0c5a09\",\"dweb:/ipfs/QmWBjYmNjFwGjfkphyQFxNtmjP1ezBeie16QZArRDmTSsv\"]}},\"version\":1}"},"CarbonToken":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ISSUER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_748":{"entryPoint":null,"id":748,"parameterSlots":2,"returnSlots":0},"@_7773":{"entryPoint":null,"id":7773,"parameterSlots":2,"returnSlots":0},"@_grantRole_257":{"entryPoint":113,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_2698":{"entryPoint":474,"id":2698,"parameterSlots":0,"returnSlots":1},"@hasRole_81":{"entryPoint":367,"id":81,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":855,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":625,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":482,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":652,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1082,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":975,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1379,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":1214,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1344,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1234,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1520,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":701,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1103,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1033,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1492,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":576,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1224,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1462,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":986,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":529,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1268,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":502,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":507,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":497,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":492,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":512,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1119,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1449,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1320,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1132,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1278,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1315,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:8576:26","nodeType":"YulBlock","src":"0:8576:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"423:28:26","nodeType":"YulBlock","src":"423:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:26","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:26","nodeType":"YulLiteral","src":"443:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:26","nodeType":"YulIdentifier","src":"433:6:26"},"nativeSrc":"433:12:26","nodeType":"YulFunctionCall","src":"433:12:26"},"nativeSrc":"433:12:26","nodeType":"YulExpressionStatement","src":"433:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:26","nodeType":"YulFunctionDefinition","src":"334:117:26"},{"body":{"nativeSrc":"546:28:26","nodeType":"YulBlock","src":"546:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:26","nodeType":"YulLiteral","src":"563:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:26","nodeType":"YulLiteral","src":"566:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:26","nodeType":"YulIdentifier","src":"556:6:26"},"nativeSrc":"556:12:26","nodeType":"YulFunctionCall","src":"556:12:26"},"nativeSrc":"556:12:26","nodeType":"YulExpressionStatement","src":"556:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:26","nodeType":"YulFunctionDefinition","src":"457:117:26"},{"body":{"nativeSrc":"628:54:26","nodeType":"YulBlock","src":"628:54:26","statements":[{"nativeSrc":"638:38:26","nodeType":"YulAssignment","src":"638:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:26","nodeType":"YulIdentifier","src":"656:5:26"},{"kind":"number","nativeSrc":"663:2:26","nodeType":"YulLiteral","src":"663:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:26","nodeType":"YulIdentifier","src":"652:3:26"},"nativeSrc":"652:14:26","nodeType":"YulFunctionCall","src":"652:14:26"},{"arguments":[{"kind":"number","nativeSrc":"672:2:26","nodeType":"YulLiteral","src":"672:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:26","nodeType":"YulIdentifier","src":"668:3:26"},"nativeSrc":"668:7:26","nodeType":"YulFunctionCall","src":"668:7:26"}],"functionName":{"name":"and","nativeSrc":"648:3:26","nodeType":"YulIdentifier","src":"648:3:26"},"nativeSrc":"648:28:26","nodeType":"YulFunctionCall","src":"648:28:26"},"variableNames":[{"name":"result","nativeSrc":"638:6:26","nodeType":"YulIdentifier","src":"638:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:26","nodeType":"YulTypedName","src":"611:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:26","nodeType":"YulTypedName","src":"621:6:26","type":""}],"src":"580:102:26"},{"body":{"nativeSrc":"716:152:26","nodeType":"YulBlock","src":"716:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:26","nodeType":"YulLiteral","src":"733:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:26","nodeType":"YulLiteral","src":"736:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:26","nodeType":"YulIdentifier","src":"726:6:26"},"nativeSrc":"726:88:26","nodeType":"YulFunctionCall","src":"726:88:26"},"nativeSrc":"726:88:26","nodeType":"YulExpressionStatement","src":"726:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:26","nodeType":"YulLiteral","src":"830:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:26","nodeType":"YulLiteral","src":"833:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:26","nodeType":"YulIdentifier","src":"823:6:26"},"nativeSrc":"823:15:26","nodeType":"YulFunctionCall","src":"823:15:26"},"nativeSrc":"823:15:26","nodeType":"YulExpressionStatement","src":"823:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:26","nodeType":"YulLiteral","src":"854:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:26","nodeType":"YulLiteral","src":"857:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:26","nodeType":"YulIdentifier","src":"847:6:26"},"nativeSrc":"847:15:26","nodeType":"YulFunctionCall","src":"847:15:26"},"nativeSrc":"847:15:26","nodeType":"YulExpressionStatement","src":"847:15:26"}]},"name":"panic_error_0x41","nativeSrc":"688:180:26","nodeType":"YulFunctionDefinition","src":"688:180:26"},{"body":{"nativeSrc":"917:238:26","nodeType":"YulBlock","src":"917:238:26","statements":[{"nativeSrc":"927:58:26","nodeType":"YulVariableDeclaration","src":"927:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:26","nodeType":"YulIdentifier","src":"949:6:26"},{"arguments":[{"name":"size","nativeSrc":"979:4:26","nodeType":"YulIdentifier","src":"979:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:26","nodeType":"YulIdentifier","src":"957:21:26"},"nativeSrc":"957:27:26","nodeType":"YulFunctionCall","src":"957:27:26"}],"functionName":{"name":"add","nativeSrc":"945:3:26","nodeType":"YulIdentifier","src":"945:3:26"},"nativeSrc":"945:40:26","nodeType":"YulFunctionCall","src":"945:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:26","nodeType":"YulTypedName","src":"931:10:26","type":""}]},{"body":{"nativeSrc":"1096:22:26","nodeType":"YulBlock","src":"1096:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:26","nodeType":"YulIdentifier","src":"1098:16:26"},"nativeSrc":"1098:18:26","nodeType":"YulFunctionCall","src":"1098:18:26"},"nativeSrc":"1098:18:26","nodeType":"YulExpressionStatement","src":"1098:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:26","nodeType":"YulIdentifier","src":"1039:10:26"},{"kind":"number","nativeSrc":"1051:18:26","nodeType":"YulLiteral","src":"1051:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:26","nodeType":"YulIdentifier","src":"1036:2:26"},"nativeSrc":"1036:34:26","nodeType":"YulFunctionCall","src":"1036:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:26","nodeType":"YulIdentifier","src":"1075:10:26"},{"name":"memPtr","nativeSrc":"1087:6:26","nodeType":"YulIdentifier","src":"1087:6:26"}],"functionName":{"name":"lt","nativeSrc":"1072:2:26","nodeType":"YulIdentifier","src":"1072:2:26"},"nativeSrc":"1072:22:26","nodeType":"YulFunctionCall","src":"1072:22:26"}],"functionName":{"name":"or","nativeSrc":"1033:2:26","nodeType":"YulIdentifier","src":"1033:2:26"},"nativeSrc":"1033:62:26","nodeType":"YulFunctionCall","src":"1033:62:26"},"nativeSrc":"1030:88:26","nodeType":"YulIf","src":"1030:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:26","nodeType":"YulLiteral","src":"1134:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:26","nodeType":"YulIdentifier","src":"1138:10:26"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:26","nodeType":"YulIdentifier","src":"1127:6:26"},"nativeSrc":"1127:22:26","nodeType":"YulFunctionCall","src":"1127:22:26"},"nativeSrc":"1127:22:26","nodeType":"YulExpressionStatement","src":"1127:22:26"}]},"name":"finalize_allocation","nativeSrc":"874:281:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:26","nodeType":"YulTypedName","src":"903:6:26","type":""},{"name":"size","nativeSrc":"911:4:26","nodeType":"YulTypedName","src":"911:4:26","type":""}],"src":"874:281:26"},{"body":{"nativeSrc":"1202:88:26","nodeType":"YulBlock","src":"1202:88:26","statements":[{"nativeSrc":"1212:30:26","nodeType":"YulAssignment","src":"1212:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:26","nodeType":"YulIdentifier","src":"1222:18:26"},"nativeSrc":"1222:20:26","nodeType":"YulFunctionCall","src":"1222:20:26"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:26","nodeType":"YulIdentifier","src":"1212:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:26","nodeType":"YulIdentifier","src":"1271:6:26"},{"name":"size","nativeSrc":"1279:4:26","nodeType":"YulIdentifier","src":"1279:4:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:26","nodeType":"YulIdentifier","src":"1251:19:26"},"nativeSrc":"1251:33:26","nodeType":"YulFunctionCall","src":"1251:33:26"},"nativeSrc":"1251:33:26","nodeType":"YulExpressionStatement","src":"1251:33:26"}]},"name":"allocate_memory","nativeSrc":"1161:129:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:26","nodeType":"YulTypedName","src":"1186:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:26","nodeType":"YulTypedName","src":"1195:6:26","type":""}],"src":"1161:129:26"},{"body":{"nativeSrc":"1363:241:26","nodeType":"YulBlock","src":"1363:241:26","statements":[{"body":{"nativeSrc":"1468:22:26","nodeType":"YulBlock","src":"1468:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:26","nodeType":"YulIdentifier","src":"1470:16:26"},"nativeSrc":"1470:18:26","nodeType":"YulFunctionCall","src":"1470:18:26"},"nativeSrc":"1470:18:26","nodeType":"YulExpressionStatement","src":"1470:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:26","nodeType":"YulIdentifier","src":"1440:6:26"},{"kind":"number","nativeSrc":"1448:18:26","nodeType":"YulLiteral","src":"1448:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:26","nodeType":"YulIdentifier","src":"1437:2:26"},"nativeSrc":"1437:30:26","nodeType":"YulFunctionCall","src":"1437:30:26"},"nativeSrc":"1434:56:26","nodeType":"YulIf","src":"1434:56:26"},{"nativeSrc":"1500:37:26","nodeType":"YulAssignment","src":"1500:37:26","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:26","nodeType":"YulIdentifier","src":"1530:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:26","nodeType":"YulIdentifier","src":"1508:21:26"},"nativeSrc":"1508:29:26","nodeType":"YulFunctionCall","src":"1508:29:26"},"variableNames":[{"name":"size","nativeSrc":"1500:4:26","nodeType":"YulIdentifier","src":"1500:4:26"}]},{"nativeSrc":"1574:23:26","nodeType":"YulAssignment","src":"1574:23:26","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:26","nodeType":"YulIdentifier","src":"1586:4:26"},{"kind":"number","nativeSrc":"1592:4:26","nodeType":"YulLiteral","src":"1592:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:26","nodeType":"YulIdentifier","src":"1582:3:26"},"nativeSrc":"1582:15:26","nodeType":"YulFunctionCall","src":"1582:15:26"},"variableNames":[{"name":"size","nativeSrc":"1574:4:26","nodeType":"YulIdentifier","src":"1574:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:26","nodeType":"YulTypedName","src":"1347:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:26","nodeType":"YulTypedName","src":"1358:4:26","type":""}],"src":"1296:308:26"},{"body":{"nativeSrc":"1672:186:26","nodeType":"YulBlock","src":"1672:186:26","statements":[{"nativeSrc":"1683:10:26","nodeType":"YulVariableDeclaration","src":"1683:10:26","value":{"kind":"number","nativeSrc":"1692:1:26","nodeType":"YulLiteral","src":"1692:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1687:1:26","nodeType":"YulTypedName","src":"1687:1:26","type":""}]},{"body":{"nativeSrc":"1752:63:26","nodeType":"YulBlock","src":"1752:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1777:3:26","nodeType":"YulIdentifier","src":"1777:3:26"},{"name":"i","nativeSrc":"1782:1:26","nodeType":"YulIdentifier","src":"1782:1:26"}],"functionName":{"name":"add","nativeSrc":"1773:3:26","nodeType":"YulIdentifier","src":"1773:3:26"},"nativeSrc":"1773:11:26","nodeType":"YulFunctionCall","src":"1773:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1796:3:26","nodeType":"YulIdentifier","src":"1796:3:26"},{"name":"i","nativeSrc":"1801:1:26","nodeType":"YulIdentifier","src":"1801:1:26"}],"functionName":{"name":"add","nativeSrc":"1792:3:26","nodeType":"YulIdentifier","src":"1792:3:26"},"nativeSrc":"1792:11:26","nodeType":"YulFunctionCall","src":"1792:11:26"}],"functionName":{"name":"mload","nativeSrc":"1786:5:26","nodeType":"YulIdentifier","src":"1786:5:26"},"nativeSrc":"1786:18:26","nodeType":"YulFunctionCall","src":"1786:18:26"}],"functionName":{"name":"mstore","nativeSrc":"1766:6:26","nodeType":"YulIdentifier","src":"1766:6:26"},"nativeSrc":"1766:39:26","nodeType":"YulFunctionCall","src":"1766:39:26"},"nativeSrc":"1766:39:26","nodeType":"YulExpressionStatement","src":"1766:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1713:1:26","nodeType":"YulIdentifier","src":"1713:1:26"},{"name":"length","nativeSrc":"1716:6:26","nodeType":"YulIdentifier","src":"1716:6:26"}],"functionName":{"name":"lt","nativeSrc":"1710:2:26","nodeType":"YulIdentifier","src":"1710:2:26"},"nativeSrc":"1710:13:26","nodeType":"YulFunctionCall","src":"1710:13:26"},"nativeSrc":"1702:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"1724:19:26","nodeType":"YulBlock","src":"1724:19:26","statements":[{"nativeSrc":"1726:15:26","nodeType":"YulAssignment","src":"1726:15:26","value":{"arguments":[{"name":"i","nativeSrc":"1735:1:26","nodeType":"YulIdentifier","src":"1735:1:26"},{"kind":"number","nativeSrc":"1738:2:26","nodeType":"YulLiteral","src":"1738:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1731:3:26","nodeType":"YulIdentifier","src":"1731:3:26"},"nativeSrc":"1731:10:26","nodeType":"YulFunctionCall","src":"1731:10:26"},"variableNames":[{"name":"i","nativeSrc":"1726:1:26","nodeType":"YulIdentifier","src":"1726:1:26"}]}]},"pre":{"nativeSrc":"1706:3:26","nodeType":"YulBlock","src":"1706:3:26","statements":[]},"src":"1702:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1835:3:26","nodeType":"YulIdentifier","src":"1835:3:26"},{"name":"length","nativeSrc":"1840:6:26","nodeType":"YulIdentifier","src":"1840:6:26"}],"functionName":{"name":"add","nativeSrc":"1831:3:26","nodeType":"YulIdentifier","src":"1831:3:26"},"nativeSrc":"1831:16:26","nodeType":"YulFunctionCall","src":"1831:16:26"},{"kind":"number","nativeSrc":"1849:1:26","nodeType":"YulLiteral","src":"1849:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:26","nodeType":"YulIdentifier","src":"1824:6:26"},"nativeSrc":"1824:27:26","nodeType":"YulFunctionCall","src":"1824:27:26"},"nativeSrc":"1824:27:26","nodeType":"YulExpressionStatement","src":"1824:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:26","nodeType":"YulTypedName","src":"1654:3:26","type":""},{"name":"dst","nativeSrc":"1659:3:26","nodeType":"YulTypedName","src":"1659:3:26","type":""},{"name":"length","nativeSrc":"1664:6:26","nodeType":"YulTypedName","src":"1664:6:26","type":""}],"src":"1610:248:26"},{"body":{"nativeSrc":"1959:339:26","nodeType":"YulBlock","src":"1959:339:26","statements":[{"nativeSrc":"1969:75:26","nodeType":"YulAssignment","src":"1969:75:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2036:6:26","nodeType":"YulIdentifier","src":"2036:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1994:41:26","nodeType":"YulIdentifier","src":"1994:41:26"},"nativeSrc":"1994:49:26","nodeType":"YulFunctionCall","src":"1994:49:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"1978:15:26","nodeType":"YulIdentifier","src":"1978:15:26"},"nativeSrc":"1978:66:26","nodeType":"YulFunctionCall","src":"1978:66:26"},"variableNames":[{"name":"array","nativeSrc":"1969:5:26","nodeType":"YulIdentifier","src":"1969:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2060:5:26","nodeType":"YulIdentifier","src":"2060:5:26"},{"name":"length","nativeSrc":"2067:6:26","nodeType":"YulIdentifier","src":"2067:6:26"}],"functionName":{"name":"mstore","nativeSrc":"2053:6:26","nodeType":"YulIdentifier","src":"2053:6:26"},"nativeSrc":"2053:21:26","nodeType":"YulFunctionCall","src":"2053:21:26"},"nativeSrc":"2053:21:26","nodeType":"YulExpressionStatement","src":"2053:21:26"},{"nativeSrc":"2083:27:26","nodeType":"YulVariableDeclaration","src":"2083:27:26","value":{"arguments":[{"name":"array","nativeSrc":"2098:5:26","nodeType":"YulIdentifier","src":"2098:5:26"},{"kind":"number","nativeSrc":"2105:4:26","nodeType":"YulLiteral","src":"2105:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2094:3:26","nodeType":"YulIdentifier","src":"2094:3:26"},"nativeSrc":"2094:16:26","nodeType":"YulFunctionCall","src":"2094:16:26"},"variables":[{"name":"dst","nativeSrc":"2087:3:26","nodeType":"YulTypedName","src":"2087:3:26","type":""}]},{"body":{"nativeSrc":"2148:83:26","nodeType":"YulBlock","src":"2148:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2150:77:26","nodeType":"YulIdentifier","src":"2150:77:26"},"nativeSrc":"2150:79:26","nodeType":"YulFunctionCall","src":"2150:79:26"},"nativeSrc":"2150:79:26","nodeType":"YulExpressionStatement","src":"2150:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2129:3:26","nodeType":"YulIdentifier","src":"2129:3:26"},{"name":"length","nativeSrc":"2134:6:26","nodeType":"YulIdentifier","src":"2134:6:26"}],"functionName":{"name":"add","nativeSrc":"2125:3:26","nodeType":"YulIdentifier","src":"2125:3:26"},"nativeSrc":"2125:16:26","nodeType":"YulFunctionCall","src":"2125:16:26"},{"name":"end","nativeSrc":"2143:3:26","nodeType":"YulIdentifier","src":"2143:3:26"}],"functionName":{"name":"gt","nativeSrc":"2122:2:26","nodeType":"YulIdentifier","src":"2122:2:26"},"nativeSrc":"2122:25:26","nodeType":"YulFunctionCall","src":"2122:25:26"},"nativeSrc":"2119:112:26","nodeType":"YulIf","src":"2119:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2275:3:26","nodeType":"YulIdentifier","src":"2275:3:26"},{"name":"dst","nativeSrc":"2280:3:26","nodeType":"YulIdentifier","src":"2280:3:26"},{"name":"length","nativeSrc":"2285:6:26","nodeType":"YulIdentifier","src":"2285:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2240:34:26","nodeType":"YulIdentifier","src":"2240:34:26"},"nativeSrc":"2240:52:26","nodeType":"YulFunctionCall","src":"2240:52:26"},"nativeSrc":"2240:52:26","nodeType":"YulExpressionStatement","src":"2240:52:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1864:434:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1932:3:26","nodeType":"YulTypedName","src":"1932:3:26","type":""},{"name":"length","nativeSrc":"1937:6:26","nodeType":"YulTypedName","src":"1937:6:26","type":""},{"name":"end","nativeSrc":"1945:3:26","nodeType":"YulTypedName","src":"1945:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1953:5:26","nodeType":"YulTypedName","src":"1953:5:26","type":""}],"src":"1864:434:26"},{"body":{"nativeSrc":"2391:282:26","nodeType":"YulBlock","src":"2391:282:26","statements":[{"body":{"nativeSrc":"2440:83:26","nodeType":"YulBlock","src":"2440:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2442:77:26","nodeType":"YulIdentifier","src":"2442:77:26"},"nativeSrc":"2442:79:26","nodeType":"YulFunctionCall","src":"2442:79:26"},"nativeSrc":"2442:79:26","nodeType":"YulExpressionStatement","src":"2442:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2419:6:26","nodeType":"YulIdentifier","src":"2419:6:26"},{"kind":"number","nativeSrc":"2427:4:26","nodeType":"YulLiteral","src":"2427:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2415:3:26","nodeType":"YulIdentifier","src":"2415:3:26"},"nativeSrc":"2415:17:26","nodeType":"YulFunctionCall","src":"2415:17:26"},{"name":"end","nativeSrc":"2434:3:26","nodeType":"YulIdentifier","src":"2434:3:26"}],"functionName":{"name":"slt","nativeSrc":"2411:3:26","nodeType":"YulIdentifier","src":"2411:3:26"},"nativeSrc":"2411:27:26","nodeType":"YulFunctionCall","src":"2411:27:26"}],"functionName":{"name":"iszero","nativeSrc":"2404:6:26","nodeType":"YulIdentifier","src":"2404:6:26"},"nativeSrc":"2404:35:26","nodeType":"YulFunctionCall","src":"2404:35:26"},"nativeSrc":"2401:122:26","nodeType":"YulIf","src":"2401:122:26"},{"nativeSrc":"2532:27:26","nodeType":"YulVariableDeclaration","src":"2532:27:26","value":{"arguments":[{"name":"offset","nativeSrc":"2552:6:26","nodeType":"YulIdentifier","src":"2552:6:26"}],"functionName":{"name":"mload","nativeSrc":"2546:5:26","nodeType":"YulIdentifier","src":"2546:5:26"},"nativeSrc":"2546:13:26","nodeType":"YulFunctionCall","src":"2546:13:26"},"variables":[{"name":"length","nativeSrc":"2536:6:26","nodeType":"YulTypedName","src":"2536:6:26","type":""}]},{"nativeSrc":"2568:99:26","nodeType":"YulAssignment","src":"2568:99:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2640:6:26","nodeType":"YulIdentifier","src":"2640:6:26"},{"kind":"number","nativeSrc":"2648:4:26","nodeType":"YulLiteral","src":"2648:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2636:3:26","nodeType":"YulIdentifier","src":"2636:3:26"},"nativeSrc":"2636:17:26","nodeType":"YulFunctionCall","src":"2636:17:26"},{"name":"length","nativeSrc":"2655:6:26","nodeType":"YulIdentifier","src":"2655:6:26"},{"name":"end","nativeSrc":"2663:3:26","nodeType":"YulIdentifier","src":"2663:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2577:58:26","nodeType":"YulIdentifier","src":"2577:58:26"},"nativeSrc":"2577:90:26","nodeType":"YulFunctionCall","src":"2577:90:26"},"variableNames":[{"name":"array","nativeSrc":"2568:5:26","nodeType":"YulIdentifier","src":"2568:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2318:355:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2369:6:26","nodeType":"YulTypedName","src":"2369:6:26","type":""},{"name":"end","nativeSrc":"2377:3:26","nodeType":"YulTypedName","src":"2377:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2385:5:26","nodeType":"YulTypedName","src":"2385:5:26","type":""}],"src":"2318:355:26"},{"body":{"nativeSrc":"2793:739:26","nodeType":"YulBlock","src":"2793:739:26","statements":[{"body":{"nativeSrc":"2839:83:26","nodeType":"YulBlock","src":"2839:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2841:77:26","nodeType":"YulIdentifier","src":"2841:77:26"},"nativeSrc":"2841:79:26","nodeType":"YulFunctionCall","src":"2841:79:26"},"nativeSrc":"2841:79:26","nodeType":"YulExpressionStatement","src":"2841:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2814:7:26","nodeType":"YulIdentifier","src":"2814:7:26"},{"name":"headStart","nativeSrc":"2823:9:26","nodeType":"YulIdentifier","src":"2823:9:26"}],"functionName":{"name":"sub","nativeSrc":"2810:3:26","nodeType":"YulIdentifier","src":"2810:3:26"},"nativeSrc":"2810:23:26","nodeType":"YulFunctionCall","src":"2810:23:26"},{"kind":"number","nativeSrc":"2835:2:26","nodeType":"YulLiteral","src":"2835:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2806:3:26","nodeType":"YulIdentifier","src":"2806:3:26"},"nativeSrc":"2806:32:26","nodeType":"YulFunctionCall","src":"2806:32:26"},"nativeSrc":"2803:119:26","nodeType":"YulIf","src":"2803:119:26"},{"nativeSrc":"2932:291:26","nodeType":"YulBlock","src":"2932:291:26","statements":[{"nativeSrc":"2947:38:26","nodeType":"YulVariableDeclaration","src":"2947:38:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2971:9:26","nodeType":"YulIdentifier","src":"2971:9:26"},{"kind":"number","nativeSrc":"2982:1:26","nodeType":"YulLiteral","src":"2982:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2967:3:26","nodeType":"YulIdentifier","src":"2967:3:26"},"nativeSrc":"2967:17:26","nodeType":"YulFunctionCall","src":"2967:17:26"}],"functionName":{"name":"mload","nativeSrc":"2961:5:26","nodeType":"YulIdentifier","src":"2961:5:26"},"nativeSrc":"2961:24:26","nodeType":"YulFunctionCall","src":"2961:24:26"},"variables":[{"name":"offset","nativeSrc":"2951:6:26","nodeType":"YulTypedName","src":"2951:6:26","type":""}]},{"body":{"nativeSrc":"3032:83:26","nodeType":"YulBlock","src":"3032:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3034:77:26","nodeType":"YulIdentifier","src":"3034:77:26"},"nativeSrc":"3034:79:26","nodeType":"YulFunctionCall","src":"3034:79:26"},"nativeSrc":"3034:79:26","nodeType":"YulExpressionStatement","src":"3034:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3004:6:26","nodeType":"YulIdentifier","src":"3004:6:26"},{"kind":"number","nativeSrc":"3012:18:26","nodeType":"YulLiteral","src":"3012:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3001:2:26","nodeType":"YulIdentifier","src":"3001:2:26"},"nativeSrc":"3001:30:26","nodeType":"YulFunctionCall","src":"3001:30:26"},"nativeSrc":"2998:117:26","nodeType":"YulIf","src":"2998:117:26"},{"nativeSrc":"3129:84:26","nodeType":"YulAssignment","src":"3129:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3185:9:26","nodeType":"YulIdentifier","src":"3185:9:26"},{"name":"offset","nativeSrc":"3196:6:26","nodeType":"YulIdentifier","src":"3196:6:26"}],"functionName":{"name":"add","nativeSrc":"3181:3:26","nodeType":"YulIdentifier","src":"3181:3:26"},"nativeSrc":"3181:22:26","nodeType":"YulFunctionCall","src":"3181:22:26"},{"name":"dataEnd","nativeSrc":"3205:7:26","nodeType":"YulIdentifier","src":"3205:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3139:41:26","nodeType":"YulIdentifier","src":"3139:41:26"},"nativeSrc":"3139:74:26","nodeType":"YulFunctionCall","src":"3139:74:26"},"variableNames":[{"name":"value0","nativeSrc":"3129:6:26","nodeType":"YulIdentifier","src":"3129:6:26"}]}]},{"nativeSrc":"3233:292:26","nodeType":"YulBlock","src":"3233:292:26","statements":[{"nativeSrc":"3248:39:26","nodeType":"YulVariableDeclaration","src":"3248:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3272:9:26","nodeType":"YulIdentifier","src":"3272:9:26"},{"kind":"number","nativeSrc":"3283:2:26","nodeType":"YulLiteral","src":"3283:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3268:3:26","nodeType":"YulIdentifier","src":"3268:3:26"},"nativeSrc":"3268:18:26","nodeType":"YulFunctionCall","src":"3268:18:26"}],"functionName":{"name":"mload","nativeSrc":"3262:5:26","nodeType":"YulIdentifier","src":"3262:5:26"},"nativeSrc":"3262:25:26","nodeType":"YulFunctionCall","src":"3262:25:26"},"variables":[{"name":"offset","nativeSrc":"3252:6:26","nodeType":"YulTypedName","src":"3252:6:26","type":""}]},{"body":{"nativeSrc":"3334:83:26","nodeType":"YulBlock","src":"3334:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3336:77:26","nodeType":"YulIdentifier","src":"3336:77:26"},"nativeSrc":"3336:79:26","nodeType":"YulFunctionCall","src":"3336:79:26"},"nativeSrc":"3336:79:26","nodeType":"YulExpressionStatement","src":"3336:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3306:6:26","nodeType":"YulIdentifier","src":"3306:6:26"},{"kind":"number","nativeSrc":"3314:18:26","nodeType":"YulLiteral","src":"3314:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3303:2:26","nodeType":"YulIdentifier","src":"3303:2:26"},"nativeSrc":"3303:30:26","nodeType":"YulFunctionCall","src":"3303:30:26"},"nativeSrc":"3300:117:26","nodeType":"YulIf","src":"3300:117:26"},{"nativeSrc":"3431:84:26","nodeType":"YulAssignment","src":"3431:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3487:9:26","nodeType":"YulIdentifier","src":"3487:9:26"},{"name":"offset","nativeSrc":"3498:6:26","nodeType":"YulIdentifier","src":"3498:6:26"}],"functionName":{"name":"add","nativeSrc":"3483:3:26","nodeType":"YulIdentifier","src":"3483:3:26"},"nativeSrc":"3483:22:26","nodeType":"YulFunctionCall","src":"3483:22:26"},{"name":"dataEnd","nativeSrc":"3507:7:26","nodeType":"YulIdentifier","src":"3507:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3441:41:26","nodeType":"YulIdentifier","src":"3441:41:26"},"nativeSrc":"3441:74:26","nodeType":"YulFunctionCall","src":"3441:74:26"},"variableNames":[{"name":"value1","nativeSrc":"3431:6:26","nodeType":"YulIdentifier","src":"3431:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"2679:853:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2755:9:26","nodeType":"YulTypedName","src":"2755:9:26","type":""},{"name":"dataEnd","nativeSrc":"2766:7:26","nodeType":"YulTypedName","src":"2766:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2778:6:26","nodeType":"YulTypedName","src":"2778:6:26","type":""},{"name":"value1","nativeSrc":"2786:6:26","nodeType":"YulTypedName","src":"2786:6:26","type":""}],"src":"2679:853:26"},{"body":{"nativeSrc":"3597:40:26","nodeType":"YulBlock","src":"3597:40:26","statements":[{"nativeSrc":"3608:22:26","nodeType":"YulAssignment","src":"3608:22:26","value":{"arguments":[{"name":"value","nativeSrc":"3624:5:26","nodeType":"YulIdentifier","src":"3624:5:26"}],"functionName":{"name":"mload","nativeSrc":"3618:5:26","nodeType":"YulIdentifier","src":"3618:5:26"},"nativeSrc":"3618:12:26","nodeType":"YulFunctionCall","src":"3618:12:26"},"variableNames":[{"name":"length","nativeSrc":"3608:6:26","nodeType":"YulIdentifier","src":"3608:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3538:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:26","nodeType":"YulTypedName","src":"3580:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3590:6:26","nodeType":"YulTypedName","src":"3590:6:26","type":""}],"src":"3538:99:26"},{"body":{"nativeSrc":"3671:152:26","nodeType":"YulBlock","src":"3671:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3688:1:26","nodeType":"YulLiteral","src":"3688:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3691:77:26","nodeType":"YulLiteral","src":"3691:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3681:6:26","nodeType":"YulIdentifier","src":"3681:6:26"},"nativeSrc":"3681:88:26","nodeType":"YulFunctionCall","src":"3681:88:26"},"nativeSrc":"3681:88:26","nodeType":"YulExpressionStatement","src":"3681:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3785:1:26","nodeType":"YulLiteral","src":"3785:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"3788:4:26","nodeType":"YulLiteral","src":"3788:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3778:6:26","nodeType":"YulIdentifier","src":"3778:6:26"},"nativeSrc":"3778:15:26","nodeType":"YulFunctionCall","src":"3778:15:26"},"nativeSrc":"3778:15:26","nodeType":"YulExpressionStatement","src":"3778:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3809:1:26","nodeType":"YulLiteral","src":"3809:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3812:4:26","nodeType":"YulLiteral","src":"3812:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3802:6:26","nodeType":"YulIdentifier","src":"3802:6:26"},"nativeSrc":"3802:15:26","nodeType":"YulFunctionCall","src":"3802:15:26"},"nativeSrc":"3802:15:26","nodeType":"YulExpressionStatement","src":"3802:15:26"}]},"name":"panic_error_0x22","nativeSrc":"3643:180:26","nodeType":"YulFunctionDefinition","src":"3643:180:26"},{"body":{"nativeSrc":"3880:269:26","nodeType":"YulBlock","src":"3880:269:26","statements":[{"nativeSrc":"3890:22:26","nodeType":"YulAssignment","src":"3890:22:26","value":{"arguments":[{"name":"data","nativeSrc":"3904:4:26","nodeType":"YulIdentifier","src":"3904:4:26"},{"kind":"number","nativeSrc":"3910:1:26","nodeType":"YulLiteral","src":"3910:1:26","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"3900:3:26","nodeType":"YulIdentifier","src":"3900:3:26"},"nativeSrc":"3900:12:26","nodeType":"YulFunctionCall","src":"3900:12:26"},"variableNames":[{"name":"length","nativeSrc":"3890:6:26","nodeType":"YulIdentifier","src":"3890:6:26"}]},{"nativeSrc":"3921:38:26","nodeType":"YulVariableDeclaration","src":"3921:38:26","value":{"arguments":[{"name":"data","nativeSrc":"3951:4:26","nodeType":"YulIdentifier","src":"3951:4:26"},{"kind":"number","nativeSrc":"3957:1:26","nodeType":"YulLiteral","src":"3957:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"3947:3:26","nodeType":"YulIdentifier","src":"3947:3:26"},"nativeSrc":"3947:12:26","nodeType":"YulFunctionCall","src":"3947:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"3925:18:26","nodeType":"YulTypedName","src":"3925:18:26","type":""}]},{"body":{"nativeSrc":"3998:51:26","nodeType":"YulBlock","src":"3998:51:26","statements":[{"nativeSrc":"4012:27:26","nodeType":"YulAssignment","src":"4012:27:26","value":{"arguments":[{"name":"length","nativeSrc":"4026:6:26","nodeType":"YulIdentifier","src":"4026:6:26"},{"kind":"number","nativeSrc":"4034:4:26","nodeType":"YulLiteral","src":"4034:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4022:3:26","nodeType":"YulIdentifier","src":"4022:3:26"},"nativeSrc":"4022:17:26","nodeType":"YulFunctionCall","src":"4022:17:26"},"variableNames":[{"name":"length","nativeSrc":"4012:6:26","nodeType":"YulIdentifier","src":"4012:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3978:18:26","nodeType":"YulIdentifier","src":"3978:18:26"}],"functionName":{"name":"iszero","nativeSrc":"3971:6:26","nodeType":"YulIdentifier","src":"3971:6:26"},"nativeSrc":"3971:26:26","nodeType":"YulFunctionCall","src":"3971:26:26"},"nativeSrc":"3968:81:26","nodeType":"YulIf","src":"3968:81:26"},{"body":{"nativeSrc":"4101:42:26","nodeType":"YulBlock","src":"4101:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4115:16:26","nodeType":"YulIdentifier","src":"4115:16:26"},"nativeSrc":"4115:18:26","nodeType":"YulFunctionCall","src":"4115:18:26"},"nativeSrc":"4115:18:26","nodeType":"YulExpressionStatement","src":"4115:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4065:18:26","nodeType":"YulIdentifier","src":"4065:18:26"},{"arguments":[{"name":"length","nativeSrc":"4088:6:26","nodeType":"YulIdentifier","src":"4088:6:26"},{"kind":"number","nativeSrc":"4096:2:26","nodeType":"YulLiteral","src":"4096:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4085:2:26","nodeType":"YulIdentifier","src":"4085:2:26"},"nativeSrc":"4085:14:26","nodeType":"YulFunctionCall","src":"4085:14:26"}],"functionName":{"name":"eq","nativeSrc":"4062:2:26","nodeType":"YulIdentifier","src":"4062:2:26"},"nativeSrc":"4062:38:26","nodeType":"YulFunctionCall","src":"4062:38:26"},"nativeSrc":"4059:84:26","nodeType":"YulIf","src":"4059:84:26"}]},"name":"extract_byte_array_length","nativeSrc":"3829:320:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3864:4:26","nodeType":"YulTypedName","src":"3864:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3873:6:26","nodeType":"YulTypedName","src":"3873:6:26","type":""}],"src":"3829:320:26"},{"body":{"nativeSrc":"4209:87:26","nodeType":"YulBlock","src":"4209:87:26","statements":[{"nativeSrc":"4219:11:26","nodeType":"YulAssignment","src":"4219:11:26","value":{"name":"ptr","nativeSrc":"4227:3:26","nodeType":"YulIdentifier","src":"4227:3:26"},"variableNames":[{"name":"data","nativeSrc":"4219:4:26","nodeType":"YulIdentifier","src":"4219:4:26"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4247:1:26","nodeType":"YulLiteral","src":"4247:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"4250:3:26","nodeType":"YulIdentifier","src":"4250:3:26"}],"functionName":{"name":"mstore","nativeSrc":"4240:6:26","nodeType":"YulIdentifier","src":"4240:6:26"},"nativeSrc":"4240:14:26","nodeType":"YulFunctionCall","src":"4240:14:26"},"nativeSrc":"4240:14:26","nodeType":"YulExpressionStatement","src":"4240:14:26"},{"nativeSrc":"4263:26:26","nodeType":"YulAssignment","src":"4263:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"4281:1:26","nodeType":"YulLiteral","src":"4281:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4284:4:26","nodeType":"YulLiteral","src":"4284:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4271:9:26","nodeType":"YulIdentifier","src":"4271:9:26"},"nativeSrc":"4271:18:26","nodeType":"YulFunctionCall","src":"4271:18:26"},"variableNames":[{"name":"data","nativeSrc":"4263:4:26","nodeType":"YulIdentifier","src":"4263:4:26"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4155:141:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4196:3:26","nodeType":"YulTypedName","src":"4196:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4204:4:26","nodeType":"YulTypedName","src":"4204:4:26","type":""}],"src":"4155:141:26"},{"body":{"nativeSrc":"4346:49:26","nodeType":"YulBlock","src":"4346:49:26","statements":[{"nativeSrc":"4356:33:26","nodeType":"YulAssignment","src":"4356:33:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4374:5:26","nodeType":"YulIdentifier","src":"4374:5:26"},{"kind":"number","nativeSrc":"4381:2:26","nodeType":"YulLiteral","src":"4381:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4370:3:26","nodeType":"YulIdentifier","src":"4370:3:26"},"nativeSrc":"4370:14:26","nodeType":"YulFunctionCall","src":"4370:14:26"},{"kind":"number","nativeSrc":"4386:2:26","nodeType":"YulLiteral","src":"4386:2:26","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4366:3:26","nodeType":"YulIdentifier","src":"4366:3:26"},"nativeSrc":"4366:23:26","nodeType":"YulFunctionCall","src":"4366:23:26"},"variableNames":[{"name":"result","nativeSrc":"4356:6:26","nodeType":"YulIdentifier","src":"4356:6:26"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4302:93:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4329:5:26","nodeType":"YulTypedName","src":"4329:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4339:6:26","nodeType":"YulTypedName","src":"4339:6:26","type":""}],"src":"4302:93:26"},{"body":{"nativeSrc":"4454:54:26","nodeType":"YulBlock","src":"4454:54:26","statements":[{"nativeSrc":"4464:37:26","nodeType":"YulAssignment","src":"4464:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"4489:4:26","nodeType":"YulIdentifier","src":"4489:4:26"},{"name":"value","nativeSrc":"4495:5:26","nodeType":"YulIdentifier","src":"4495:5:26"}],"functionName":{"name":"shl","nativeSrc":"4485:3:26","nodeType":"YulIdentifier","src":"4485:3:26"},"nativeSrc":"4485:16:26","nodeType":"YulFunctionCall","src":"4485:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"4464:8:26","nodeType":"YulIdentifier","src":"4464:8:26"}]}]},"name":"shift_left_dynamic","nativeSrc":"4401:107:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4429:4:26","nodeType":"YulTypedName","src":"4429:4:26","type":""},{"name":"value","nativeSrc":"4435:5:26","nodeType":"YulTypedName","src":"4435:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4445:8:26","nodeType":"YulTypedName","src":"4445:8:26","type":""}],"src":"4401:107:26"},{"body":{"nativeSrc":"4590:317:26","nodeType":"YulBlock","src":"4590:317:26","statements":[{"nativeSrc":"4600:35:26","nodeType":"YulVariableDeclaration","src":"4600:35:26","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"4621:10:26","nodeType":"YulIdentifier","src":"4621:10:26"},{"kind":"number","nativeSrc":"4633:1:26","nodeType":"YulLiteral","src":"4633:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"4617:3:26","nodeType":"YulIdentifier","src":"4617:3:26"},"nativeSrc":"4617:18:26","nodeType":"YulFunctionCall","src":"4617:18:26"},"variables":[{"name":"shiftBits","nativeSrc":"4604:9:26","nodeType":"YulTypedName","src":"4604:9:26","type":""}]},{"nativeSrc":"4644:109:26","nodeType":"YulVariableDeclaration","src":"4644:109:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4675:9:26","nodeType":"YulIdentifier","src":"4675:9:26"},{"kind":"number","nativeSrc":"4686:66:26","nodeType":"YulLiteral","src":"4686:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4656:18:26","nodeType":"YulIdentifier","src":"4656:18:26"},"nativeSrc":"4656:97:26","nodeType":"YulFunctionCall","src":"4656:97:26"},"variables":[{"name":"mask","nativeSrc":"4648:4:26","nodeType":"YulTypedName","src":"4648:4:26","type":""}]},{"nativeSrc":"4762:51:26","nodeType":"YulAssignment","src":"4762:51:26","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4793:9:26","nodeType":"YulIdentifier","src":"4793:9:26"},{"name":"toInsert","nativeSrc":"4804:8:26","nodeType":"YulIdentifier","src":"4804:8:26"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4774:18:26","nodeType":"YulIdentifier","src":"4774:18:26"},"nativeSrc":"4774:39:26","nodeType":"YulFunctionCall","src":"4774:39:26"},"variableNames":[{"name":"toInsert","nativeSrc":"4762:8:26","nodeType":"YulIdentifier","src":"4762:8:26"}]},{"nativeSrc":"4822:30:26","nodeType":"YulAssignment","src":"4822:30:26","value":{"arguments":[{"name":"value","nativeSrc":"4835:5:26","nodeType":"YulIdentifier","src":"4835:5:26"},{"arguments":[{"name":"mask","nativeSrc":"4846:4:26","nodeType":"YulIdentifier","src":"4846:4:26"}],"functionName":{"name":"not","nativeSrc":"4842:3:26","nodeType":"YulIdentifier","src":"4842:3:26"},"nativeSrc":"4842:9:26","nodeType":"YulFunctionCall","src":"4842:9:26"}],"functionName":{"name":"and","nativeSrc":"4831:3:26","nodeType":"YulIdentifier","src":"4831:3:26"},"nativeSrc":"4831:21:26","nodeType":"YulFunctionCall","src":"4831:21:26"},"variableNames":[{"name":"value","nativeSrc":"4822:5:26","nodeType":"YulIdentifier","src":"4822:5:26"}]},{"nativeSrc":"4861:40:26","nodeType":"YulAssignment","src":"4861:40:26","value":{"arguments":[{"name":"value","nativeSrc":"4874:5:26","nodeType":"YulIdentifier","src":"4874:5:26"},{"arguments":[{"name":"toInsert","nativeSrc":"4885:8:26","nodeType":"YulIdentifier","src":"4885:8:26"},{"name":"mask","nativeSrc":"4895:4:26","nodeType":"YulIdentifier","src":"4895:4:26"}],"functionName":{"name":"and","nativeSrc":"4881:3:26","nodeType":"YulIdentifier","src":"4881:3:26"},"nativeSrc":"4881:19:26","nodeType":"YulFunctionCall","src":"4881:19:26"}],"functionName":{"name":"or","nativeSrc":"4871:2:26","nodeType":"YulIdentifier","src":"4871:2:26"},"nativeSrc":"4871:30:26","nodeType":"YulFunctionCall","src":"4871:30:26"},"variableNames":[{"name":"result","nativeSrc":"4861:6:26","nodeType":"YulIdentifier","src":"4861:6:26"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"4514:393:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4551:5:26","nodeType":"YulTypedName","src":"4551:5:26","type":""},{"name":"shiftBytes","nativeSrc":"4558:10:26","nodeType":"YulTypedName","src":"4558:10:26","type":""},{"name":"toInsert","nativeSrc":"4570:8:26","nodeType":"YulTypedName","src":"4570:8:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4583:6:26","nodeType":"YulTypedName","src":"4583:6:26","type":""}],"src":"4514:393:26"},{"body":{"nativeSrc":"4958:32:26","nodeType":"YulBlock","src":"4958:32:26","statements":[{"nativeSrc":"4968:16:26","nodeType":"YulAssignment","src":"4968:16:26","value":{"name":"value","nativeSrc":"4979:5:26","nodeType":"YulIdentifier","src":"4979:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"4968:7:26","nodeType":"YulIdentifier","src":"4968:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"4913:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4940:5:26","nodeType":"YulTypedName","src":"4940:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4950:7:26","nodeType":"YulTypedName","src":"4950:7:26","type":""}],"src":"4913:77:26"},{"body":{"nativeSrc":"5028:28:26","nodeType":"YulBlock","src":"5028:28:26","statements":[{"nativeSrc":"5038:12:26","nodeType":"YulAssignment","src":"5038:12:26","value":{"name":"value","nativeSrc":"5045:5:26","nodeType":"YulIdentifier","src":"5045:5:26"},"variableNames":[{"name":"ret","nativeSrc":"5038:3:26","nodeType":"YulIdentifier","src":"5038:3:26"}]}]},"name":"identity","nativeSrc":"4996:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5014:5:26","nodeType":"YulTypedName","src":"5014:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5024:3:26","nodeType":"YulTypedName","src":"5024:3:26","type":""}],"src":"4996:60:26"},{"body":{"nativeSrc":"5122:82:26","nodeType":"YulBlock","src":"5122:82:26","statements":[{"nativeSrc":"5132:66:26","nodeType":"YulAssignment","src":"5132:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5190:5:26","nodeType":"YulIdentifier","src":"5190:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5172:17:26","nodeType":"YulIdentifier","src":"5172:17:26"},"nativeSrc":"5172:24:26","nodeType":"YulFunctionCall","src":"5172:24:26"}],"functionName":{"name":"identity","nativeSrc":"5163:8:26","nodeType":"YulIdentifier","src":"5163:8:26"},"nativeSrc":"5163:34:26","nodeType":"YulFunctionCall","src":"5163:34:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5145:17:26","nodeType":"YulIdentifier","src":"5145:17:26"},"nativeSrc":"5145:53:26","nodeType":"YulFunctionCall","src":"5145:53:26"},"variableNames":[{"name":"converted","nativeSrc":"5132:9:26","nodeType":"YulIdentifier","src":"5132:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5062:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5102:5:26","nodeType":"YulTypedName","src":"5102:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5112:9:26","nodeType":"YulTypedName","src":"5112:9:26","type":""}],"src":"5062:142:26"},{"body":{"nativeSrc":"5257:28:26","nodeType":"YulBlock","src":"5257:28:26","statements":[{"nativeSrc":"5267:12:26","nodeType":"YulAssignment","src":"5267:12:26","value":{"name":"value","nativeSrc":"5274:5:26","nodeType":"YulIdentifier","src":"5274:5:26"},"variableNames":[{"name":"ret","nativeSrc":"5267:3:26","nodeType":"YulIdentifier","src":"5267:3:26"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5210:75:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5243:5:26","nodeType":"YulTypedName","src":"5243:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5253:3:26","nodeType":"YulTypedName","src":"5253:3:26","type":""}],"src":"5210:75:26"},{"body":{"nativeSrc":"5367:193:26","nodeType":"YulBlock","src":"5367:193:26","statements":[{"nativeSrc":"5377:63:26","nodeType":"YulVariableDeclaration","src":"5377:63:26","value":{"arguments":[{"name":"value_0","nativeSrc":"5432:7:26","nodeType":"YulIdentifier","src":"5432:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5401:30:26","nodeType":"YulIdentifier","src":"5401:30:26"},"nativeSrc":"5401:39:26","nodeType":"YulFunctionCall","src":"5401:39:26"},"variables":[{"name":"convertedValue_0","nativeSrc":"5381:16:26","nodeType":"YulTypedName","src":"5381:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5456:4:26","nodeType":"YulIdentifier","src":"5456:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5496:4:26","nodeType":"YulIdentifier","src":"5496:4:26"}],"functionName":{"name":"sload","nativeSrc":"5490:5:26","nodeType":"YulIdentifier","src":"5490:5:26"},"nativeSrc":"5490:11:26","nodeType":"YulFunctionCall","src":"5490:11:26"},{"name":"offset","nativeSrc":"5503:6:26","nodeType":"YulIdentifier","src":"5503:6:26"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5535:16:26","nodeType":"YulIdentifier","src":"5535:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5511:23:26","nodeType":"YulIdentifier","src":"5511:23:26"},"nativeSrc":"5511:41:26","nodeType":"YulFunctionCall","src":"5511:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5462:27:26","nodeType":"YulIdentifier","src":"5462:27:26"},"nativeSrc":"5462:91:26","nodeType":"YulFunctionCall","src":"5462:91:26"}],"functionName":{"name":"sstore","nativeSrc":"5449:6:26","nodeType":"YulIdentifier","src":"5449:6:26"},"nativeSrc":"5449:105:26","nodeType":"YulFunctionCall","src":"5449:105:26"},"nativeSrc":"5449:105:26","nodeType":"YulExpressionStatement","src":"5449:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5291:269:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5344:4:26","nodeType":"YulTypedName","src":"5344:4:26","type":""},{"name":"offset","nativeSrc":"5350:6:26","nodeType":"YulTypedName","src":"5350:6:26","type":""},{"name":"value_0","nativeSrc":"5358:7:26","nodeType":"YulTypedName","src":"5358:7:26","type":""}],"src":"5291:269:26"},{"body":{"nativeSrc":"5615:24:26","nodeType":"YulBlock","src":"5615:24:26","statements":[{"nativeSrc":"5625:8:26","nodeType":"YulAssignment","src":"5625:8:26","value":{"kind":"number","nativeSrc":"5632:1:26","nodeType":"YulLiteral","src":"5632:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"5625:3:26","nodeType":"YulIdentifier","src":"5625:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5566:73:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"5611:3:26","nodeType":"YulTypedName","src":"5611:3:26","type":""}],"src":"5566:73:26"},{"body":{"nativeSrc":"5698:136:26","nodeType":"YulBlock","src":"5698:136:26","statements":[{"nativeSrc":"5708:46:26","nodeType":"YulVariableDeclaration","src":"5708:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"5722:30:26","nodeType":"YulIdentifier","src":"5722:30:26"},"nativeSrc":"5722:32:26","nodeType":"YulFunctionCall","src":"5722:32:26"},"variables":[{"name":"zero_0","nativeSrc":"5712:6:26","nodeType":"YulTypedName","src":"5712:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5807:4:26","nodeType":"YulIdentifier","src":"5807:4:26"},{"name":"offset","nativeSrc":"5813:6:26","nodeType":"YulIdentifier","src":"5813:6:26"},{"name":"zero_0","nativeSrc":"5821:6:26","nodeType":"YulIdentifier","src":"5821:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5763:43:26","nodeType":"YulIdentifier","src":"5763:43:26"},"nativeSrc":"5763:65:26","nodeType":"YulFunctionCall","src":"5763:65:26"},"nativeSrc":"5763:65:26","nodeType":"YulExpressionStatement","src":"5763:65:26"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"5645:189:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5684:4:26","nodeType":"YulTypedName","src":"5684:4:26","type":""},{"name":"offset","nativeSrc":"5690:6:26","nodeType":"YulTypedName","src":"5690:6:26","type":""}],"src":"5645:189:26"},{"body":{"nativeSrc":"5890:136:26","nodeType":"YulBlock","src":"5890:136:26","statements":[{"body":{"nativeSrc":"5957:63:26","nodeType":"YulBlock","src":"5957:63:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6001:5:26","nodeType":"YulIdentifier","src":"6001:5:26"},{"kind":"number","nativeSrc":"6008:1:26","nodeType":"YulLiteral","src":"6008:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"5971:29:26","nodeType":"YulIdentifier","src":"5971:29:26"},"nativeSrc":"5971:39:26","nodeType":"YulFunctionCall","src":"5971:39:26"},"nativeSrc":"5971:39:26","nodeType":"YulExpressionStatement","src":"5971:39:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"5910:5:26","nodeType":"YulIdentifier","src":"5910:5:26"},{"name":"end","nativeSrc":"5917:3:26","nodeType":"YulIdentifier","src":"5917:3:26"}],"functionName":{"name":"lt","nativeSrc":"5907:2:26","nodeType":"YulIdentifier","src":"5907:2:26"},"nativeSrc":"5907:14:26","nodeType":"YulFunctionCall","src":"5907:14:26"},"nativeSrc":"5900:120:26","nodeType":"YulForLoop","post":{"nativeSrc":"5922:26:26","nodeType":"YulBlock","src":"5922:26:26","statements":[{"nativeSrc":"5924:22:26","nodeType":"YulAssignment","src":"5924:22:26","value":{"arguments":[{"name":"start","nativeSrc":"5937:5:26","nodeType":"YulIdentifier","src":"5937:5:26"},{"kind":"number","nativeSrc":"5944:1:26","nodeType":"YulLiteral","src":"5944:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5933:3:26","nodeType":"YulIdentifier","src":"5933:3:26"},"nativeSrc":"5933:13:26","nodeType":"YulFunctionCall","src":"5933:13:26"},"variableNames":[{"name":"start","nativeSrc":"5924:5:26","nodeType":"YulIdentifier","src":"5924:5:26"}]}]},"pre":{"nativeSrc":"5904:2:26","nodeType":"YulBlock","src":"5904:2:26","statements":[]},"src":"5900:120:26"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"5840:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"5878:5:26","nodeType":"YulTypedName","src":"5878:5:26","type":""},{"name":"end","nativeSrc":"5885:3:26","nodeType":"YulTypedName","src":"5885:3:26","type":""}],"src":"5840:186:26"},{"body":{"nativeSrc":"6111:464:26","nodeType":"YulBlock","src":"6111:464:26","statements":[{"body":{"nativeSrc":"6137:431:26","nodeType":"YulBlock","src":"6137:431:26","statements":[{"nativeSrc":"6151:54:26","nodeType":"YulVariableDeclaration","src":"6151:54:26","value":{"arguments":[{"name":"array","nativeSrc":"6199:5:26","nodeType":"YulIdentifier","src":"6199:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6167:31:26","nodeType":"YulIdentifier","src":"6167:31:26"},"nativeSrc":"6167:38:26","nodeType":"YulFunctionCall","src":"6167:38:26"},"variables":[{"name":"dataArea","nativeSrc":"6155:8:26","nodeType":"YulTypedName","src":"6155:8:26","type":""}]},{"nativeSrc":"6218:63:26","nodeType":"YulVariableDeclaration","src":"6218:63:26","value":{"arguments":[{"name":"dataArea","nativeSrc":"6241:8:26","nodeType":"YulIdentifier","src":"6241:8:26"},{"arguments":[{"name":"startIndex","nativeSrc":"6269:10:26","nodeType":"YulIdentifier","src":"6269:10:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6251:17:26","nodeType":"YulIdentifier","src":"6251:17:26"},"nativeSrc":"6251:29:26","nodeType":"YulFunctionCall","src":"6251:29:26"}],"functionName":{"name":"add","nativeSrc":"6237:3:26","nodeType":"YulIdentifier","src":"6237:3:26"},"nativeSrc":"6237:44:26","nodeType":"YulFunctionCall","src":"6237:44:26"},"variables":[{"name":"deleteStart","nativeSrc":"6222:11:26","nodeType":"YulTypedName","src":"6222:11:26","type":""}]},{"body":{"nativeSrc":"6438:27:26","nodeType":"YulBlock","src":"6438:27:26","statements":[{"nativeSrc":"6440:23:26","nodeType":"YulAssignment","src":"6440:23:26","value":{"name":"dataArea","nativeSrc":"6455:8:26","nodeType":"YulIdentifier","src":"6455:8:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"6440:11:26","nodeType":"YulIdentifier","src":"6440:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6422:10:26","nodeType":"YulIdentifier","src":"6422:10:26"},{"kind":"number","nativeSrc":"6434:2:26","nodeType":"YulLiteral","src":"6434:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6419:2:26","nodeType":"YulIdentifier","src":"6419:2:26"},"nativeSrc":"6419:18:26","nodeType":"YulFunctionCall","src":"6419:18:26"},"nativeSrc":"6416:49:26","nodeType":"YulIf","src":"6416:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6507:11:26","nodeType":"YulIdentifier","src":"6507:11:26"},{"arguments":[{"name":"dataArea","nativeSrc":"6524:8:26","nodeType":"YulIdentifier","src":"6524:8:26"},{"arguments":[{"name":"len","nativeSrc":"6552:3:26","nodeType":"YulIdentifier","src":"6552:3:26"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6534:17:26","nodeType":"YulIdentifier","src":"6534:17:26"},"nativeSrc":"6534:22:26","nodeType":"YulFunctionCall","src":"6534:22:26"}],"functionName":{"name":"add","nativeSrc":"6520:3:26","nodeType":"YulIdentifier","src":"6520:3:26"},"nativeSrc":"6520:37:26","nodeType":"YulFunctionCall","src":"6520:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6478:28:26","nodeType":"YulIdentifier","src":"6478:28:26"},"nativeSrc":"6478:80:26","nodeType":"YulFunctionCall","src":"6478:80:26"},"nativeSrc":"6478:80:26","nodeType":"YulExpressionStatement","src":"6478:80:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6128:3:26","nodeType":"YulIdentifier","src":"6128:3:26"},{"kind":"number","nativeSrc":"6133:2:26","nodeType":"YulLiteral","src":"6133:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6125:2:26","nodeType":"YulIdentifier","src":"6125:2:26"},"nativeSrc":"6125:11:26","nodeType":"YulFunctionCall","src":"6125:11:26"},"nativeSrc":"6122:446:26","nodeType":"YulIf","src":"6122:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6032:543:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6087:5:26","nodeType":"YulTypedName","src":"6087:5:26","type":""},{"name":"len","nativeSrc":"6094:3:26","nodeType":"YulTypedName","src":"6094:3:26","type":""},{"name":"startIndex","nativeSrc":"6099:10:26","nodeType":"YulTypedName","src":"6099:10:26","type":""}],"src":"6032:543:26"},{"body":{"nativeSrc":"6644:54:26","nodeType":"YulBlock","src":"6644:54:26","statements":[{"nativeSrc":"6654:37:26","nodeType":"YulAssignment","src":"6654:37:26","value":{"arguments":[{"name":"bits","nativeSrc":"6679:4:26","nodeType":"YulIdentifier","src":"6679:4:26"},{"name":"value","nativeSrc":"6685:5:26","nodeType":"YulIdentifier","src":"6685:5:26"}],"functionName":{"name":"shr","nativeSrc":"6675:3:26","nodeType":"YulIdentifier","src":"6675:3:26"},"nativeSrc":"6675:16:26","nodeType":"YulFunctionCall","src":"6675:16:26"},"variableNames":[{"name":"newValue","nativeSrc":"6654:8:26","nodeType":"YulIdentifier","src":"6654:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"6581:117:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6619:4:26","nodeType":"YulTypedName","src":"6619:4:26","type":""},{"name":"value","nativeSrc":"6625:5:26","nodeType":"YulTypedName","src":"6625:5:26","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6635:8:26","nodeType":"YulTypedName","src":"6635:8:26","type":""}],"src":"6581:117:26"},{"body":{"nativeSrc":"6755:118:26","nodeType":"YulBlock","src":"6755:118:26","statements":[{"nativeSrc":"6765:68:26","nodeType":"YulVariableDeclaration","src":"6765:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6814:1:26","nodeType":"YulLiteral","src":"6814:1:26","type":"","value":"8"},{"name":"bytes","nativeSrc":"6817:5:26","nodeType":"YulIdentifier","src":"6817:5:26"}],"functionName":{"name":"mul","nativeSrc":"6810:3:26","nodeType":"YulIdentifier","src":"6810:3:26"},"nativeSrc":"6810:13:26","nodeType":"YulFunctionCall","src":"6810:13:26"},{"arguments":[{"kind":"number","nativeSrc":"6829:1:26","nodeType":"YulLiteral","src":"6829:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"6825:3:26","nodeType":"YulIdentifier","src":"6825:3:26"},"nativeSrc":"6825:6:26","nodeType":"YulFunctionCall","src":"6825:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"6781:28:26","nodeType":"YulIdentifier","src":"6781:28:26"},"nativeSrc":"6781:51:26","nodeType":"YulFunctionCall","src":"6781:51:26"}],"functionName":{"name":"not","nativeSrc":"6777:3:26","nodeType":"YulIdentifier","src":"6777:3:26"},"nativeSrc":"6777:56:26","nodeType":"YulFunctionCall","src":"6777:56:26"},"variables":[{"name":"mask","nativeSrc":"6769:4:26","nodeType":"YulTypedName","src":"6769:4:26","type":""}]},{"nativeSrc":"6842:25:26","nodeType":"YulAssignment","src":"6842:25:26","value":{"arguments":[{"name":"data","nativeSrc":"6856:4:26","nodeType":"YulIdentifier","src":"6856:4:26"},{"name":"mask","nativeSrc":"6862:4:26","nodeType":"YulIdentifier","src":"6862:4:26"}],"functionName":{"name":"and","nativeSrc":"6852:3:26","nodeType":"YulIdentifier","src":"6852:3:26"},"nativeSrc":"6852:15:26","nodeType":"YulFunctionCall","src":"6852:15:26"},"variableNames":[{"name":"result","nativeSrc":"6842:6:26","nodeType":"YulIdentifier","src":"6842:6:26"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"6704:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6732:4:26","nodeType":"YulTypedName","src":"6732:4:26","type":""},{"name":"bytes","nativeSrc":"6738:5:26","nodeType":"YulTypedName","src":"6738:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6748:6:26","nodeType":"YulTypedName","src":"6748:6:26","type":""}],"src":"6704:169:26"},{"body":{"nativeSrc":"6959:214:26","nodeType":"YulBlock","src":"6959:214:26","statements":[{"nativeSrc":"7092:37:26","nodeType":"YulAssignment","src":"7092:37:26","value":{"arguments":[{"name":"data","nativeSrc":"7119:4:26","nodeType":"YulIdentifier","src":"7119:4:26"},{"name":"len","nativeSrc":"7125:3:26","nodeType":"YulIdentifier","src":"7125:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7100:18:26","nodeType":"YulIdentifier","src":"7100:18:26"},"nativeSrc":"7100:29:26","nodeType":"YulFunctionCall","src":"7100:29:26"},"variableNames":[{"name":"data","nativeSrc":"7092:4:26","nodeType":"YulIdentifier","src":"7092:4:26"}]},{"nativeSrc":"7138:29:26","nodeType":"YulAssignment","src":"7138:29:26","value":{"arguments":[{"name":"data","nativeSrc":"7149:4:26","nodeType":"YulIdentifier","src":"7149:4:26"},{"arguments":[{"kind":"number","nativeSrc":"7159:1:26","nodeType":"YulLiteral","src":"7159:1:26","type":"","value":"2"},{"name":"len","nativeSrc":"7162:3:26","nodeType":"YulIdentifier","src":"7162:3:26"}],"functionName":{"name":"mul","nativeSrc":"7155:3:26","nodeType":"YulIdentifier","src":"7155:3:26"},"nativeSrc":"7155:11:26","nodeType":"YulFunctionCall","src":"7155:11:26"}],"functionName":{"name":"or","nativeSrc":"7146:2:26","nodeType":"YulIdentifier","src":"7146:2:26"},"nativeSrc":"7146:21:26","nodeType":"YulFunctionCall","src":"7146:21:26"},"variableNames":[{"name":"used","nativeSrc":"7138:4:26","nodeType":"YulIdentifier","src":"7138:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6878:295:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6940:4:26","nodeType":"YulTypedName","src":"6940:4:26","type":""},{"name":"len","nativeSrc":"6946:3:26","nodeType":"YulTypedName","src":"6946:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"6954:4:26","nodeType":"YulTypedName","src":"6954:4:26","type":""}],"src":"6878:295:26"},{"body":{"nativeSrc":"7270:1303:26","nodeType":"YulBlock","src":"7270:1303:26","statements":[{"nativeSrc":"7281:51:26","nodeType":"YulVariableDeclaration","src":"7281:51:26","value":{"arguments":[{"name":"src","nativeSrc":"7328:3:26","nodeType":"YulIdentifier","src":"7328:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7295:32:26","nodeType":"YulIdentifier","src":"7295:32:26"},"nativeSrc":"7295:37:26","nodeType":"YulFunctionCall","src":"7295:37:26"},"variables":[{"name":"newLen","nativeSrc":"7285:6:26","nodeType":"YulTypedName","src":"7285:6:26","type":""}]},{"body":{"nativeSrc":"7417:22:26","nodeType":"YulBlock","src":"7417:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7419:16:26","nodeType":"YulIdentifier","src":"7419:16:26"},"nativeSrc":"7419:18:26","nodeType":"YulFunctionCall","src":"7419:18:26"},"nativeSrc":"7419:18:26","nodeType":"YulExpressionStatement","src":"7419:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7389:6:26","nodeType":"YulIdentifier","src":"7389:6:26"},{"kind":"number","nativeSrc":"7397:18:26","nodeType":"YulLiteral","src":"7397:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7386:2:26","nodeType":"YulIdentifier","src":"7386:2:26"},"nativeSrc":"7386:30:26","nodeType":"YulFunctionCall","src":"7386:30:26"},"nativeSrc":"7383:56:26","nodeType":"YulIf","src":"7383:56:26"},{"nativeSrc":"7449:52:26","nodeType":"YulVariableDeclaration","src":"7449:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7495:4:26","nodeType":"YulIdentifier","src":"7495:4:26"}],"functionName":{"name":"sload","nativeSrc":"7489:5:26","nodeType":"YulIdentifier","src":"7489:5:26"},"nativeSrc":"7489:11:26","nodeType":"YulFunctionCall","src":"7489:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7463:25:26","nodeType":"YulIdentifier","src":"7463:25:26"},"nativeSrc":"7463:38:26","nodeType":"YulFunctionCall","src":"7463:38:26"},"variables":[{"name":"oldLen","nativeSrc":"7453:6:26","nodeType":"YulTypedName","src":"7453:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7594:4:26","nodeType":"YulIdentifier","src":"7594:4:26"},{"name":"oldLen","nativeSrc":"7600:6:26","nodeType":"YulIdentifier","src":"7600:6:26"},{"name":"newLen","nativeSrc":"7608:6:26","nodeType":"YulIdentifier","src":"7608:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7548:45:26","nodeType":"YulIdentifier","src":"7548:45:26"},"nativeSrc":"7548:67:26","nodeType":"YulFunctionCall","src":"7548:67:26"},"nativeSrc":"7548:67:26","nodeType":"YulExpressionStatement","src":"7548:67:26"},{"nativeSrc":"7625:18:26","nodeType":"YulVariableDeclaration","src":"7625:18:26","value":{"kind":"number","nativeSrc":"7642:1:26","nodeType":"YulLiteral","src":"7642:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"7629:9:26","nodeType":"YulTypedName","src":"7629:9:26","type":""}]},{"nativeSrc":"7653:17:26","nodeType":"YulAssignment","src":"7653:17:26","value":{"kind":"number","nativeSrc":"7666:4:26","nodeType":"YulLiteral","src":"7666:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"7653:9:26","nodeType":"YulIdentifier","src":"7653:9:26"}]},{"cases":[{"body":{"nativeSrc":"7717:611:26","nodeType":"YulBlock","src":"7717:611:26","statements":[{"nativeSrc":"7731:37:26","nodeType":"YulVariableDeclaration","src":"7731:37:26","value":{"arguments":[{"name":"newLen","nativeSrc":"7750:6:26","nodeType":"YulIdentifier","src":"7750:6:26"},{"arguments":[{"kind":"number","nativeSrc":"7762:4:26","nodeType":"YulLiteral","src":"7762:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"7758:3:26","nodeType":"YulIdentifier","src":"7758:3:26"},"nativeSrc":"7758:9:26","nodeType":"YulFunctionCall","src":"7758:9:26"}],"functionName":{"name":"and","nativeSrc":"7746:3:26","nodeType":"YulIdentifier","src":"7746:3:26"},"nativeSrc":"7746:22:26","nodeType":"YulFunctionCall","src":"7746:22:26"},"variables":[{"name":"loopEnd","nativeSrc":"7735:7:26","nodeType":"YulTypedName","src":"7735:7:26","type":""}]},{"nativeSrc":"7782:51:26","nodeType":"YulVariableDeclaration","src":"7782:51:26","value":{"arguments":[{"name":"slot","nativeSrc":"7828:4:26","nodeType":"YulIdentifier","src":"7828:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7796:31:26","nodeType":"YulIdentifier","src":"7796:31:26"},"nativeSrc":"7796:37:26","nodeType":"YulFunctionCall","src":"7796:37:26"},"variables":[{"name":"dstPtr","nativeSrc":"7786:6:26","nodeType":"YulTypedName","src":"7786:6:26","type":""}]},{"nativeSrc":"7846:10:26","nodeType":"YulVariableDeclaration","src":"7846:10:26","value":{"kind":"number","nativeSrc":"7855:1:26","nodeType":"YulLiteral","src":"7855:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7850:1:26","nodeType":"YulTypedName","src":"7850:1:26","type":""}]},{"body":{"nativeSrc":"7914:163:26","nodeType":"YulBlock","src":"7914:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"7939:6:26","nodeType":"YulIdentifier","src":"7939:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7957:3:26","nodeType":"YulIdentifier","src":"7957:3:26"},{"name":"srcOffset","nativeSrc":"7962:9:26","nodeType":"YulIdentifier","src":"7962:9:26"}],"functionName":{"name":"add","nativeSrc":"7953:3:26","nodeType":"YulIdentifier","src":"7953:3:26"},"nativeSrc":"7953:19:26","nodeType":"YulFunctionCall","src":"7953:19:26"}],"functionName":{"name":"mload","nativeSrc":"7947:5:26","nodeType":"YulIdentifier","src":"7947:5:26"},"nativeSrc":"7947:26:26","nodeType":"YulFunctionCall","src":"7947:26:26"}],"functionName":{"name":"sstore","nativeSrc":"7932:6:26","nodeType":"YulIdentifier","src":"7932:6:26"},"nativeSrc":"7932:42:26","nodeType":"YulFunctionCall","src":"7932:42:26"},"nativeSrc":"7932:42:26","nodeType":"YulExpressionStatement","src":"7932:42:26"},{"nativeSrc":"7991:24:26","nodeType":"YulAssignment","src":"7991:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8005:6:26","nodeType":"YulIdentifier","src":"8005:6:26"},{"kind":"number","nativeSrc":"8013:1:26","nodeType":"YulLiteral","src":"8013:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8001:3:26","nodeType":"YulIdentifier","src":"8001:3:26"},"nativeSrc":"8001:14:26","nodeType":"YulFunctionCall","src":"8001:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"7991:6:26","nodeType":"YulIdentifier","src":"7991:6:26"}]},{"nativeSrc":"8032:31:26","nodeType":"YulAssignment","src":"8032:31:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8049:9:26","nodeType":"YulIdentifier","src":"8049:9:26"},{"kind":"number","nativeSrc":"8060:2:26","nodeType":"YulLiteral","src":"8060:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8045:3:26","nodeType":"YulIdentifier","src":"8045:3:26"},"nativeSrc":"8045:18:26","nodeType":"YulFunctionCall","src":"8045:18:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"8032:9:26","nodeType":"YulIdentifier","src":"8032:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7880:1:26","nodeType":"YulIdentifier","src":"7880:1:26"},{"name":"loopEnd","nativeSrc":"7883:7:26","nodeType":"YulIdentifier","src":"7883:7:26"}],"functionName":{"name":"lt","nativeSrc":"7877:2:26","nodeType":"YulIdentifier","src":"7877:2:26"},"nativeSrc":"7877:14:26","nodeType":"YulFunctionCall","src":"7877:14:26"},"nativeSrc":"7869:208:26","nodeType":"YulForLoop","post":{"nativeSrc":"7892:21:26","nodeType":"YulBlock","src":"7892:21:26","statements":[{"nativeSrc":"7894:17:26","nodeType":"YulAssignment","src":"7894:17:26","value":{"arguments":[{"name":"i","nativeSrc":"7903:1:26","nodeType":"YulIdentifier","src":"7903:1:26"},{"kind":"number","nativeSrc":"7906:4:26","nodeType":"YulLiteral","src":"7906:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7899:3:26","nodeType":"YulIdentifier","src":"7899:3:26"},"nativeSrc":"7899:12:26","nodeType":"YulFunctionCall","src":"7899:12:26"},"variableNames":[{"name":"i","nativeSrc":"7894:1:26","nodeType":"YulIdentifier","src":"7894:1:26"}]}]},"pre":{"nativeSrc":"7873:3:26","nodeType":"YulBlock","src":"7873:3:26","statements":[]},"src":"7869:208:26"},{"body":{"nativeSrc":"8113:156:26","nodeType":"YulBlock","src":"8113:156:26","statements":[{"nativeSrc":"8131:43:26","nodeType":"YulVariableDeclaration","src":"8131:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8158:3:26","nodeType":"YulIdentifier","src":"8158:3:26"},{"name":"srcOffset","nativeSrc":"8163:9:26","nodeType":"YulIdentifier","src":"8163:9:26"}],"functionName":{"name":"add","nativeSrc":"8154:3:26","nodeType":"YulIdentifier","src":"8154:3:26"},"nativeSrc":"8154:19:26","nodeType":"YulFunctionCall","src":"8154:19:26"}],"functionName":{"name":"mload","nativeSrc":"8148:5:26","nodeType":"YulIdentifier","src":"8148:5:26"},"nativeSrc":"8148:26:26","nodeType":"YulFunctionCall","src":"8148:26:26"},"variables":[{"name":"lastValue","nativeSrc":"8135:9:26","nodeType":"YulTypedName","src":"8135:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8198:6:26","nodeType":"YulIdentifier","src":"8198:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"8225:9:26","nodeType":"YulIdentifier","src":"8225:9:26"},{"arguments":[{"name":"newLen","nativeSrc":"8240:6:26","nodeType":"YulIdentifier","src":"8240:6:26"},{"kind":"number","nativeSrc":"8248:4:26","nodeType":"YulLiteral","src":"8248:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8236:3:26","nodeType":"YulIdentifier","src":"8236:3:26"},"nativeSrc":"8236:17:26","nodeType":"YulFunctionCall","src":"8236:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8206:18:26","nodeType":"YulIdentifier","src":"8206:18:26"},"nativeSrc":"8206:48:26","nodeType":"YulFunctionCall","src":"8206:48:26"}],"functionName":{"name":"sstore","nativeSrc":"8191:6:26","nodeType":"YulIdentifier","src":"8191:6:26"},"nativeSrc":"8191:64:26","nodeType":"YulFunctionCall","src":"8191:64:26"},"nativeSrc":"8191:64:26","nodeType":"YulExpressionStatement","src":"8191:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8096:7:26","nodeType":"YulIdentifier","src":"8096:7:26"},{"name":"newLen","nativeSrc":"8105:6:26","nodeType":"YulIdentifier","src":"8105:6:26"}],"functionName":{"name":"lt","nativeSrc":"8093:2:26","nodeType":"YulIdentifier","src":"8093:2:26"},"nativeSrc":"8093:19:26","nodeType":"YulFunctionCall","src":"8093:19:26"},"nativeSrc":"8090:179:26","nodeType":"YulIf","src":"8090:179:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8289:4:26","nodeType":"YulIdentifier","src":"8289:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8303:6:26","nodeType":"YulIdentifier","src":"8303:6:26"},{"kind":"number","nativeSrc":"8311:1:26","nodeType":"YulLiteral","src":"8311:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8299:3:26","nodeType":"YulIdentifier","src":"8299:3:26"},"nativeSrc":"8299:14:26","nodeType":"YulFunctionCall","src":"8299:14:26"},{"kind":"number","nativeSrc":"8315:1:26","nodeType":"YulLiteral","src":"8315:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8295:3:26","nodeType":"YulIdentifier","src":"8295:3:26"},"nativeSrc":"8295:22:26","nodeType":"YulFunctionCall","src":"8295:22:26"}],"functionName":{"name":"sstore","nativeSrc":"8282:6:26","nodeType":"YulIdentifier","src":"8282:6:26"},"nativeSrc":"8282:36:26","nodeType":"YulFunctionCall","src":"8282:36:26"},"nativeSrc":"8282:36:26","nodeType":"YulExpressionStatement","src":"8282:36:26"}]},"nativeSrc":"7710:618:26","nodeType":"YulCase","src":"7710:618:26","value":{"kind":"number","nativeSrc":"7715:1:26","nodeType":"YulLiteral","src":"7715:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"8345:222:26","nodeType":"YulBlock","src":"8345:222:26","statements":[{"nativeSrc":"8359:14:26","nodeType":"YulVariableDeclaration","src":"8359:14:26","value":{"kind":"number","nativeSrc":"8372:1:26","nodeType":"YulLiteral","src":"8372:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8363:5:26","nodeType":"YulTypedName","src":"8363:5:26","type":""}]},{"body":{"nativeSrc":"8396:67:26","nodeType":"YulBlock","src":"8396:67:26","statements":[{"nativeSrc":"8414:35:26","nodeType":"YulAssignment","src":"8414:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8433:3:26","nodeType":"YulIdentifier","src":"8433:3:26"},{"name":"srcOffset","nativeSrc":"8438:9:26","nodeType":"YulIdentifier","src":"8438:9:26"}],"functionName":{"name":"add","nativeSrc":"8429:3:26","nodeType":"YulIdentifier","src":"8429:3:26"},"nativeSrc":"8429:19:26","nodeType":"YulFunctionCall","src":"8429:19:26"}],"functionName":{"name":"mload","nativeSrc":"8423:5:26","nodeType":"YulIdentifier","src":"8423:5:26"},"nativeSrc":"8423:26:26","nodeType":"YulFunctionCall","src":"8423:26:26"},"variableNames":[{"name":"value","nativeSrc":"8414:5:26","nodeType":"YulIdentifier","src":"8414:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"8389:6:26","nodeType":"YulIdentifier","src":"8389:6:26"},"nativeSrc":"8386:77:26","nodeType":"YulIf","src":"8386:77:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8483:4:26","nodeType":"YulIdentifier","src":"8483:4:26"},{"arguments":[{"name":"value","nativeSrc":"8542:5:26","nodeType":"YulIdentifier","src":"8542:5:26"},{"name":"newLen","nativeSrc":"8549:6:26","nodeType":"YulIdentifier","src":"8549:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8489:52:26","nodeType":"YulIdentifier","src":"8489:52:26"},"nativeSrc":"8489:67:26","nodeType":"YulFunctionCall","src":"8489:67:26"}],"functionName":{"name":"sstore","nativeSrc":"8476:6:26","nodeType":"YulIdentifier","src":"8476:6:26"},"nativeSrc":"8476:81:26","nodeType":"YulFunctionCall","src":"8476:81:26"},"nativeSrc":"8476:81:26","nodeType":"YulExpressionStatement","src":"8476:81:26"}]},"nativeSrc":"8337:230:26","nodeType":"YulCase","src":"8337:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"7690:6:26","nodeType":"YulIdentifier","src":"7690:6:26"},{"kind":"number","nativeSrc":"7698:2:26","nodeType":"YulLiteral","src":"7698:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7687:2:26","nodeType":"YulIdentifier","src":"7687:2:26"},"nativeSrc":"7687:14:26","nodeType":"YulFunctionCall","src":"7687:14:26"},"nativeSrc":"7680:887:26","nodeType":"YulSwitch","src":"7680:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7178:1395:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7259:4:26","nodeType":"YulTypedName","src":"7259:4:26","type":""},{"name":"src","nativeSrc":"7265:3:26","nodeType":"YulTypedName","src":"7265:3:26","type":""}],"src":"7178:1395:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611ef0380380611ef083398181016040528101906100329190610357565b8181816003908161004391906105f0565b50806004908161005391906105f0565b5050506100696000801b3361007160201b60201c565b5050506106c2565b6000610083838361016f60201b60201c565b6101645760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506101016101da60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610169565b600090505b92915050565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61024982610200565b810181811067ffffffffffffffff8211171561026857610267610211565b5b80604052505050565b600061027b6101e2565b90506102878282610240565b919050565b600067ffffffffffffffff8211156102a7576102a6610211565b5b6102b082610200565b9050602081019050919050565b60005b838110156102db5780820151818401526020810190506102c0565b60008484015250505050565b60006102fa6102f58461028c565b610271565b905082815260208101848484011115610316576103156101fb565b5b6103218482856102bd565b509392505050565b600082601f83011261033e5761033d6101f6565b5b815161034e8482602086016102e7565b91505092915050565b6000806040838503121561036e5761036d6101ec565b5b600083015167ffffffffffffffff81111561038c5761038b6101f1565b5b61039885828601610329565b925050602083015167ffffffffffffffff8111156103b9576103b86101f1565b5b6103c585828601610329565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061042157607f821691505b602082108103610434576104336103da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261049c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261045f565b6104a6868361045f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006104ed6104e86104e3846104be565b6104c8565b6104be565b9050919050565b6000819050919050565b610507836104d2565b61051b610513826104f4565b84845461046c565b825550505050565b600090565b610530610523565b61053b8184846104fe565b505050565b5b8181101561055f57610554600082610528565b600181019050610541565b5050565b601f8211156105a4576105758161043a565b61057e8461044f565b8101602085101561058d578190505b6105a16105998561044f565b830182610540565b50505b505050565b600082821c905092915050565b60006105c7600019846008026105a9565b1980831691505092915050565b60006105e083836105b6565b9150826002028217905092915050565b6105f9826103cf565b67ffffffffffffffff81111561061257610611610211565b5b61061c8254610409565b610627828285610563565b600060209050601f83116001811461065a5760008415610648578287015190505b61065285826105d4565b8655506106ba565b601f1984166106688661043a565b60005b828110156106905784890151825560018201915060208501945060208101905061066b565b868310156106ad57848901516106a9601f8916826105b6565b8355505b6001600288020188555050505b505050505050565b61181f806106d16000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610355578063a217fddf14610373578063a9059cbb14610391578063d547741f146103c1578063dd62ed3e146103dd5761012c565b806342966c681461029f57806370a08231146102bb57806379cc6790146102eb57806382aefa241461030757806391d14854146103255761012c565b8063248a9ca3116100f4578063248a9ca3146101fd5780632f2ff15d1461022d578063313ce5671461024957806336568abe1461026757806340c10f19146102835761012c565b806301ffc9a71461013157806306fdde0314610161578063095ea7b31461017f57806318160ddd146101af57806323b872dd146101cd575b600080fd5b61014b60048036038101906101469190611298565b61040d565b60405161015891906112e0565b60405180910390f35b610169610487565b604051610176919061138b565b60405180910390f35b61019960048036038101906101949190611441565b610519565b6040516101a691906112e0565b60405180910390f35b6101b761053c565b6040516101c49190611490565b60405180910390f35b6101e760048036038101906101e291906114ab565b610546565b6040516101f491906112e0565b60405180910390f35b61021760048036038101906102129190611534565b610575565b6040516102249190611570565b60405180910390f35b6102476004803603810190610242919061158b565b610595565b005b6102516105b7565b60405161025e91906115e7565b60405180910390f35b610281600480360381019061027c919061158b565b6105c0565b005b61029d60048036038101906102989190611441565b61063b565b005b6102b960048036038101906102b49190611602565b610674565b005b6102d560048036038101906102d0919061162f565b610688565b6040516102e29190611490565b60405180910390f35b61030560048036038101906103009190611441565b6106d0565b005b61030f6106f0565b60405161031c9190611570565b60405180910390f35b61033f600480360381019061033a919061158b565b610714565b60405161034c91906112e0565b60405180910390f35b61035d61077f565b60405161036a919061138b565b60405180910390f35b61037b610811565b6040516103889190611570565b60405180910390f35b6103ab60048036038101906103a69190611441565b610818565b6040516103b891906112e0565b60405180910390f35b6103db60048036038101906103d6919061158b565b61083b565b005b6103f760048036038101906103f2919061165c565b61085d565b6040516104049190611490565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610480575061047f826108e4565b5b9050919050565b606060038054610496906116cb565b80601f01602080910402602001604051908101604052809291908181526020018280546104c2906116cb565b801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b5050505050905090565b60008061052461094e565b9050610531818585610956565b600191505092915050565b6000600254905090565b60008061055161094e565b905061055e858285610968565b6105698585856109fd565b60019150509392505050565b600060056000838152602001908152602001600020600101549050919050565b61059e82610575565b6105a781610af1565b6105b18383610b05565b50505050565b60006012905090565b6105c861094e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062c576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106368282610bf7565b505050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12261066581610af1565b61066f8383610cea565b505050565b61068561067f61094e565b82610d6c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106e2826106dc61094e565b83610968565b6106ec8282610d6c565b5050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12281565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606004805461078e906116cb565b80601f01602080910402602001604051908101604052809291908181526020018280546107ba906116cb565b80156108075780601f106107dc57610100808354040283529160200191610807565b820191906000526020600020905b8154815290600101906020018083116107ea57829003601f168201915b5050505050905090565b6000801b81565b60008061082361094e565b90506108308185856109fd565b600191505092915050565b61084482610575565b61084d81610af1565b6108578383610bf7565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6109638383836001610dee565b505050565b6000610974848461085d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109f757818110156109e7578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109de9392919061170b565b60405180910390fd5b6109f684848484036000610dee565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a6f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a669190611742565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae15760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ad89190611742565b60405180910390fd5b610aec838383610fc5565b505050565b610b0281610afd61094e565b6111ea565b50565b6000610b118383610714565b610bec5760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b8961094e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610bf1565b600090505b92915050565b6000610c038383610714565b15610cdf5760006005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c7c61094e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610ce4565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d539190611742565b60405180910390fd5b610d6860008383610fc5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dde5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dd59190611742565b60405180910390fd5b610dea82600083610fc5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e605760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e579190611742565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ec99190611742565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610fbf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fb69190611490565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361101757806002600082825461100b919061178c565b925050819055506110ea565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110a3578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161109a9392919061170b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111335780600260008282540392505081905550611180565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111dd9190611490565b60405180910390a3505050565b6111f48282610714565b6112375780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161122e9291906117c0565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61127581611240565b811461128057600080fd5b50565b6000813590506112928161126c565b92915050565b6000602082840312156112ae576112ad61123b565b5b60006112bc84828501611283565b91505092915050565b60008115159050919050565b6112da816112c5565b82525050565b60006020820190506112f560008301846112d1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561133557808201518184015260208101905061131a565b60008484015250505050565b6000601f19601f8301169050919050565b600061135d826112fb565b6113678185611306565b9350611377818560208601611317565b61138081611341565b840191505092915050565b600060208201905081810360008301526113a58184611352565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113d8826113ad565b9050919050565b6113e8816113cd565b81146113f357600080fd5b50565b600081359050611405816113df565b92915050565b6000819050919050565b61141e8161140b565b811461142957600080fd5b50565b60008135905061143b81611415565b92915050565b600080604083850312156114585761145761123b565b5b6000611466858286016113f6565b92505060206114778582860161142c565b9150509250929050565b61148a8161140b565b82525050565b60006020820190506114a56000830184611481565b92915050565b6000806000606084860312156114c4576114c361123b565b5b60006114d2868287016113f6565b93505060206114e3868287016113f6565b92505060406114f48682870161142c565b9150509250925092565b6000819050919050565b611511816114fe565b811461151c57600080fd5b50565b60008135905061152e81611508565b92915050565b60006020828403121561154a5761154961123b565b5b60006115588482850161151f565b91505092915050565b61156a816114fe565b82525050565b60006020820190506115856000830184611561565b92915050565b600080604083850312156115a2576115a161123b565b5b60006115b08582860161151f565b92505060206115c1858286016113f6565b9150509250929050565b600060ff82169050919050565b6115e1816115cb565b82525050565b60006020820190506115fc60008301846115d8565b92915050565b6000602082840312156116185761161761123b565b5b60006116268482850161142c565b91505092915050565b6000602082840312156116455761164461123b565b5b6000611653848285016113f6565b91505092915050565b600080604083850312156116735761167261123b565b5b6000611681858286016113f6565b9250506020611692858286016113f6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116e357607f821691505b6020821081036116f6576116f561169c565b5b50919050565b611705816113cd565b82525050565b600060608201905061172060008301866116fc565b61172d6020830185611481565b61173a6040830184611481565b949350505050565b600060208201905061175760008301846116fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117978261140b565b91506117a28361140b565b92508282019050808211156117ba576117b961175d565b5b92915050565b60006040820190506117d560008301856116fc565b6117e26020830184611561565b939250505056fea2646970667358221220ea4e43d7af00371bde455b037408b765afa287c133c80d8bcbcb15891eb847b864736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1EF0 CODESIZE SUB DUP1 PUSH2 0x1EF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST POP POP POP PUSH2 0x69 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x71 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83 DUP4 DUP4 PUSH2 0x16F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x164 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x101 PUSH2 0x1DA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x169 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x249 DUP3 PUSH2 0x200 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x268 JUMPI PUSH2 0x267 PUSH2 0x211 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B PUSH2 0x1E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x287 DUP3 DUP3 PUSH2 0x240 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x211 JUMP JUMPDEST JUMPDEST PUSH2 0x2B0 DUP3 PUSH2 0x200 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA PUSH2 0x2F5 DUP5 PUSH2 0x28C JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x315 PUSH2 0x1FB JUMP JUMPDEST JUMPDEST PUSH2 0x321 DUP5 DUP3 DUP6 PUSH2 0x2BD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x1F6 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x34E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x1EC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38C JUMPI PUSH2 0x38B PUSH2 0x1F1 JUMP JUMPDEST JUMPDEST PUSH2 0x398 DUP6 DUP3 DUP7 ADD PUSH2 0x329 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x3B8 PUSH2 0x1F1 JUMP JUMPDEST JUMPDEST PUSH2 0x3C5 DUP6 DUP3 DUP7 ADD PUSH2 0x329 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x421 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x434 JUMPI PUSH2 0x433 PUSH2 0x3DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x49C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x45F JUMP JUMPDEST PUSH2 0x4A6 DUP7 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ED PUSH2 0x4E8 PUSH2 0x4E3 DUP5 PUSH2 0x4BE JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x507 DUP4 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x51B PUSH2 0x513 DUP3 PUSH2 0x4F4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x46C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x530 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x53B DUP2 DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x55F JUMPI PUSH2 0x554 PUSH1 0x0 DUP3 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x541 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5A4 JUMPI PUSH2 0x575 DUP2 PUSH2 0x43A JUMP JUMPDEST PUSH2 0x57E DUP5 PUSH2 0x44F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x58D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5A1 PUSH2 0x599 DUP6 PUSH2 0x44F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x540 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5A9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP4 DUP4 PUSH2 0x5B6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F9 DUP3 PUSH2 0x3CF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x211 JUMP JUMPDEST JUMPDEST PUSH2 0x61C DUP3 SLOAD PUSH2 0x409 JUMP JUMPDEST PUSH2 0x627 DUP3 DUP3 DUP6 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x65A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x648 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x652 DUP6 DUP3 PUSH2 0x5D4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x668 DUP7 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x690 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6AD JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6A9 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5B6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x181F DUP1 PUSH2 0x6D1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DD JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x82AEFA24 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x325 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x283 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x162F JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30F PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x480 JUMPI POP PUSH2 0x47F DUP3 PUSH2 0x8E4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C2 SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x524 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH2 0x531 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x551 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH2 0x55E DUP6 DUP3 DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x569 DUP6 DUP6 DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59E DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x5A7 DUP2 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x5B1 DUP4 DUP4 PUSH2 0xB05 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0x94E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 DUP3 DUP3 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 PUSH2 0x665 DUP2 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x66F DUP4 DUP4 PUSH2 0xCEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0x67F PUSH2 0x94E JUMP JUMPDEST DUP3 PUSH2 0xD6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E2 DUP3 PUSH2 0x6DC PUSH2 0x94E JUMP JUMPDEST DUP4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x6EC DUP3 DUP3 PUSH2 0xD6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x78E SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7BA SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x807 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x807 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x823 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH2 0x830 DUP2 DUP6 DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x844 DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x84D DUP2 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x857 DUP4 DUP4 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x963 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x974 DUP5 DUP5 PUSH2 0x85D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xDEE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEC DUP4 DUP4 DUP4 PUSH2 0xFC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB02 DUP2 PUSH2 0xAFD PUSH2 0x94E JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB11 DUP4 DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0xBEC JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB89 PUSH2 0x94E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP4 DUP4 PUSH2 0x714 JUMP JUMPDEST ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC7C PUSH2 0x94E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD68 PUSH1 0x0 DUP4 DUP4 PUSH2 0xFC5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEA DUP3 PUSH1 0x0 DUP4 PUSH2 0xFC5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFBF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1017 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10A3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1133 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1180 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x11F4 DUP3 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1237 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP3 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1275 DUP2 PUSH2 0x1240 JUMP JUMPDEST DUP2 EQ PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1292 DUP2 PUSH2 0x126C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x12AD PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12BC DUP5 DUP3 DUP6 ADD PUSH2 0x1283 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0x12C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1335 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x131A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135D DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x1367 DUP2 DUP6 PUSH2 0x1306 JUMP JUMPDEST SWAP4 POP PUSH2 0x1377 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x1380 DUP2 PUSH2 0x1341 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13A5 DUP2 DUP5 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP3 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E8 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1405 DUP2 PUSH2 0x13DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x140B JUMP JUMPDEST DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x143B DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1466 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1477 DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x148A DUP2 PUSH2 0x140B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1481 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E3 DUP7 DUP3 DUP8 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F4 DUP7 DUP3 DUP8 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1511 DUP2 PUSH2 0x14FE JUMP JUMPDEST DUP2 EQ PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152E DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154A JUMPI PUSH2 0x1549 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1558 DUP5 DUP3 DUP6 ADD PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156A DUP2 PUSH2 0x14FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B0 DUP6 DUP3 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C1 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E1 DUP2 PUSH2 0x15CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1617 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1626 DUP5 DUP3 DUP6 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1653 DUP5 DUP3 DUP6 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1681 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1692 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16F6 JUMPI PUSH2 0x16F5 PUSH2 0x169C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1705 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1720 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x172D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1481 JUMP JUMPDEST PUSH2 0x173A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1481 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1757 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1797 DUP3 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x17A2 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17BA JUMPI PUSH2 0x17B9 PUSH2 0x175D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x17E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1561 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x4E NUMBER 0xD7 0xAF STOP CALLDATACOPY SHL 0xDE GASLIMIT JUMPDEST SUB PUSH21 0x8B765AFA287C133C80D8BCBCB15891EB847B86473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"712:435:25:-:0;;;850:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;912:5;919:7;1656:5:7;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;977:42:25::1;2241:4:0;988:18:25::0;::::1;1008:10;977;;;:42;;:::i;:::-;;850:177:::0;;712:435;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:853::-;2778:6;2786;2835:2;2823:9;2814:7;2810:23;2806:32;2803:119;;;2841:79;;:::i;:::-;2803:119;2982:1;2971:9;2967:17;2961:24;3012:18;3004:6;3001:30;2998:117;;;3034:79;;:::i;:::-;2998:117;3139:74;3205:7;3196:6;3185:9;3181:22;3139:74;:::i;:::-;3129:84;;2932:291;3283:2;3272:9;3268:18;3262:25;3314:18;3306:6;3303:30;3300:117;;;3336:79;;:::i;:::-;3300:117;3441:74;3507:7;3498:6;3487:9;3483:22;3441:74;:::i;:::-;3431:84;;3233:292;2679:853;;;;;:::o;3538:99::-;3590:6;3624:5;3618:12;3608:22;;3538:99;;;:::o;3643:180::-;3691:77;3688:1;3681:88;3788:4;3785:1;3778:15;3812:4;3809:1;3802:15;3829:320;3873:6;3910:1;3904:4;3900:12;3890:22;;3957:1;3951:4;3947:12;3978:18;3968:81;;4034:4;4026:6;4022:17;4012:27;;3968:81;4096:2;4088:6;4085:14;4065:18;4062:38;4059:84;;4115:18;;:::i;:::-;4059:84;3880:269;3829:320;;;:::o;4155:141::-;4204:4;4227:3;4219:11;;4250:3;4247:1;4240:14;4284:4;4281:1;4271:18;4263:26;;4155:141;;;:::o;4302:93::-;4339:6;4386:2;4381;4374:5;4370:14;4366:23;4356:33;;4302:93;;;:::o;4401:107::-;4445:8;4495:5;4489:4;4485:16;4464:37;;4401:107;;;;:::o;4514:393::-;4583:6;4633:1;4621:10;4617:18;4656:97;4686:66;4675:9;4656:97;:::i;:::-;4774:39;4804:8;4793:9;4774:39;:::i;:::-;4762:51;;4846:4;4842:9;4835:5;4831:21;4822:30;;4895:4;4885:8;4881:19;4874:5;4871:30;4861:40;;4590:317;;4514:393;;;;;:::o;4913:77::-;4950:7;4979:5;4968:16;;4913:77;;;:::o;4996:60::-;5024:3;5045:5;5038:12;;4996:60;;;:::o;5062:142::-;5112:9;5145:53;5163:34;5172:24;5190:5;5172:24;:::i;:::-;5163:34;:::i;:::-;5145:53;:::i;:::-;5132:66;;5062:142;;;:::o;5210:75::-;5253:3;5274:5;5267:12;;5210:75;;;:::o;5291:269::-;5401:39;5432:7;5401:39;:::i;:::-;5462:91;5511:41;5535:16;5511:41;:::i;:::-;5503:6;5496:4;5490:11;5462:91;:::i;:::-;5456:4;5449:105;5367:193;5291:269;;;:::o;5566:73::-;5611:3;5566:73;:::o;5645:189::-;5722:32;;:::i;:::-;5763:65;5821:6;5813;5807:4;5763:65;:::i;:::-;5698:136;5645:189;;:::o;5840:186::-;5900:120;5917:3;5910:5;5907:14;5900:120;;;5971:39;6008:1;6001:5;5971:39;:::i;:::-;5944:1;5937:5;5933:13;5924:22;;5900:120;;;5840:186;;:::o;6032:543::-;6133:2;6128:3;6125:11;6122:446;;;6167:38;6199:5;6167:38;:::i;:::-;6251:29;6269:10;6251:29;:::i;:::-;6241:8;6237:44;6434:2;6422:10;6419:18;6416:49;;;6455:8;6440:23;;6416:49;6478:80;6534:22;6552:3;6534:22;:::i;:::-;6524:8;6520:37;6507:11;6478:80;:::i;:::-;6137:431;;6122:446;6032:543;;;:::o;6581:117::-;6635:8;6685:5;6679:4;6675:16;6654:37;;6581:117;;;;:::o;6704:169::-;6748:6;6781:51;6829:1;6825:6;6817:5;6814:1;6810:13;6781:51;:::i;:::-;6777:56;6862:4;6856;6852:15;6842:25;;6755:118;6704:169;;;;:::o;6878:295::-;6954:4;7100:29;7125:3;7119:4;7100:29;:::i;:::-;7092:37;;7162:3;7159:1;7155:11;7149:4;7146:21;7138:29;;6878:295;;;;:::o;7178:1395::-;7295:37;7328:3;7295:37;:::i;:::-;7397:18;7389:6;7386:30;7383:56;;;7419:18;;:::i;:::-;7383:56;7463:38;7495:4;7489:11;7463:38;:::i;:::-;7548:67;7608:6;7600;7594:4;7548:67;:::i;:::-;7642:1;7666:4;7653:17;;7698:2;7690:6;7687:14;7715:1;7710:618;;;;8372:1;8389:6;8386:77;;;8438:9;8433:3;8429:19;8423:26;8414:35;;8386:77;8489:67;8549:6;8542:5;8489:67;:::i;:::-;8483:4;8476:81;8345:222;7680:887;;7710:618;7762:4;7758:9;7750:6;7746:22;7796:37;7828:4;7796:37;:::i;:::-;7855:1;7869:208;7883:7;7880:1;7877:14;7869:208;;;7962:9;7957:3;7953:19;7947:26;7939:6;7932:42;8013:1;8005:6;8001:14;7991:24;;8060:2;8049:9;8045:18;8032:31;;7906:4;7903:1;7899:12;7894:17;;7869:208;;;8105:6;8096:7;8093:19;8090:179;;;8163:9;8158:3;8154:19;8148:26;8206:48;8248:4;8240:6;8236:17;8225:9;8206:48;:::i;:::-;8198:6;8191:64;8113:156;8090:179;8315:1;8311;8303:6;8299:14;8295:22;8289:4;8282:36;7717:611;;;7680:887;;7270:1303;;;7178:1395;;:::o;712:435:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":2065,"id":30,"parameterSlots":0,"returnSlots":0},"@ISSUER_ROLE_7755":{"entryPoint":1776,"id":7755,"parameterSlots":0,"returnSlots":0},"@_approve_1102":{"entryPoint":2390,"id":1102,"parameterSlots":3,"returnSlots":0},"@_approve_1162":{"entryPoint":3566,"id":1162,"parameterSlots":4,"returnSlots":0},"@_burn_1084":{"entryPoint":3436,"id":1084,"parameterSlots":2,"returnSlots":0},"@_checkRole_115":{"entryPoint":4586,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":2801,"id":94,"parameterSlots":1,"returnSlots":0},"@_grantRole_257":{"entryPoint":2821,"id":257,"parameterSlots":2,"returnSlots":1},"@_mint_1051":{"entryPoint":3306,"id":1051,"parameterSlots":2,"returnSlots":0},"@_msgSender_2698":{"entryPoint":2382,"id":2698,"parameterSlots":0,"returnSlots":1},"@_revokeRole_295":{"entryPoint":3063,"id":295,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1210":{"entryPoint":2408,"id":1210,"parameterSlots":3,"returnSlots":0},"@_transfer_941":{"entryPoint":2557,"id":941,"parameterSlots":3,"returnSlots":0},"@_update_1018":{"entryPoint":4037,"id":1018,"parameterSlots":3,"returnSlots":0},"@allowance_838":{"entryPoint":2141,"id":838,"parameterSlots":2,"returnSlots":1},"@approve_862":{"entryPoint":1305,"id":862,"parameterSlots":2,"returnSlots":1},"@balanceOf_797":{"entryPoint":1672,"id":797,"parameterSlots":1,"returnSlots":1},"@burnFrom_1334":{"entryPoint":1744,"id":1334,"parameterSlots":2,"returnSlots":0},"@burn_1313":{"entryPoint":1652,"id":1313,"parameterSlots":1,"returnSlots":0},"@decimals_775":{"entryPoint":1463,"id":775,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_129":{"entryPoint":1397,"id":129,"parameterSlots":1,"returnSlots":1},"@grantRole_148":{"entryPoint":1429,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":1812,"id":81,"parameterSlots":2,"returnSlots":1},"@mint_7789":{"entryPoint":1595,"id":7789,"parameterSlots":2,"returnSlots":0},"@name_757":{"entryPoint":1159,"id":757,"parameterSlots":0,"returnSlots":1},"@renounceRole_190":{"entryPoint":1472,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":2107,"id":167,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4193":{"entryPoint":2276,"id":4193,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":1037,"id":63,"parameterSlots":1,"returnSlots":1},"@symbol_766":{"entryPoint":1919,"id":766,"parameterSlots":0,"returnSlots":1},"@totalSupply_784":{"entryPoint":1340,"id":784,"parameterSlots":0,"returnSlots":1},"@transferFrom_894":{"entryPoint":1350,"id":894,"parameterSlots":3,"returnSlots":1},"@transfer_821":{"entryPoint":2072,"id":821,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":4739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5724,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5291,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5185,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5515,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5884,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4817,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5473,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5249,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5592,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":6080,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5899,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":5607,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4870,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6028,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4805,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5374,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4672,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5037,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5131,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5579,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4887,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5835,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5981,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5788,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4667,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4929,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":5087,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5384,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4716,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5141,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10315:26","nodeType":"YulBlock","src":"0:10315:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"378:105:26","nodeType":"YulBlock","src":"378:105:26","statements":[{"nativeSrc":"388:89:26","nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nativeSrc":"403:5:26","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nativeSrc":"410:66:26","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:26","nodeType":"YulIdentifier","src":"399:3:26"},"nativeSrc":"399:78:26","nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:26","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:26","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:26","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nativeSrc":"531:78:26","nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nativeSrc":"587:16:26","nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:26","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:26","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:26","nodeType":"YulIdentifier","src":"589:6:26"},"nativeSrc":"589:12:26","nodeType":"YulFunctionCall","src":"589:12:26"},"nativeSrc":"589:12:26","nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:26","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nativeSrc":"578:5:26","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:26","nodeType":"YulIdentifier","src":"561:16:26"},"nativeSrc":"561:23:26","nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nativeSrc":"551:2:26","nodeType":"YulIdentifier","src":"551:2:26"},"nativeSrc":"551:34:26","nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nativeSrc":"544:6:26","nodeType":"YulIdentifier","src":"544:6:26"},"nativeSrc":"544:42:26","nodeType":"YulFunctionCall","src":"544:42:26"},"nativeSrc":"541:62:26","nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:26","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nativeSrc":"666:86:26","nodeType":"YulBlock","src":"666:86:26","statements":[{"nativeSrc":"676:29:26","nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:26","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:26","nodeType":"YulIdentifier","src":"685:12:26"},"nativeSrc":"685:20:26","nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nativeSrc":"676:5:26","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:26","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:26","nodeType":"YulIdentifier","src":"714:25:26"},"nativeSrc":"714:32:26","nodeType":"YulFunctionCall","src":"714:32:26"},"nativeSrc":"714:32:26","nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:26","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nativeSrc":"652:3:26","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:26","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nativeSrc":"823:262:26","nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nativeSrc":"869:83:26","nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:26","nodeType":"YulIdentifier","src":"871:77:26"},"nativeSrc":"871:79:26","nodeType":"YulFunctionCall","src":"871:79:26"},"nativeSrc":"871:79:26","nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:26","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nativeSrc":"853:9:26","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nativeSrc":"840:3:26","nodeType":"YulIdentifier","src":"840:3:26"},"nativeSrc":"840:23:26","nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nativeSrc":"865:2:26","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:26","nodeType":"YulIdentifier","src":"836:3:26"},"nativeSrc":"836:32:26","nodeType":"YulFunctionCall","src":"836:32:26"},"nativeSrc":"833:119:26","nodeType":"YulIf","src":"833:119:26"},{"nativeSrc":"962:116:26","nodeType":"YulBlock","src":"962:116:26","statements":[{"nativeSrc":"977:15:26","nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nativeSrc":"991:1:26","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:26","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nativeSrc":"1006:62:26","nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:26","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nativeSrc":"1051:6:26","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nativeSrc":"1036:3:26","nodeType":"YulIdentifier","src":"1036:3:26"},"nativeSrc":"1036:22:26","nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nativeSrc":"1060:7:26","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:26","nodeType":"YulIdentifier","src":"1016:19:26"},"nativeSrc":"1016:52:26","nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:26","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:26","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nativeSrc":"804:7:26","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:26","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nativeSrc":"1133:48:26","nodeType":"YulBlock","src":"1133:48:26","statements":[{"nativeSrc":"1143:32:26","nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:26","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:26","nodeType":"YulIdentifier","src":"1161:6:26"},"nativeSrc":"1161:13:26","nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:26","nodeType":"YulIdentifier","src":"1154:6:26"},"nativeSrc":"1154:21:26","nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:26","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:26","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:26","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nativeSrc":"1246:50:26","nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:26","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nativeSrc":"1283:5:26","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:26","nodeType":"YulIdentifier","src":"1268:14:26"},"nativeSrc":"1268:21:26","nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:26","nodeType":"YulIdentifier","src":"1256:6:26"},"nativeSrc":"1256:34:26","nodeType":"YulFunctionCall","src":"1256:34:26"},"nativeSrc":"1256:34:26","nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:26","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nativeSrc":"1241:3:26","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nativeSrc":"1394:118:26","nodeType":"YulBlock","src":"1394:118:26","statements":[{"nativeSrc":"1404:26:26","nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:26","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nativeSrc":"1427:2:26","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:26","nodeType":"YulIdentifier","src":"1412:3:26"},"nativeSrc":"1412:18:26","nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:26","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:26","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:26","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nativeSrc":"1502:1:26","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:26","nodeType":"YulIdentifier","src":"1487:3:26"},"nativeSrc":"1487:17:26","nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:26","nodeType":"YulIdentifier","src":"1440:37:26"},"nativeSrc":"1440:65:26","nodeType":"YulFunctionCall","src":"1440:65:26"},"nativeSrc":"1440:65:26","nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:26","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nativeSrc":"1378:6:26","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:26","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nativeSrc":"1577:40:26","nodeType":"YulBlock","src":"1577:40:26","statements":[{"nativeSrc":"1588:22:26","nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:26","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nativeSrc":"1598:5:26","nodeType":"YulIdentifier","src":"1598:5:26"},"nativeSrc":"1598:12:26","nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nativeSrc":"1588:6:26","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:26","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:26","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nativeSrc":"1719:73:26","nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:26","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nativeSrc":"1741:6:26","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:26","nodeType":"YulIdentifier","src":"1729:6:26"},"nativeSrc":"1729:19:26","nodeType":"YulFunctionCall","src":"1729:19:26"},"nativeSrc":"1729:19:26","nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nativeSrc":"1757:29:26","nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:26","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nativeSrc":"1781:4:26","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:26","nodeType":"YulIdentifier","src":"1772:3:26"},"nativeSrc":"1772:14:26","nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:26","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:26","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nativeSrc":"1696:6:26","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:26","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nativeSrc":"1860:186:26","nodeType":"YulBlock","src":"1860:186:26","statements":[{"nativeSrc":"1871:10:26","nodeType":"YulVariableDeclaration","src":"1871:10:26","value":{"kind":"number","nativeSrc":"1880:1:26","nodeType":"YulLiteral","src":"1880:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:26","nodeType":"YulTypedName","src":"1875:1:26","type":""}]},{"body":{"nativeSrc":"1940:63:26","nodeType":"YulBlock","src":"1940:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:26","nodeType":"YulIdentifier","src":"1965:3:26"},{"name":"i","nativeSrc":"1970:1:26","nodeType":"YulIdentifier","src":"1970:1:26"}],"functionName":{"name":"add","nativeSrc":"1961:3:26","nodeType":"YulIdentifier","src":"1961:3:26"},"nativeSrc":"1961:11:26","nodeType":"YulFunctionCall","src":"1961:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:26","nodeType":"YulIdentifier","src":"1984:3:26"},{"name":"i","nativeSrc":"1989:1:26","nodeType":"YulIdentifier","src":"1989:1:26"}],"functionName":{"name":"add","nativeSrc":"1980:3:26","nodeType":"YulIdentifier","src":"1980:3:26"},"nativeSrc":"1980:11:26","nodeType":"YulFunctionCall","src":"1980:11:26"}],"functionName":{"name":"mload","nativeSrc":"1974:5:26","nodeType":"YulIdentifier","src":"1974:5:26"},"nativeSrc":"1974:18:26","nodeType":"YulFunctionCall","src":"1974:18:26"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:26","nodeType":"YulIdentifier","src":"1954:6:26"},"nativeSrc":"1954:39:26","nodeType":"YulFunctionCall","src":"1954:39:26"},"nativeSrc":"1954:39:26","nodeType":"YulExpressionStatement","src":"1954:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:26","nodeType":"YulIdentifier","src":"1901:1:26"},{"name":"length","nativeSrc":"1904:6:26","nodeType":"YulIdentifier","src":"1904:6:26"}],"functionName":{"name":"lt","nativeSrc":"1898:2:26","nodeType":"YulIdentifier","src":"1898:2:26"},"nativeSrc":"1898:13:26","nodeType":"YulFunctionCall","src":"1898:13:26"},"nativeSrc":"1890:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:26","nodeType":"YulBlock","src":"1912:19:26","statements":[{"nativeSrc":"1914:15:26","nodeType":"YulAssignment","src":"1914:15:26","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:26","nodeType":"YulIdentifier","src":"1923:1:26"},{"kind":"number","nativeSrc":"1926:2:26","nodeType":"YulLiteral","src":"1926:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:26","nodeType":"YulIdentifier","src":"1919:3:26"},"nativeSrc":"1919:10:26","nodeType":"YulFunctionCall","src":"1919:10:26"},"variableNames":[{"name":"i","nativeSrc":"1914:1:26","nodeType":"YulIdentifier","src":"1914:1:26"}]}]},"pre":{"nativeSrc":"1894:3:26","nodeType":"YulBlock","src":"1894:3:26","statements":[]},"src":"1890:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:26","nodeType":"YulIdentifier","src":"2023:3:26"},{"name":"length","nativeSrc":"2028:6:26","nodeType":"YulIdentifier","src":"2028:6:26"}],"functionName":{"name":"add","nativeSrc":"2019:3:26","nodeType":"YulIdentifier","src":"2019:3:26"},"nativeSrc":"2019:16:26","nodeType":"YulFunctionCall","src":"2019:16:26"},{"kind":"number","nativeSrc":"2037:1:26","nodeType":"YulLiteral","src":"2037:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:26","nodeType":"YulIdentifier","src":"2012:6:26"},"nativeSrc":"2012:27:26","nodeType":"YulFunctionCall","src":"2012:27:26"},"nativeSrc":"2012:27:26","nodeType":"YulExpressionStatement","src":"2012:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:26","nodeType":"YulTypedName","src":"1842:3:26","type":""},{"name":"dst","nativeSrc":"1847:3:26","nodeType":"YulTypedName","src":"1847:3:26","type":""},{"name":"length","nativeSrc":"1852:6:26","nodeType":"YulTypedName","src":"1852:6:26","type":""}],"src":"1798:248:26"},{"body":{"nativeSrc":"2100:54:26","nodeType":"YulBlock","src":"2100:54:26","statements":[{"nativeSrc":"2110:38:26","nodeType":"YulAssignment","src":"2110:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:26","nodeType":"YulIdentifier","src":"2128:5:26"},{"kind":"number","nativeSrc":"2135:2:26","nodeType":"YulLiteral","src":"2135:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:26","nodeType":"YulIdentifier","src":"2124:3:26"},"nativeSrc":"2124:14:26","nodeType":"YulFunctionCall","src":"2124:14:26"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:26","nodeType":"YulLiteral","src":"2144:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:26","nodeType":"YulIdentifier","src":"2140:3:26"},"nativeSrc":"2140:7:26","nodeType":"YulFunctionCall","src":"2140:7:26"}],"functionName":{"name":"and","nativeSrc":"2120:3:26","nodeType":"YulIdentifier","src":"2120:3:26"},"nativeSrc":"2120:28:26","nodeType":"YulFunctionCall","src":"2120:28:26"},"variableNames":[{"name":"result","nativeSrc":"2110:6:26","nodeType":"YulIdentifier","src":"2110:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:26","nodeType":"YulTypedName","src":"2083:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:26","nodeType":"YulTypedName","src":"2093:6:26","type":""}],"src":"2052:102:26"},{"body":{"nativeSrc":"2252:285:26","nodeType":"YulBlock","src":"2252:285:26","statements":[{"nativeSrc":"2262:53:26","nodeType":"YulVariableDeclaration","src":"2262:53:26","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:26","nodeType":"YulIdentifier","src":"2309:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:26","nodeType":"YulIdentifier","src":"2276:32:26"},"nativeSrc":"2276:39:26","nodeType":"YulFunctionCall","src":"2276:39:26"},"variables":[{"name":"length","nativeSrc":"2266:6:26","nodeType":"YulTypedName","src":"2266:6:26","type":""}]},{"nativeSrc":"2324:78:26","nodeType":"YulAssignment","src":"2324:78:26","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:26","nodeType":"YulIdentifier","src":"2390:3:26"},{"name":"length","nativeSrc":"2395:6:26","nodeType":"YulIdentifier","src":"2395:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:26","nodeType":"YulIdentifier","src":"2331:58:26"},"nativeSrc":"2331:71:26","nodeType":"YulFunctionCall","src":"2331:71:26"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:26","nodeType":"YulIdentifier","src":"2324:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:26","nodeType":"YulIdentifier","src":"2450:5:26"},{"kind":"number","nativeSrc":"2457:4:26","nodeType":"YulLiteral","src":"2457:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:26","nodeType":"YulIdentifier","src":"2446:3:26"},"nativeSrc":"2446:16:26","nodeType":"YulFunctionCall","src":"2446:16:26"},{"name":"pos","nativeSrc":"2464:3:26","nodeType":"YulIdentifier","src":"2464:3:26"},{"name":"length","nativeSrc":"2469:6:26","nodeType":"YulIdentifier","src":"2469:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:26","nodeType":"YulIdentifier","src":"2411:34:26"},"nativeSrc":"2411:65:26","nodeType":"YulFunctionCall","src":"2411:65:26"},"nativeSrc":"2411:65:26","nodeType":"YulExpressionStatement","src":"2411:65:26"},{"nativeSrc":"2485:46:26","nodeType":"YulAssignment","src":"2485:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:26","nodeType":"YulIdentifier","src":"2496:3:26"},{"arguments":[{"name":"length","nativeSrc":"2523:6:26","nodeType":"YulIdentifier","src":"2523:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:26","nodeType":"YulIdentifier","src":"2501:21:26"},"nativeSrc":"2501:29:26","nodeType":"YulFunctionCall","src":"2501:29:26"}],"functionName":{"name":"add","nativeSrc":"2492:3:26","nodeType":"YulIdentifier","src":"2492:3:26"},"nativeSrc":"2492:39:26","nodeType":"YulFunctionCall","src":"2492:39:26"},"variableNames":[{"name":"end","nativeSrc":"2485:3:26","nodeType":"YulIdentifier","src":"2485:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:26","nodeType":"YulTypedName","src":"2233:5:26","type":""},{"name":"pos","nativeSrc":"2240:3:26","nodeType":"YulTypedName","src":"2240:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:26","nodeType":"YulTypedName","src":"2248:3:26","type":""}],"src":"2160:377:26"},{"body":{"nativeSrc":"2661:195:26","nodeType":"YulBlock","src":"2661:195:26","statements":[{"nativeSrc":"2671:26:26","nodeType":"YulAssignment","src":"2671:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:26","nodeType":"YulIdentifier","src":"2683:9:26"},{"kind":"number","nativeSrc":"2694:2:26","nodeType":"YulLiteral","src":"2694:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:26","nodeType":"YulIdentifier","src":"2679:3:26"},"nativeSrc":"2679:18:26","nodeType":"YulFunctionCall","src":"2679:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:26","nodeType":"YulIdentifier","src":"2671:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:26","nodeType":"YulIdentifier","src":"2718:9:26"},{"kind":"number","nativeSrc":"2729:1:26","nodeType":"YulLiteral","src":"2729:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:26","nodeType":"YulIdentifier","src":"2714:3:26"},"nativeSrc":"2714:17:26","nodeType":"YulFunctionCall","src":"2714:17:26"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:26","nodeType":"YulIdentifier","src":"2737:4:26"},{"name":"headStart","nativeSrc":"2743:9:26","nodeType":"YulIdentifier","src":"2743:9:26"}],"functionName":{"name":"sub","nativeSrc":"2733:3:26","nodeType":"YulIdentifier","src":"2733:3:26"},"nativeSrc":"2733:20:26","nodeType":"YulFunctionCall","src":"2733:20:26"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:26","nodeType":"YulIdentifier","src":"2707:6:26"},"nativeSrc":"2707:47:26","nodeType":"YulFunctionCall","src":"2707:47:26"},"nativeSrc":"2707:47:26","nodeType":"YulExpressionStatement","src":"2707:47:26"},{"nativeSrc":"2763:86:26","nodeType":"YulAssignment","src":"2763:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:26","nodeType":"YulIdentifier","src":"2835:6:26"},{"name":"tail","nativeSrc":"2844:4:26","nodeType":"YulIdentifier","src":"2844:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:26","nodeType":"YulIdentifier","src":"2771:63:26"},"nativeSrc":"2771:78:26","nodeType":"YulFunctionCall","src":"2771:78:26"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:26","nodeType":"YulIdentifier","src":"2763:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:26","nodeType":"YulTypedName","src":"2633:9:26","type":""},{"name":"value0","nativeSrc":"2645:6:26","nodeType":"YulTypedName","src":"2645:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:26","nodeType":"YulTypedName","src":"2656:4:26","type":""}],"src":"2543:313:26"},{"body":{"nativeSrc":"2907:81:26","nodeType":"YulBlock","src":"2907:81:26","statements":[{"nativeSrc":"2917:65:26","nodeType":"YulAssignment","src":"2917:65:26","value":{"arguments":[{"name":"value","nativeSrc":"2932:5:26","nodeType":"YulIdentifier","src":"2932:5:26"},{"kind":"number","nativeSrc":"2939:42:26","nodeType":"YulLiteral","src":"2939:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2928:3:26","nodeType":"YulIdentifier","src":"2928:3:26"},"nativeSrc":"2928:54:26","nodeType":"YulFunctionCall","src":"2928:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:26","nodeType":"YulIdentifier","src":"2917:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2862:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:26","nodeType":"YulTypedName","src":"2889:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:26","nodeType":"YulTypedName","src":"2899:7:26","type":""}],"src":"2862:126:26"},{"body":{"nativeSrc":"3039:51:26","nodeType":"YulBlock","src":"3039:51:26","statements":[{"nativeSrc":"3049:35:26","nodeType":"YulAssignment","src":"3049:35:26","value":{"arguments":[{"name":"value","nativeSrc":"3078:5:26","nodeType":"YulIdentifier","src":"3078:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3060:17:26","nodeType":"YulIdentifier","src":"3060:17:26"},"nativeSrc":"3060:24:26","nodeType":"YulFunctionCall","src":"3060:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"3049:7:26","nodeType":"YulIdentifier","src":"3049:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"2994:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3021:5:26","nodeType":"YulTypedName","src":"3021:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3031:7:26","nodeType":"YulTypedName","src":"3031:7:26","type":""}],"src":"2994:96:26"},{"body":{"nativeSrc":"3139:79:26","nodeType":"YulBlock","src":"3139:79:26","statements":[{"body":{"nativeSrc":"3196:16:26","nodeType":"YulBlock","src":"3196:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3205:1:26","nodeType":"YulLiteral","src":"3205:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3208:1:26","nodeType":"YulLiteral","src":"3208:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3198:6:26","nodeType":"YulIdentifier","src":"3198:6:26"},"nativeSrc":"3198:12:26","nodeType":"YulFunctionCall","src":"3198:12:26"},"nativeSrc":"3198:12:26","nodeType":"YulExpressionStatement","src":"3198:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3162:5:26","nodeType":"YulIdentifier","src":"3162:5:26"},{"arguments":[{"name":"value","nativeSrc":"3187:5:26","nodeType":"YulIdentifier","src":"3187:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3169:17:26","nodeType":"YulIdentifier","src":"3169:17:26"},"nativeSrc":"3169:24:26","nodeType":"YulFunctionCall","src":"3169:24:26"}],"functionName":{"name":"eq","nativeSrc":"3159:2:26","nodeType":"YulIdentifier","src":"3159:2:26"},"nativeSrc":"3159:35:26","nodeType":"YulFunctionCall","src":"3159:35:26"}],"functionName":{"name":"iszero","nativeSrc":"3152:6:26","nodeType":"YulIdentifier","src":"3152:6:26"},"nativeSrc":"3152:43:26","nodeType":"YulFunctionCall","src":"3152:43:26"},"nativeSrc":"3149:63:26","nodeType":"YulIf","src":"3149:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"3096:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3132:5:26","nodeType":"YulTypedName","src":"3132:5:26","type":""}],"src":"3096:122:26"},{"body":{"nativeSrc":"3276:87:26","nodeType":"YulBlock","src":"3276:87:26","statements":[{"nativeSrc":"3286:29:26","nodeType":"YulAssignment","src":"3286:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"3308:6:26","nodeType":"YulIdentifier","src":"3308:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"3295:12:26","nodeType":"YulIdentifier","src":"3295:12:26"},"nativeSrc":"3295:20:26","nodeType":"YulFunctionCall","src":"3295:20:26"},"variableNames":[{"name":"value","nativeSrc":"3286:5:26","nodeType":"YulIdentifier","src":"3286:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3351:5:26","nodeType":"YulIdentifier","src":"3351:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3324:26:26","nodeType":"YulIdentifier","src":"3324:26:26"},"nativeSrc":"3324:33:26","nodeType":"YulFunctionCall","src":"3324:33:26"},"nativeSrc":"3324:33:26","nodeType":"YulExpressionStatement","src":"3324:33:26"}]},"name":"abi_decode_t_address","nativeSrc":"3224:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3254:6:26","nodeType":"YulTypedName","src":"3254:6:26","type":""},{"name":"end","nativeSrc":"3262:3:26","nodeType":"YulTypedName","src":"3262:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3270:5:26","nodeType":"YulTypedName","src":"3270:5:26","type":""}],"src":"3224:139:26"},{"body":{"nativeSrc":"3414:32:26","nodeType":"YulBlock","src":"3414:32:26","statements":[{"nativeSrc":"3424:16:26","nodeType":"YulAssignment","src":"3424:16:26","value":{"name":"value","nativeSrc":"3435:5:26","nodeType":"YulIdentifier","src":"3435:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"3424:7:26","nodeType":"YulIdentifier","src":"3424:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3369:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3396:5:26","nodeType":"YulTypedName","src":"3396:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3406:7:26","nodeType":"YulTypedName","src":"3406:7:26","type":""}],"src":"3369:77:26"},{"body":{"nativeSrc":"3495:79:26","nodeType":"YulBlock","src":"3495:79:26","statements":[{"body":{"nativeSrc":"3552:16:26","nodeType":"YulBlock","src":"3552:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:1:26","nodeType":"YulLiteral","src":"3561:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3564:1:26","nodeType":"YulLiteral","src":"3564:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3554:6:26","nodeType":"YulIdentifier","src":"3554:6:26"},"nativeSrc":"3554:12:26","nodeType":"YulFunctionCall","src":"3554:12:26"},"nativeSrc":"3554:12:26","nodeType":"YulExpressionStatement","src":"3554:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3518:5:26","nodeType":"YulIdentifier","src":"3518:5:26"},{"arguments":[{"name":"value","nativeSrc":"3543:5:26","nodeType":"YulIdentifier","src":"3543:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3525:17:26","nodeType":"YulIdentifier","src":"3525:17:26"},"nativeSrc":"3525:24:26","nodeType":"YulFunctionCall","src":"3525:24:26"}],"functionName":{"name":"eq","nativeSrc":"3515:2:26","nodeType":"YulIdentifier","src":"3515:2:26"},"nativeSrc":"3515:35:26","nodeType":"YulFunctionCall","src":"3515:35:26"}],"functionName":{"name":"iszero","nativeSrc":"3508:6:26","nodeType":"YulIdentifier","src":"3508:6:26"},"nativeSrc":"3508:43:26","nodeType":"YulFunctionCall","src":"3508:43:26"},"nativeSrc":"3505:63:26","nodeType":"YulIf","src":"3505:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"3452:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3488:5:26","nodeType":"YulTypedName","src":"3488:5:26","type":""}],"src":"3452:122:26"},{"body":{"nativeSrc":"3632:87:26","nodeType":"YulBlock","src":"3632:87:26","statements":[{"nativeSrc":"3642:29:26","nodeType":"YulAssignment","src":"3642:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"3664:6:26","nodeType":"YulIdentifier","src":"3664:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"3651:12:26","nodeType":"YulIdentifier","src":"3651:12:26"},"nativeSrc":"3651:20:26","nodeType":"YulFunctionCall","src":"3651:20:26"},"variableNames":[{"name":"value","nativeSrc":"3642:5:26","nodeType":"YulIdentifier","src":"3642:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3707:5:26","nodeType":"YulIdentifier","src":"3707:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3680:26:26","nodeType":"YulIdentifier","src":"3680:26:26"},"nativeSrc":"3680:33:26","nodeType":"YulFunctionCall","src":"3680:33:26"},"nativeSrc":"3680:33:26","nodeType":"YulExpressionStatement","src":"3680:33:26"}]},"name":"abi_decode_t_uint256","nativeSrc":"3580:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3610:6:26","nodeType":"YulTypedName","src":"3610:6:26","type":""},{"name":"end","nativeSrc":"3618:3:26","nodeType":"YulTypedName","src":"3618:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3626:5:26","nodeType":"YulTypedName","src":"3626:5:26","type":""}],"src":"3580:139:26"},{"body":{"nativeSrc":"3808:391:26","nodeType":"YulBlock","src":"3808:391:26","statements":[{"body":{"nativeSrc":"3854:83:26","nodeType":"YulBlock","src":"3854:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3856:77:26","nodeType":"YulIdentifier","src":"3856:77:26"},"nativeSrc":"3856:79:26","nodeType":"YulFunctionCall","src":"3856:79:26"},"nativeSrc":"3856:79:26","nodeType":"YulExpressionStatement","src":"3856:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3829:7:26","nodeType":"YulIdentifier","src":"3829:7:26"},{"name":"headStart","nativeSrc":"3838:9:26","nodeType":"YulIdentifier","src":"3838:9:26"}],"functionName":{"name":"sub","nativeSrc":"3825:3:26","nodeType":"YulIdentifier","src":"3825:3:26"},"nativeSrc":"3825:23:26","nodeType":"YulFunctionCall","src":"3825:23:26"},{"kind":"number","nativeSrc":"3850:2:26","nodeType":"YulLiteral","src":"3850:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3821:3:26","nodeType":"YulIdentifier","src":"3821:3:26"},"nativeSrc":"3821:32:26","nodeType":"YulFunctionCall","src":"3821:32:26"},"nativeSrc":"3818:119:26","nodeType":"YulIf","src":"3818:119:26"},{"nativeSrc":"3947:117:26","nodeType":"YulBlock","src":"3947:117:26","statements":[{"nativeSrc":"3962:15:26","nodeType":"YulVariableDeclaration","src":"3962:15:26","value":{"kind":"number","nativeSrc":"3976:1:26","nodeType":"YulLiteral","src":"3976:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3966:6:26","nodeType":"YulTypedName","src":"3966:6:26","type":""}]},{"nativeSrc":"3991:63:26","nodeType":"YulAssignment","src":"3991:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4026:9:26","nodeType":"YulIdentifier","src":"4026:9:26"},{"name":"offset","nativeSrc":"4037:6:26","nodeType":"YulIdentifier","src":"4037:6:26"}],"functionName":{"name":"add","nativeSrc":"4022:3:26","nodeType":"YulIdentifier","src":"4022:3:26"},"nativeSrc":"4022:22:26","nodeType":"YulFunctionCall","src":"4022:22:26"},{"name":"dataEnd","nativeSrc":"4046:7:26","nodeType":"YulIdentifier","src":"4046:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4001:20:26","nodeType":"YulIdentifier","src":"4001:20:26"},"nativeSrc":"4001:53:26","nodeType":"YulFunctionCall","src":"4001:53:26"},"variableNames":[{"name":"value0","nativeSrc":"3991:6:26","nodeType":"YulIdentifier","src":"3991:6:26"}]}]},{"nativeSrc":"4074:118:26","nodeType":"YulBlock","src":"4074:118:26","statements":[{"nativeSrc":"4089:16:26","nodeType":"YulVariableDeclaration","src":"4089:16:26","value":{"kind":"number","nativeSrc":"4103:2:26","nodeType":"YulLiteral","src":"4103:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4093:6:26","nodeType":"YulTypedName","src":"4093:6:26","type":""}]},{"nativeSrc":"4119:63:26","nodeType":"YulAssignment","src":"4119:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4154:9:26","nodeType":"YulIdentifier","src":"4154:9:26"},{"name":"offset","nativeSrc":"4165:6:26","nodeType":"YulIdentifier","src":"4165:6:26"}],"functionName":{"name":"add","nativeSrc":"4150:3:26","nodeType":"YulIdentifier","src":"4150:3:26"},"nativeSrc":"4150:22:26","nodeType":"YulFunctionCall","src":"4150:22:26"},{"name":"dataEnd","nativeSrc":"4174:7:26","nodeType":"YulIdentifier","src":"4174:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4129:20:26","nodeType":"YulIdentifier","src":"4129:20:26"},"nativeSrc":"4129:53:26","nodeType":"YulFunctionCall","src":"4129:53:26"},"variableNames":[{"name":"value1","nativeSrc":"4119:6:26","nodeType":"YulIdentifier","src":"4119:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3725:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3770:9:26","nodeType":"YulTypedName","src":"3770:9:26","type":""},{"name":"dataEnd","nativeSrc":"3781:7:26","nodeType":"YulTypedName","src":"3781:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3793:6:26","nodeType":"YulTypedName","src":"3793:6:26","type":""},{"name":"value1","nativeSrc":"3801:6:26","nodeType":"YulTypedName","src":"3801:6:26","type":""}],"src":"3725:474:26"},{"body":{"nativeSrc":"4270:53:26","nodeType":"YulBlock","src":"4270:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4287:3:26","nodeType":"YulIdentifier","src":"4287:3:26"},{"arguments":[{"name":"value","nativeSrc":"4310:5:26","nodeType":"YulIdentifier","src":"4310:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4292:17:26","nodeType":"YulIdentifier","src":"4292:17:26"},"nativeSrc":"4292:24:26","nodeType":"YulFunctionCall","src":"4292:24:26"}],"functionName":{"name":"mstore","nativeSrc":"4280:6:26","nodeType":"YulIdentifier","src":"4280:6:26"},"nativeSrc":"4280:37:26","nodeType":"YulFunctionCall","src":"4280:37:26"},"nativeSrc":"4280:37:26","nodeType":"YulExpressionStatement","src":"4280:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4205:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4258:5:26","nodeType":"YulTypedName","src":"4258:5:26","type":""},{"name":"pos","nativeSrc":"4265:3:26","nodeType":"YulTypedName","src":"4265:3:26","type":""}],"src":"4205:118:26"},{"body":{"nativeSrc":"4427:124:26","nodeType":"YulBlock","src":"4427:124:26","statements":[{"nativeSrc":"4437:26:26","nodeType":"YulAssignment","src":"4437:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4449:9:26","nodeType":"YulIdentifier","src":"4449:9:26"},{"kind":"number","nativeSrc":"4460:2:26","nodeType":"YulLiteral","src":"4460:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4445:3:26","nodeType":"YulIdentifier","src":"4445:3:26"},"nativeSrc":"4445:18:26","nodeType":"YulFunctionCall","src":"4445:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4437:4:26","nodeType":"YulIdentifier","src":"4437:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4517:6:26","nodeType":"YulIdentifier","src":"4517:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"4530:9:26","nodeType":"YulIdentifier","src":"4530:9:26"},{"kind":"number","nativeSrc":"4541:1:26","nodeType":"YulLiteral","src":"4541:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4526:3:26","nodeType":"YulIdentifier","src":"4526:3:26"},"nativeSrc":"4526:17:26","nodeType":"YulFunctionCall","src":"4526:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4473:43:26","nodeType":"YulIdentifier","src":"4473:43:26"},"nativeSrc":"4473:71:26","nodeType":"YulFunctionCall","src":"4473:71:26"},"nativeSrc":"4473:71:26","nodeType":"YulExpressionStatement","src":"4473:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4329:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4399:9:26","nodeType":"YulTypedName","src":"4399:9:26","type":""},{"name":"value0","nativeSrc":"4411:6:26","nodeType":"YulTypedName","src":"4411:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4422:4:26","nodeType":"YulTypedName","src":"4422:4:26","type":""}],"src":"4329:222:26"},{"body":{"nativeSrc":"4657:519:26","nodeType":"YulBlock","src":"4657:519:26","statements":[{"body":{"nativeSrc":"4703:83:26","nodeType":"YulBlock","src":"4703:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4705:77:26","nodeType":"YulIdentifier","src":"4705:77:26"},"nativeSrc":"4705:79:26","nodeType":"YulFunctionCall","src":"4705:79:26"},"nativeSrc":"4705:79:26","nodeType":"YulExpressionStatement","src":"4705:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4678:7:26","nodeType":"YulIdentifier","src":"4678:7:26"},{"name":"headStart","nativeSrc":"4687:9:26","nodeType":"YulIdentifier","src":"4687:9:26"}],"functionName":{"name":"sub","nativeSrc":"4674:3:26","nodeType":"YulIdentifier","src":"4674:3:26"},"nativeSrc":"4674:23:26","nodeType":"YulFunctionCall","src":"4674:23:26"},{"kind":"number","nativeSrc":"4699:2:26","nodeType":"YulLiteral","src":"4699:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4670:3:26","nodeType":"YulIdentifier","src":"4670:3:26"},"nativeSrc":"4670:32:26","nodeType":"YulFunctionCall","src":"4670:32:26"},"nativeSrc":"4667:119:26","nodeType":"YulIf","src":"4667:119:26"},{"nativeSrc":"4796:117:26","nodeType":"YulBlock","src":"4796:117:26","statements":[{"nativeSrc":"4811:15:26","nodeType":"YulVariableDeclaration","src":"4811:15:26","value":{"kind":"number","nativeSrc":"4825:1:26","nodeType":"YulLiteral","src":"4825:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4815:6:26","nodeType":"YulTypedName","src":"4815:6:26","type":""}]},{"nativeSrc":"4840:63:26","nodeType":"YulAssignment","src":"4840:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4875:9:26","nodeType":"YulIdentifier","src":"4875:9:26"},{"name":"offset","nativeSrc":"4886:6:26","nodeType":"YulIdentifier","src":"4886:6:26"}],"functionName":{"name":"add","nativeSrc":"4871:3:26","nodeType":"YulIdentifier","src":"4871:3:26"},"nativeSrc":"4871:22:26","nodeType":"YulFunctionCall","src":"4871:22:26"},{"name":"dataEnd","nativeSrc":"4895:7:26","nodeType":"YulIdentifier","src":"4895:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4850:20:26","nodeType":"YulIdentifier","src":"4850:20:26"},"nativeSrc":"4850:53:26","nodeType":"YulFunctionCall","src":"4850:53:26"},"variableNames":[{"name":"value0","nativeSrc":"4840:6:26","nodeType":"YulIdentifier","src":"4840:6:26"}]}]},{"nativeSrc":"4923:118:26","nodeType":"YulBlock","src":"4923:118:26","statements":[{"nativeSrc":"4938:16:26","nodeType":"YulVariableDeclaration","src":"4938:16:26","value":{"kind":"number","nativeSrc":"4952:2:26","nodeType":"YulLiteral","src":"4952:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4942:6:26","nodeType":"YulTypedName","src":"4942:6:26","type":""}]},{"nativeSrc":"4968:63:26","nodeType":"YulAssignment","src":"4968:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5003:9:26","nodeType":"YulIdentifier","src":"5003:9:26"},{"name":"offset","nativeSrc":"5014:6:26","nodeType":"YulIdentifier","src":"5014:6:26"}],"functionName":{"name":"add","nativeSrc":"4999:3:26","nodeType":"YulIdentifier","src":"4999:3:26"},"nativeSrc":"4999:22:26","nodeType":"YulFunctionCall","src":"4999:22:26"},{"name":"dataEnd","nativeSrc":"5023:7:26","nodeType":"YulIdentifier","src":"5023:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4978:20:26","nodeType":"YulIdentifier","src":"4978:20:26"},"nativeSrc":"4978:53:26","nodeType":"YulFunctionCall","src":"4978:53:26"},"variableNames":[{"name":"value1","nativeSrc":"4968:6:26","nodeType":"YulIdentifier","src":"4968:6:26"}]}]},{"nativeSrc":"5051:118:26","nodeType":"YulBlock","src":"5051:118:26","statements":[{"nativeSrc":"5066:16:26","nodeType":"YulVariableDeclaration","src":"5066:16:26","value":{"kind":"number","nativeSrc":"5080:2:26","nodeType":"YulLiteral","src":"5080:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5070:6:26","nodeType":"YulTypedName","src":"5070:6:26","type":""}]},{"nativeSrc":"5096:63:26","nodeType":"YulAssignment","src":"5096:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5131:9:26","nodeType":"YulIdentifier","src":"5131:9:26"},{"name":"offset","nativeSrc":"5142:6:26","nodeType":"YulIdentifier","src":"5142:6:26"}],"functionName":{"name":"add","nativeSrc":"5127:3:26","nodeType":"YulIdentifier","src":"5127:3:26"},"nativeSrc":"5127:22:26","nodeType":"YulFunctionCall","src":"5127:22:26"},{"name":"dataEnd","nativeSrc":"5151:7:26","nodeType":"YulIdentifier","src":"5151:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5106:20:26","nodeType":"YulIdentifier","src":"5106:20:26"},"nativeSrc":"5106:53:26","nodeType":"YulFunctionCall","src":"5106:53:26"},"variableNames":[{"name":"value2","nativeSrc":"5096:6:26","nodeType":"YulIdentifier","src":"5096:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4557:619:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4611:9:26","nodeType":"YulTypedName","src":"4611:9:26","type":""},{"name":"dataEnd","nativeSrc":"4622:7:26","nodeType":"YulTypedName","src":"4622:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4634:6:26","nodeType":"YulTypedName","src":"4634:6:26","type":""},{"name":"value1","nativeSrc":"4642:6:26","nodeType":"YulTypedName","src":"4642:6:26","type":""},{"name":"value2","nativeSrc":"4650:6:26","nodeType":"YulTypedName","src":"4650:6:26","type":""}],"src":"4557:619:26"},{"body":{"nativeSrc":"5227:32:26","nodeType":"YulBlock","src":"5227:32:26","statements":[{"nativeSrc":"5237:16:26","nodeType":"YulAssignment","src":"5237:16:26","value":{"name":"value","nativeSrc":"5248:5:26","nodeType":"YulIdentifier","src":"5248:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"5237:7:26","nodeType":"YulIdentifier","src":"5237:7:26"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5182:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5209:5:26","nodeType":"YulTypedName","src":"5209:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5219:7:26","nodeType":"YulTypedName","src":"5219:7:26","type":""}],"src":"5182:77:26"},{"body":{"nativeSrc":"5308:79:26","nodeType":"YulBlock","src":"5308:79:26","statements":[{"body":{"nativeSrc":"5365:16:26","nodeType":"YulBlock","src":"5365:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5374:1:26","nodeType":"YulLiteral","src":"5374:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5377:1:26","nodeType":"YulLiteral","src":"5377:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5367:6:26","nodeType":"YulIdentifier","src":"5367:6:26"},"nativeSrc":"5367:12:26","nodeType":"YulFunctionCall","src":"5367:12:26"},"nativeSrc":"5367:12:26","nodeType":"YulExpressionStatement","src":"5367:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5331:5:26","nodeType":"YulIdentifier","src":"5331:5:26"},{"arguments":[{"name":"value","nativeSrc":"5356:5:26","nodeType":"YulIdentifier","src":"5356:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5338:17:26","nodeType":"YulIdentifier","src":"5338:17:26"},"nativeSrc":"5338:24:26","nodeType":"YulFunctionCall","src":"5338:24:26"}],"functionName":{"name":"eq","nativeSrc":"5328:2:26","nodeType":"YulIdentifier","src":"5328:2:26"},"nativeSrc":"5328:35:26","nodeType":"YulFunctionCall","src":"5328:35:26"}],"functionName":{"name":"iszero","nativeSrc":"5321:6:26","nodeType":"YulIdentifier","src":"5321:6:26"},"nativeSrc":"5321:43:26","nodeType":"YulFunctionCall","src":"5321:43:26"},"nativeSrc":"5318:63:26","nodeType":"YulIf","src":"5318:63:26"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5265:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5301:5:26","nodeType":"YulTypedName","src":"5301:5:26","type":""}],"src":"5265:122:26"},{"body":{"nativeSrc":"5445:87:26","nodeType":"YulBlock","src":"5445:87:26","statements":[{"nativeSrc":"5455:29:26","nodeType":"YulAssignment","src":"5455:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"5477:6:26","nodeType":"YulIdentifier","src":"5477:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"5464:12:26","nodeType":"YulIdentifier","src":"5464:12:26"},"nativeSrc":"5464:20:26","nodeType":"YulFunctionCall","src":"5464:20:26"},"variableNames":[{"name":"value","nativeSrc":"5455:5:26","nodeType":"YulIdentifier","src":"5455:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5520:5:26","nodeType":"YulIdentifier","src":"5520:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5493:26:26","nodeType":"YulIdentifier","src":"5493:26:26"},"nativeSrc":"5493:33:26","nodeType":"YulFunctionCall","src":"5493:33:26"},"nativeSrc":"5493:33:26","nodeType":"YulExpressionStatement","src":"5493:33:26"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5393:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5423:6:26","nodeType":"YulTypedName","src":"5423:6:26","type":""},{"name":"end","nativeSrc":"5431:3:26","nodeType":"YulTypedName","src":"5431:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5439:5:26","nodeType":"YulTypedName","src":"5439:5:26","type":""}],"src":"5393:139:26"},{"body":{"nativeSrc":"5604:263:26","nodeType":"YulBlock","src":"5604:263:26","statements":[{"body":{"nativeSrc":"5650:83:26","nodeType":"YulBlock","src":"5650:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5652:77:26","nodeType":"YulIdentifier","src":"5652:77:26"},"nativeSrc":"5652:79:26","nodeType":"YulFunctionCall","src":"5652:79:26"},"nativeSrc":"5652:79:26","nodeType":"YulExpressionStatement","src":"5652:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5625:7:26","nodeType":"YulIdentifier","src":"5625:7:26"},{"name":"headStart","nativeSrc":"5634:9:26","nodeType":"YulIdentifier","src":"5634:9:26"}],"functionName":{"name":"sub","nativeSrc":"5621:3:26","nodeType":"YulIdentifier","src":"5621:3:26"},"nativeSrc":"5621:23:26","nodeType":"YulFunctionCall","src":"5621:23:26"},{"kind":"number","nativeSrc":"5646:2:26","nodeType":"YulLiteral","src":"5646:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5617:3:26","nodeType":"YulIdentifier","src":"5617:3:26"},"nativeSrc":"5617:32:26","nodeType":"YulFunctionCall","src":"5617:32:26"},"nativeSrc":"5614:119:26","nodeType":"YulIf","src":"5614:119:26"},{"nativeSrc":"5743:117:26","nodeType":"YulBlock","src":"5743:117:26","statements":[{"nativeSrc":"5758:15:26","nodeType":"YulVariableDeclaration","src":"5758:15:26","value":{"kind":"number","nativeSrc":"5772:1:26","nodeType":"YulLiteral","src":"5772:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5762:6:26","nodeType":"YulTypedName","src":"5762:6:26","type":""}]},{"nativeSrc":"5787:63:26","nodeType":"YulAssignment","src":"5787:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5822:9:26","nodeType":"YulIdentifier","src":"5822:9:26"},{"name":"offset","nativeSrc":"5833:6:26","nodeType":"YulIdentifier","src":"5833:6:26"}],"functionName":{"name":"add","nativeSrc":"5818:3:26","nodeType":"YulIdentifier","src":"5818:3:26"},"nativeSrc":"5818:22:26","nodeType":"YulFunctionCall","src":"5818:22:26"},{"name":"dataEnd","nativeSrc":"5842:7:26","nodeType":"YulIdentifier","src":"5842:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5797:20:26","nodeType":"YulIdentifier","src":"5797:20:26"},"nativeSrc":"5797:53:26","nodeType":"YulFunctionCall","src":"5797:53:26"},"variableNames":[{"name":"value0","nativeSrc":"5787:6:26","nodeType":"YulIdentifier","src":"5787:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5538:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5574:9:26","nodeType":"YulTypedName","src":"5574:9:26","type":""},{"name":"dataEnd","nativeSrc":"5585:7:26","nodeType":"YulTypedName","src":"5585:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5597:6:26","nodeType":"YulTypedName","src":"5597:6:26","type":""}],"src":"5538:329:26"},{"body":{"nativeSrc":"5938:53:26","nodeType":"YulBlock","src":"5938:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5955:3:26","nodeType":"YulIdentifier","src":"5955:3:26"},{"arguments":[{"name":"value","nativeSrc":"5978:5:26","nodeType":"YulIdentifier","src":"5978:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5960:17:26","nodeType":"YulIdentifier","src":"5960:17:26"},"nativeSrc":"5960:24:26","nodeType":"YulFunctionCall","src":"5960:24:26"}],"functionName":{"name":"mstore","nativeSrc":"5948:6:26","nodeType":"YulIdentifier","src":"5948:6:26"},"nativeSrc":"5948:37:26","nodeType":"YulFunctionCall","src":"5948:37:26"},"nativeSrc":"5948:37:26","nodeType":"YulExpressionStatement","src":"5948:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5873:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5926:5:26","nodeType":"YulTypedName","src":"5926:5:26","type":""},{"name":"pos","nativeSrc":"5933:3:26","nodeType":"YulTypedName","src":"5933:3:26","type":""}],"src":"5873:118:26"},{"body":{"nativeSrc":"6095:124:26","nodeType":"YulBlock","src":"6095:124:26","statements":[{"nativeSrc":"6105:26:26","nodeType":"YulAssignment","src":"6105:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6117:9:26","nodeType":"YulIdentifier","src":"6117:9:26"},{"kind":"number","nativeSrc":"6128:2:26","nodeType":"YulLiteral","src":"6128:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6113:3:26","nodeType":"YulIdentifier","src":"6113:3:26"},"nativeSrc":"6113:18:26","nodeType":"YulFunctionCall","src":"6113:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6105:4:26","nodeType":"YulIdentifier","src":"6105:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6185:6:26","nodeType":"YulIdentifier","src":"6185:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"6198:9:26","nodeType":"YulIdentifier","src":"6198:9:26"},{"kind":"number","nativeSrc":"6209:1:26","nodeType":"YulLiteral","src":"6209:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6194:3:26","nodeType":"YulIdentifier","src":"6194:3:26"},"nativeSrc":"6194:17:26","nodeType":"YulFunctionCall","src":"6194:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6141:43:26","nodeType":"YulIdentifier","src":"6141:43:26"},"nativeSrc":"6141:71:26","nodeType":"YulFunctionCall","src":"6141:71:26"},"nativeSrc":"6141:71:26","nodeType":"YulExpressionStatement","src":"6141:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5997:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6067:9:26","nodeType":"YulTypedName","src":"6067:9:26","type":""},{"name":"value0","nativeSrc":"6079:6:26","nodeType":"YulTypedName","src":"6079:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6090:4:26","nodeType":"YulTypedName","src":"6090:4:26","type":""}],"src":"5997:222:26"},{"body":{"nativeSrc":"6308:391:26","nodeType":"YulBlock","src":"6308:391:26","statements":[{"body":{"nativeSrc":"6354:83:26","nodeType":"YulBlock","src":"6354:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6356:77:26","nodeType":"YulIdentifier","src":"6356:77:26"},"nativeSrc":"6356:79:26","nodeType":"YulFunctionCall","src":"6356:79:26"},"nativeSrc":"6356:79:26","nodeType":"YulExpressionStatement","src":"6356:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6329:7:26","nodeType":"YulIdentifier","src":"6329:7:26"},{"name":"headStart","nativeSrc":"6338:9:26","nodeType":"YulIdentifier","src":"6338:9:26"}],"functionName":{"name":"sub","nativeSrc":"6325:3:26","nodeType":"YulIdentifier","src":"6325:3:26"},"nativeSrc":"6325:23:26","nodeType":"YulFunctionCall","src":"6325:23:26"},{"kind":"number","nativeSrc":"6350:2:26","nodeType":"YulLiteral","src":"6350:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6321:3:26","nodeType":"YulIdentifier","src":"6321:3:26"},"nativeSrc":"6321:32:26","nodeType":"YulFunctionCall","src":"6321:32:26"},"nativeSrc":"6318:119:26","nodeType":"YulIf","src":"6318:119:26"},{"nativeSrc":"6447:117:26","nodeType":"YulBlock","src":"6447:117:26","statements":[{"nativeSrc":"6462:15:26","nodeType":"YulVariableDeclaration","src":"6462:15:26","value":{"kind":"number","nativeSrc":"6476:1:26","nodeType":"YulLiteral","src":"6476:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6466:6:26","nodeType":"YulTypedName","src":"6466:6:26","type":""}]},{"nativeSrc":"6491:63:26","nodeType":"YulAssignment","src":"6491:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6526:9:26","nodeType":"YulIdentifier","src":"6526:9:26"},{"name":"offset","nativeSrc":"6537:6:26","nodeType":"YulIdentifier","src":"6537:6:26"}],"functionName":{"name":"add","nativeSrc":"6522:3:26","nodeType":"YulIdentifier","src":"6522:3:26"},"nativeSrc":"6522:22:26","nodeType":"YulFunctionCall","src":"6522:22:26"},{"name":"dataEnd","nativeSrc":"6546:7:26","nodeType":"YulIdentifier","src":"6546:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6501:20:26","nodeType":"YulIdentifier","src":"6501:20:26"},"nativeSrc":"6501:53:26","nodeType":"YulFunctionCall","src":"6501:53:26"},"variableNames":[{"name":"value0","nativeSrc":"6491:6:26","nodeType":"YulIdentifier","src":"6491:6:26"}]}]},{"nativeSrc":"6574:118:26","nodeType":"YulBlock","src":"6574:118:26","statements":[{"nativeSrc":"6589:16:26","nodeType":"YulVariableDeclaration","src":"6589:16:26","value":{"kind":"number","nativeSrc":"6603:2:26","nodeType":"YulLiteral","src":"6603:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6593:6:26","nodeType":"YulTypedName","src":"6593:6:26","type":""}]},{"nativeSrc":"6619:63:26","nodeType":"YulAssignment","src":"6619:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6654:9:26","nodeType":"YulIdentifier","src":"6654:9:26"},{"name":"offset","nativeSrc":"6665:6:26","nodeType":"YulIdentifier","src":"6665:6:26"}],"functionName":{"name":"add","nativeSrc":"6650:3:26","nodeType":"YulIdentifier","src":"6650:3:26"},"nativeSrc":"6650:22:26","nodeType":"YulFunctionCall","src":"6650:22:26"},{"name":"dataEnd","nativeSrc":"6674:7:26","nodeType":"YulIdentifier","src":"6674:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6629:20:26","nodeType":"YulIdentifier","src":"6629:20:26"},"nativeSrc":"6629:53:26","nodeType":"YulFunctionCall","src":"6629:53:26"},"variableNames":[{"name":"value1","nativeSrc":"6619:6:26","nodeType":"YulIdentifier","src":"6619:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"6225:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6270:9:26","nodeType":"YulTypedName","src":"6270:9:26","type":""},{"name":"dataEnd","nativeSrc":"6281:7:26","nodeType":"YulTypedName","src":"6281:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6293:6:26","nodeType":"YulTypedName","src":"6293:6:26","type":""},{"name":"value1","nativeSrc":"6301:6:26","nodeType":"YulTypedName","src":"6301:6:26","type":""}],"src":"6225:474:26"},{"body":{"nativeSrc":"6748:43:26","nodeType":"YulBlock","src":"6748:43:26","statements":[{"nativeSrc":"6758:27:26","nodeType":"YulAssignment","src":"6758:27:26","value":{"arguments":[{"name":"value","nativeSrc":"6773:5:26","nodeType":"YulIdentifier","src":"6773:5:26"},{"kind":"number","nativeSrc":"6780:4:26","nodeType":"YulLiteral","src":"6780:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6769:3:26","nodeType":"YulIdentifier","src":"6769:3:26"},"nativeSrc":"6769:16:26","nodeType":"YulFunctionCall","src":"6769:16:26"},"variableNames":[{"name":"cleaned","nativeSrc":"6758:7:26","nodeType":"YulIdentifier","src":"6758:7:26"}]}]},"name":"cleanup_t_uint8","nativeSrc":"6705:86:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6730:5:26","nodeType":"YulTypedName","src":"6730:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6740:7:26","nodeType":"YulTypedName","src":"6740:7:26","type":""}],"src":"6705:86:26"},{"body":{"nativeSrc":"6858:51:26","nodeType":"YulBlock","src":"6858:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6875:3:26","nodeType":"YulIdentifier","src":"6875:3:26"},{"arguments":[{"name":"value","nativeSrc":"6896:5:26","nodeType":"YulIdentifier","src":"6896:5:26"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"6880:15:26","nodeType":"YulIdentifier","src":"6880:15:26"},"nativeSrc":"6880:22:26","nodeType":"YulFunctionCall","src":"6880:22:26"}],"functionName":{"name":"mstore","nativeSrc":"6868:6:26","nodeType":"YulIdentifier","src":"6868:6:26"},"nativeSrc":"6868:35:26","nodeType":"YulFunctionCall","src":"6868:35:26"},"nativeSrc":"6868:35:26","nodeType":"YulExpressionStatement","src":"6868:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"6797:112:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6846:5:26","nodeType":"YulTypedName","src":"6846:5:26","type":""},{"name":"pos","nativeSrc":"6853:3:26","nodeType":"YulTypedName","src":"6853:3:26","type":""}],"src":"6797:112:26"},{"body":{"nativeSrc":"7009:120:26","nodeType":"YulBlock","src":"7009:120:26","statements":[{"nativeSrc":"7019:26:26","nodeType":"YulAssignment","src":"7019:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7031:9:26","nodeType":"YulIdentifier","src":"7031:9:26"},{"kind":"number","nativeSrc":"7042:2:26","nodeType":"YulLiteral","src":"7042:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7027:3:26","nodeType":"YulIdentifier","src":"7027:3:26"},"nativeSrc":"7027:18:26","nodeType":"YulFunctionCall","src":"7027:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7019:4:26","nodeType":"YulIdentifier","src":"7019:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7095:6:26","nodeType":"YulIdentifier","src":"7095:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"7108:9:26","nodeType":"YulIdentifier","src":"7108:9:26"},{"kind":"number","nativeSrc":"7119:1:26","nodeType":"YulLiteral","src":"7119:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7104:3:26","nodeType":"YulIdentifier","src":"7104:3:26"},"nativeSrc":"7104:17:26","nodeType":"YulFunctionCall","src":"7104:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7055:39:26","nodeType":"YulIdentifier","src":"7055:39:26"},"nativeSrc":"7055:67:26","nodeType":"YulFunctionCall","src":"7055:67:26"},"nativeSrc":"7055:67:26","nodeType":"YulExpressionStatement","src":"7055:67:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"6915:214:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6981:9:26","nodeType":"YulTypedName","src":"6981:9:26","type":""},{"name":"value0","nativeSrc":"6993:6:26","nodeType":"YulTypedName","src":"6993:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7004:4:26","nodeType":"YulTypedName","src":"7004:4:26","type":""}],"src":"6915:214:26"},{"body":{"nativeSrc":"7201:263:26","nodeType":"YulBlock","src":"7201:263:26","statements":[{"body":{"nativeSrc":"7247:83:26","nodeType":"YulBlock","src":"7247:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7249:77:26","nodeType":"YulIdentifier","src":"7249:77:26"},"nativeSrc":"7249:79:26","nodeType":"YulFunctionCall","src":"7249:79:26"},"nativeSrc":"7249:79:26","nodeType":"YulExpressionStatement","src":"7249:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7222:7:26","nodeType":"YulIdentifier","src":"7222:7:26"},{"name":"headStart","nativeSrc":"7231:9:26","nodeType":"YulIdentifier","src":"7231:9:26"}],"functionName":{"name":"sub","nativeSrc":"7218:3:26","nodeType":"YulIdentifier","src":"7218:3:26"},"nativeSrc":"7218:23:26","nodeType":"YulFunctionCall","src":"7218:23:26"},{"kind":"number","nativeSrc":"7243:2:26","nodeType":"YulLiteral","src":"7243:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7214:3:26","nodeType":"YulIdentifier","src":"7214:3:26"},"nativeSrc":"7214:32:26","nodeType":"YulFunctionCall","src":"7214:32:26"},"nativeSrc":"7211:119:26","nodeType":"YulIf","src":"7211:119:26"},{"nativeSrc":"7340:117:26","nodeType":"YulBlock","src":"7340:117:26","statements":[{"nativeSrc":"7355:15:26","nodeType":"YulVariableDeclaration","src":"7355:15:26","value":{"kind":"number","nativeSrc":"7369:1:26","nodeType":"YulLiteral","src":"7369:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7359:6:26","nodeType":"YulTypedName","src":"7359:6:26","type":""}]},{"nativeSrc":"7384:63:26","nodeType":"YulAssignment","src":"7384:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7419:9:26","nodeType":"YulIdentifier","src":"7419:9:26"},{"name":"offset","nativeSrc":"7430:6:26","nodeType":"YulIdentifier","src":"7430:6:26"}],"functionName":{"name":"add","nativeSrc":"7415:3:26","nodeType":"YulIdentifier","src":"7415:3:26"},"nativeSrc":"7415:22:26","nodeType":"YulFunctionCall","src":"7415:22:26"},{"name":"dataEnd","nativeSrc":"7439:7:26","nodeType":"YulIdentifier","src":"7439:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7394:20:26","nodeType":"YulIdentifier","src":"7394:20:26"},"nativeSrc":"7394:53:26","nodeType":"YulFunctionCall","src":"7394:53:26"},"variableNames":[{"name":"value0","nativeSrc":"7384:6:26","nodeType":"YulIdentifier","src":"7384:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"7135:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7171:9:26","nodeType":"YulTypedName","src":"7171:9:26","type":""},{"name":"dataEnd","nativeSrc":"7182:7:26","nodeType":"YulTypedName","src":"7182:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7194:6:26","nodeType":"YulTypedName","src":"7194:6:26","type":""}],"src":"7135:329:26"},{"body":{"nativeSrc":"7536:263:26","nodeType":"YulBlock","src":"7536:263:26","statements":[{"body":{"nativeSrc":"7582:83:26","nodeType":"YulBlock","src":"7582:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7584:77:26","nodeType":"YulIdentifier","src":"7584:77:26"},"nativeSrc":"7584:79:26","nodeType":"YulFunctionCall","src":"7584:79:26"},"nativeSrc":"7584:79:26","nodeType":"YulExpressionStatement","src":"7584:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7557:7:26","nodeType":"YulIdentifier","src":"7557:7:26"},{"name":"headStart","nativeSrc":"7566:9:26","nodeType":"YulIdentifier","src":"7566:9:26"}],"functionName":{"name":"sub","nativeSrc":"7553:3:26","nodeType":"YulIdentifier","src":"7553:3:26"},"nativeSrc":"7553:23:26","nodeType":"YulFunctionCall","src":"7553:23:26"},{"kind":"number","nativeSrc":"7578:2:26","nodeType":"YulLiteral","src":"7578:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7549:3:26","nodeType":"YulIdentifier","src":"7549:3:26"},"nativeSrc":"7549:32:26","nodeType":"YulFunctionCall","src":"7549:32:26"},"nativeSrc":"7546:119:26","nodeType":"YulIf","src":"7546:119:26"},{"nativeSrc":"7675:117:26","nodeType":"YulBlock","src":"7675:117:26","statements":[{"nativeSrc":"7690:15:26","nodeType":"YulVariableDeclaration","src":"7690:15:26","value":{"kind":"number","nativeSrc":"7704:1:26","nodeType":"YulLiteral","src":"7704:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7694:6:26","nodeType":"YulTypedName","src":"7694:6:26","type":""}]},{"nativeSrc":"7719:63:26","nodeType":"YulAssignment","src":"7719:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7754:9:26","nodeType":"YulIdentifier","src":"7754:9:26"},{"name":"offset","nativeSrc":"7765:6:26","nodeType":"YulIdentifier","src":"7765:6:26"}],"functionName":{"name":"add","nativeSrc":"7750:3:26","nodeType":"YulIdentifier","src":"7750:3:26"},"nativeSrc":"7750:22:26","nodeType":"YulFunctionCall","src":"7750:22:26"},{"name":"dataEnd","nativeSrc":"7774:7:26","nodeType":"YulIdentifier","src":"7774:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7729:20:26","nodeType":"YulIdentifier","src":"7729:20:26"},"nativeSrc":"7729:53:26","nodeType":"YulFunctionCall","src":"7729:53:26"},"variableNames":[{"name":"value0","nativeSrc":"7719:6:26","nodeType":"YulIdentifier","src":"7719:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7470:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7506:9:26","nodeType":"YulTypedName","src":"7506:9:26","type":""},{"name":"dataEnd","nativeSrc":"7517:7:26","nodeType":"YulTypedName","src":"7517:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7529:6:26","nodeType":"YulTypedName","src":"7529:6:26","type":""}],"src":"7470:329:26"},{"body":{"nativeSrc":"7888:391:26","nodeType":"YulBlock","src":"7888:391:26","statements":[{"body":{"nativeSrc":"7934:83:26","nodeType":"YulBlock","src":"7934:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7936:77:26","nodeType":"YulIdentifier","src":"7936:77:26"},"nativeSrc":"7936:79:26","nodeType":"YulFunctionCall","src":"7936:79:26"},"nativeSrc":"7936:79:26","nodeType":"YulExpressionStatement","src":"7936:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7909:7:26","nodeType":"YulIdentifier","src":"7909:7:26"},{"name":"headStart","nativeSrc":"7918:9:26","nodeType":"YulIdentifier","src":"7918:9:26"}],"functionName":{"name":"sub","nativeSrc":"7905:3:26","nodeType":"YulIdentifier","src":"7905:3:26"},"nativeSrc":"7905:23:26","nodeType":"YulFunctionCall","src":"7905:23:26"},{"kind":"number","nativeSrc":"7930:2:26","nodeType":"YulLiteral","src":"7930:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7901:3:26","nodeType":"YulIdentifier","src":"7901:3:26"},"nativeSrc":"7901:32:26","nodeType":"YulFunctionCall","src":"7901:32:26"},"nativeSrc":"7898:119:26","nodeType":"YulIf","src":"7898:119:26"},{"nativeSrc":"8027:117:26","nodeType":"YulBlock","src":"8027:117:26","statements":[{"nativeSrc":"8042:15:26","nodeType":"YulVariableDeclaration","src":"8042:15:26","value":{"kind":"number","nativeSrc":"8056:1:26","nodeType":"YulLiteral","src":"8056:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8046:6:26","nodeType":"YulTypedName","src":"8046:6:26","type":""}]},{"nativeSrc":"8071:63:26","nodeType":"YulAssignment","src":"8071:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8106:9:26","nodeType":"YulIdentifier","src":"8106:9:26"},{"name":"offset","nativeSrc":"8117:6:26","nodeType":"YulIdentifier","src":"8117:6:26"}],"functionName":{"name":"add","nativeSrc":"8102:3:26","nodeType":"YulIdentifier","src":"8102:3:26"},"nativeSrc":"8102:22:26","nodeType":"YulFunctionCall","src":"8102:22:26"},{"name":"dataEnd","nativeSrc":"8126:7:26","nodeType":"YulIdentifier","src":"8126:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8081:20:26","nodeType":"YulIdentifier","src":"8081:20:26"},"nativeSrc":"8081:53:26","nodeType":"YulFunctionCall","src":"8081:53:26"},"variableNames":[{"name":"value0","nativeSrc":"8071:6:26","nodeType":"YulIdentifier","src":"8071:6:26"}]}]},{"nativeSrc":"8154:118:26","nodeType":"YulBlock","src":"8154:118:26","statements":[{"nativeSrc":"8169:16:26","nodeType":"YulVariableDeclaration","src":"8169:16:26","value":{"kind":"number","nativeSrc":"8183:2:26","nodeType":"YulLiteral","src":"8183:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8173:6:26","nodeType":"YulTypedName","src":"8173:6:26","type":""}]},{"nativeSrc":"8199:63:26","nodeType":"YulAssignment","src":"8199:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8234:9:26","nodeType":"YulIdentifier","src":"8234:9:26"},{"name":"offset","nativeSrc":"8245:6:26","nodeType":"YulIdentifier","src":"8245:6:26"}],"functionName":{"name":"add","nativeSrc":"8230:3:26","nodeType":"YulIdentifier","src":"8230:3:26"},"nativeSrc":"8230:22:26","nodeType":"YulFunctionCall","src":"8230:22:26"},{"name":"dataEnd","nativeSrc":"8254:7:26","nodeType":"YulIdentifier","src":"8254:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8209:20:26","nodeType":"YulIdentifier","src":"8209:20:26"},"nativeSrc":"8209:53:26","nodeType":"YulFunctionCall","src":"8209:53:26"},"variableNames":[{"name":"value1","nativeSrc":"8199:6:26","nodeType":"YulIdentifier","src":"8199:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"7805:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7850:9:26","nodeType":"YulTypedName","src":"7850:9:26","type":""},{"name":"dataEnd","nativeSrc":"7861:7:26","nodeType":"YulTypedName","src":"7861:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7873:6:26","nodeType":"YulTypedName","src":"7873:6:26","type":""},{"name":"value1","nativeSrc":"7881:6:26","nodeType":"YulTypedName","src":"7881:6:26","type":""}],"src":"7805:474:26"},{"body":{"nativeSrc":"8313:152:26","nodeType":"YulBlock","src":"8313:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8330:1:26","nodeType":"YulLiteral","src":"8330:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8333:77:26","nodeType":"YulLiteral","src":"8333:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8323:6:26","nodeType":"YulIdentifier","src":"8323:6:26"},"nativeSrc":"8323:88:26","nodeType":"YulFunctionCall","src":"8323:88:26"},"nativeSrc":"8323:88:26","nodeType":"YulExpressionStatement","src":"8323:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8427:1:26","nodeType":"YulLiteral","src":"8427:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"8430:4:26","nodeType":"YulLiteral","src":"8430:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"8420:6:26","nodeType":"YulIdentifier","src":"8420:6:26"},"nativeSrc":"8420:15:26","nodeType":"YulFunctionCall","src":"8420:15:26"},"nativeSrc":"8420:15:26","nodeType":"YulExpressionStatement","src":"8420:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8451:1:26","nodeType":"YulLiteral","src":"8451:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8454:4:26","nodeType":"YulLiteral","src":"8454:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8444:6:26","nodeType":"YulIdentifier","src":"8444:6:26"},"nativeSrc":"8444:15:26","nodeType":"YulFunctionCall","src":"8444:15:26"},"nativeSrc":"8444:15:26","nodeType":"YulExpressionStatement","src":"8444:15:26"}]},"name":"panic_error_0x22","nativeSrc":"8285:180:26","nodeType":"YulFunctionDefinition","src":"8285:180:26"},{"body":{"nativeSrc":"8522:269:26","nodeType":"YulBlock","src":"8522:269:26","statements":[{"nativeSrc":"8532:22:26","nodeType":"YulAssignment","src":"8532:22:26","value":{"arguments":[{"name":"data","nativeSrc":"8546:4:26","nodeType":"YulIdentifier","src":"8546:4:26"},{"kind":"number","nativeSrc":"8552:1:26","nodeType":"YulLiteral","src":"8552:1:26","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"8542:3:26","nodeType":"YulIdentifier","src":"8542:3:26"},"nativeSrc":"8542:12:26","nodeType":"YulFunctionCall","src":"8542:12:26"},"variableNames":[{"name":"length","nativeSrc":"8532:6:26","nodeType":"YulIdentifier","src":"8532:6:26"}]},{"nativeSrc":"8563:38:26","nodeType":"YulVariableDeclaration","src":"8563:38:26","value":{"arguments":[{"name":"data","nativeSrc":"8593:4:26","nodeType":"YulIdentifier","src":"8593:4:26"},{"kind":"number","nativeSrc":"8599:1:26","nodeType":"YulLiteral","src":"8599:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"8589:3:26","nodeType":"YulIdentifier","src":"8589:3:26"},"nativeSrc":"8589:12:26","nodeType":"YulFunctionCall","src":"8589:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"8567:18:26","nodeType":"YulTypedName","src":"8567:18:26","type":""}]},{"body":{"nativeSrc":"8640:51:26","nodeType":"YulBlock","src":"8640:51:26","statements":[{"nativeSrc":"8654:27:26","nodeType":"YulAssignment","src":"8654:27:26","value":{"arguments":[{"name":"length","nativeSrc":"8668:6:26","nodeType":"YulIdentifier","src":"8668:6:26"},{"kind":"number","nativeSrc":"8676:4:26","nodeType":"YulLiteral","src":"8676:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"8664:3:26","nodeType":"YulIdentifier","src":"8664:3:26"},"nativeSrc":"8664:17:26","nodeType":"YulFunctionCall","src":"8664:17:26"},"variableNames":[{"name":"length","nativeSrc":"8654:6:26","nodeType":"YulIdentifier","src":"8654:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8620:18:26","nodeType":"YulIdentifier","src":"8620:18:26"}],"functionName":{"name":"iszero","nativeSrc":"8613:6:26","nodeType":"YulIdentifier","src":"8613:6:26"},"nativeSrc":"8613:26:26","nodeType":"YulFunctionCall","src":"8613:26:26"},"nativeSrc":"8610:81:26","nodeType":"YulIf","src":"8610:81:26"},{"body":{"nativeSrc":"8743:42:26","nodeType":"YulBlock","src":"8743:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"8757:16:26","nodeType":"YulIdentifier","src":"8757:16:26"},"nativeSrc":"8757:18:26","nodeType":"YulFunctionCall","src":"8757:18:26"},"nativeSrc":"8757:18:26","nodeType":"YulExpressionStatement","src":"8757:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8707:18:26","nodeType":"YulIdentifier","src":"8707:18:26"},{"arguments":[{"name":"length","nativeSrc":"8730:6:26","nodeType":"YulIdentifier","src":"8730:6:26"},{"kind":"number","nativeSrc":"8738:2:26","nodeType":"YulLiteral","src":"8738:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8727:2:26","nodeType":"YulIdentifier","src":"8727:2:26"},"nativeSrc":"8727:14:26","nodeType":"YulFunctionCall","src":"8727:14:26"}],"functionName":{"name":"eq","nativeSrc":"8704:2:26","nodeType":"YulIdentifier","src":"8704:2:26"},"nativeSrc":"8704:38:26","nodeType":"YulFunctionCall","src":"8704:38:26"},"nativeSrc":"8701:84:26","nodeType":"YulIf","src":"8701:84:26"}]},"name":"extract_byte_array_length","nativeSrc":"8471:320:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8506:4:26","nodeType":"YulTypedName","src":"8506:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8515:6:26","nodeType":"YulTypedName","src":"8515:6:26","type":""}],"src":"8471:320:26"},{"body":{"nativeSrc":"8862:53:26","nodeType":"YulBlock","src":"8862:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8879:3:26","nodeType":"YulIdentifier","src":"8879:3:26"},{"arguments":[{"name":"value","nativeSrc":"8902:5:26","nodeType":"YulIdentifier","src":"8902:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8884:17:26","nodeType":"YulIdentifier","src":"8884:17:26"},"nativeSrc":"8884:24:26","nodeType":"YulFunctionCall","src":"8884:24:26"}],"functionName":{"name":"mstore","nativeSrc":"8872:6:26","nodeType":"YulIdentifier","src":"8872:6:26"},"nativeSrc":"8872:37:26","nodeType":"YulFunctionCall","src":"8872:37:26"},"nativeSrc":"8872:37:26","nodeType":"YulExpressionStatement","src":"8872:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8797:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8850:5:26","nodeType":"YulTypedName","src":"8850:5:26","type":""},{"name":"pos","nativeSrc":"8857:3:26","nodeType":"YulTypedName","src":"8857:3:26","type":""}],"src":"8797:118:26"},{"body":{"nativeSrc":"9075:288:26","nodeType":"YulBlock","src":"9075:288:26","statements":[{"nativeSrc":"9085:26:26","nodeType":"YulAssignment","src":"9085:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9097:9:26","nodeType":"YulIdentifier","src":"9097:9:26"},{"kind":"number","nativeSrc":"9108:2:26","nodeType":"YulLiteral","src":"9108:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9093:3:26","nodeType":"YulIdentifier","src":"9093:3:26"},"nativeSrc":"9093:18:26","nodeType":"YulFunctionCall","src":"9093:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9085:4:26","nodeType":"YulIdentifier","src":"9085:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9165:6:26","nodeType":"YulIdentifier","src":"9165:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9178:9:26","nodeType":"YulIdentifier","src":"9178:9:26"},{"kind":"number","nativeSrc":"9189:1:26","nodeType":"YulLiteral","src":"9189:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9174:3:26","nodeType":"YulIdentifier","src":"9174:3:26"},"nativeSrc":"9174:17:26","nodeType":"YulFunctionCall","src":"9174:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9121:43:26","nodeType":"YulIdentifier","src":"9121:43:26"},"nativeSrc":"9121:71:26","nodeType":"YulFunctionCall","src":"9121:71:26"},"nativeSrc":"9121:71:26","nodeType":"YulExpressionStatement","src":"9121:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9246:6:26","nodeType":"YulIdentifier","src":"9246:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9259:9:26","nodeType":"YulIdentifier","src":"9259:9:26"},{"kind":"number","nativeSrc":"9270:2:26","nodeType":"YulLiteral","src":"9270:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9255:3:26","nodeType":"YulIdentifier","src":"9255:3:26"},"nativeSrc":"9255:18:26","nodeType":"YulFunctionCall","src":"9255:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9202:43:26","nodeType":"YulIdentifier","src":"9202:43:26"},"nativeSrc":"9202:72:26","nodeType":"YulFunctionCall","src":"9202:72:26"},"nativeSrc":"9202:72:26","nodeType":"YulExpressionStatement","src":"9202:72:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9328:6:26","nodeType":"YulIdentifier","src":"9328:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9341:9:26","nodeType":"YulIdentifier","src":"9341:9:26"},{"kind":"number","nativeSrc":"9352:2:26","nodeType":"YulLiteral","src":"9352:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9337:3:26","nodeType":"YulIdentifier","src":"9337:3:26"},"nativeSrc":"9337:18:26","nodeType":"YulFunctionCall","src":"9337:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9284:43:26","nodeType":"YulIdentifier","src":"9284:43:26"},"nativeSrc":"9284:72:26","nodeType":"YulFunctionCall","src":"9284:72:26"},"nativeSrc":"9284:72:26","nodeType":"YulExpressionStatement","src":"9284:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8921:442:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9031:9:26","nodeType":"YulTypedName","src":"9031:9:26","type":""},{"name":"value2","nativeSrc":"9043:6:26","nodeType":"YulTypedName","src":"9043:6:26","type":""},{"name":"value1","nativeSrc":"9051:6:26","nodeType":"YulTypedName","src":"9051:6:26","type":""},{"name":"value0","nativeSrc":"9059:6:26","nodeType":"YulTypedName","src":"9059:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9070:4:26","nodeType":"YulTypedName","src":"9070:4:26","type":""}],"src":"8921:442:26"},{"body":{"nativeSrc":"9467:124:26","nodeType":"YulBlock","src":"9467:124:26","statements":[{"nativeSrc":"9477:26:26","nodeType":"YulAssignment","src":"9477:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9489:9:26","nodeType":"YulIdentifier","src":"9489:9:26"},{"kind":"number","nativeSrc":"9500:2:26","nodeType":"YulLiteral","src":"9500:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9485:3:26","nodeType":"YulIdentifier","src":"9485:3:26"},"nativeSrc":"9485:18:26","nodeType":"YulFunctionCall","src":"9485:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9477:4:26","nodeType":"YulIdentifier","src":"9477:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9557:6:26","nodeType":"YulIdentifier","src":"9557:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"9570:9:26","nodeType":"YulIdentifier","src":"9570:9:26"},{"kind":"number","nativeSrc":"9581:1:26","nodeType":"YulLiteral","src":"9581:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9566:3:26","nodeType":"YulIdentifier","src":"9566:3:26"},"nativeSrc":"9566:17:26","nodeType":"YulFunctionCall","src":"9566:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9513:43:26","nodeType":"YulIdentifier","src":"9513:43:26"},"nativeSrc":"9513:71:26","nodeType":"YulFunctionCall","src":"9513:71:26"},"nativeSrc":"9513:71:26","nodeType":"YulExpressionStatement","src":"9513:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9369:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9439:9:26","nodeType":"YulTypedName","src":"9439:9:26","type":""},{"name":"value0","nativeSrc":"9451:6:26","nodeType":"YulTypedName","src":"9451:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9462:4:26","nodeType":"YulTypedName","src":"9462:4:26","type":""}],"src":"9369:222:26"},{"body":{"nativeSrc":"9625:152:26","nodeType":"YulBlock","src":"9625:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9642:1:26","nodeType":"YulLiteral","src":"9642:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9645:77:26","nodeType":"YulLiteral","src":"9645:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9635:6:26","nodeType":"YulIdentifier","src":"9635:6:26"},"nativeSrc":"9635:88:26","nodeType":"YulFunctionCall","src":"9635:88:26"},"nativeSrc":"9635:88:26","nodeType":"YulExpressionStatement","src":"9635:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9739:1:26","nodeType":"YulLiteral","src":"9739:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"9742:4:26","nodeType":"YulLiteral","src":"9742:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9732:6:26","nodeType":"YulIdentifier","src":"9732:6:26"},"nativeSrc":"9732:15:26","nodeType":"YulFunctionCall","src":"9732:15:26"},"nativeSrc":"9732:15:26","nodeType":"YulExpressionStatement","src":"9732:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9763:1:26","nodeType":"YulLiteral","src":"9763:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9766:4:26","nodeType":"YulLiteral","src":"9766:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9756:6:26","nodeType":"YulIdentifier","src":"9756:6:26"},"nativeSrc":"9756:15:26","nodeType":"YulFunctionCall","src":"9756:15:26"},"nativeSrc":"9756:15:26","nodeType":"YulExpressionStatement","src":"9756:15:26"}]},"name":"panic_error_0x11","nativeSrc":"9597:180:26","nodeType":"YulFunctionDefinition","src":"9597:180:26"},{"body":{"nativeSrc":"9827:147:26","nodeType":"YulBlock","src":"9827:147:26","statements":[{"nativeSrc":"9837:25:26","nodeType":"YulAssignment","src":"9837:25:26","value":{"arguments":[{"name":"x","nativeSrc":"9860:1:26","nodeType":"YulIdentifier","src":"9860:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9842:17:26","nodeType":"YulIdentifier","src":"9842:17:26"},"nativeSrc":"9842:20:26","nodeType":"YulFunctionCall","src":"9842:20:26"},"variableNames":[{"name":"x","nativeSrc":"9837:1:26","nodeType":"YulIdentifier","src":"9837:1:26"}]},{"nativeSrc":"9871:25:26","nodeType":"YulAssignment","src":"9871:25:26","value":{"arguments":[{"name":"y","nativeSrc":"9894:1:26","nodeType":"YulIdentifier","src":"9894:1:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9876:17:26","nodeType":"YulIdentifier","src":"9876:17:26"},"nativeSrc":"9876:20:26","nodeType":"YulFunctionCall","src":"9876:20:26"},"variableNames":[{"name":"y","nativeSrc":"9871:1:26","nodeType":"YulIdentifier","src":"9871:1:26"}]},{"nativeSrc":"9905:16:26","nodeType":"YulAssignment","src":"9905:16:26","value":{"arguments":[{"name":"x","nativeSrc":"9916:1:26","nodeType":"YulIdentifier","src":"9916:1:26"},{"name":"y","nativeSrc":"9919:1:26","nodeType":"YulIdentifier","src":"9919:1:26"}],"functionName":{"name":"add","nativeSrc":"9912:3:26","nodeType":"YulIdentifier","src":"9912:3:26"},"nativeSrc":"9912:9:26","nodeType":"YulFunctionCall","src":"9912:9:26"},"variableNames":[{"name":"sum","nativeSrc":"9905:3:26","nodeType":"YulIdentifier","src":"9905:3:26"}]},{"body":{"nativeSrc":"9945:22:26","nodeType":"YulBlock","src":"9945:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9947:16:26","nodeType":"YulIdentifier","src":"9947:16:26"},"nativeSrc":"9947:18:26","nodeType":"YulFunctionCall","src":"9947:18:26"},"nativeSrc":"9947:18:26","nodeType":"YulExpressionStatement","src":"9947:18:26"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9937:1:26","nodeType":"YulIdentifier","src":"9937:1:26"},{"name":"sum","nativeSrc":"9940:3:26","nodeType":"YulIdentifier","src":"9940:3:26"}],"functionName":{"name":"gt","nativeSrc":"9934:2:26","nodeType":"YulIdentifier","src":"9934:2:26"},"nativeSrc":"9934:10:26","nodeType":"YulFunctionCall","src":"9934:10:26"},"nativeSrc":"9931:36:26","nodeType":"YulIf","src":"9931:36:26"}]},"name":"checked_add_t_uint256","nativeSrc":"9783:191:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9814:1:26","nodeType":"YulTypedName","src":"9814:1:26","type":""},{"name":"y","nativeSrc":"9817:1:26","nodeType":"YulTypedName","src":"9817:1:26","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9823:3:26","nodeType":"YulTypedName","src":"9823:3:26","type":""}],"src":"9783:191:26"},{"body":{"nativeSrc":"10106:206:26","nodeType":"YulBlock","src":"10106:206:26","statements":[{"nativeSrc":"10116:26:26","nodeType":"YulAssignment","src":"10116:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10128:9:26","nodeType":"YulIdentifier","src":"10128:9:26"},{"kind":"number","nativeSrc":"10139:2:26","nodeType":"YulLiteral","src":"10139:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10124:3:26","nodeType":"YulIdentifier","src":"10124:3:26"},"nativeSrc":"10124:18:26","nodeType":"YulFunctionCall","src":"10124:18:26"},"variableNames":[{"name":"tail","nativeSrc":"10116:4:26","nodeType":"YulIdentifier","src":"10116:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10196:6:26","nodeType":"YulIdentifier","src":"10196:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10209:9:26","nodeType":"YulIdentifier","src":"10209:9:26"},{"kind":"number","nativeSrc":"10220:1:26","nodeType":"YulLiteral","src":"10220:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10205:3:26","nodeType":"YulIdentifier","src":"10205:3:26"},"nativeSrc":"10205:17:26","nodeType":"YulFunctionCall","src":"10205:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10152:43:26","nodeType":"YulIdentifier","src":"10152:43:26"},"nativeSrc":"10152:71:26","nodeType":"YulFunctionCall","src":"10152:71:26"},"nativeSrc":"10152:71:26","nodeType":"YulExpressionStatement","src":"10152:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10277:6:26","nodeType":"YulIdentifier","src":"10277:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10290:9:26","nodeType":"YulIdentifier","src":"10290:9:26"},{"kind":"number","nativeSrc":"10301:2:26","nodeType":"YulLiteral","src":"10301:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10286:3:26","nodeType":"YulIdentifier","src":"10286:3:26"},"nativeSrc":"10286:18:26","nodeType":"YulFunctionCall","src":"10286:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10233:43:26","nodeType":"YulIdentifier","src":"10233:43:26"},"nativeSrc":"10233:72:26","nodeType":"YulFunctionCall","src":"10233:72:26"},"nativeSrc":"10233:72:26","nodeType":"YulExpressionStatement","src":"10233:72:26"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"9980:332:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10070:9:26","nodeType":"YulTypedName","src":"10070:9:26","type":""},{"name":"value1","nativeSrc":"10082:6:26","nodeType":"YulTypedName","src":"10082:6:26","type":""},{"name":"value0","nativeSrc":"10090:6:26","nodeType":"YulTypedName","src":"10090:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10101:4:26","nodeType":"YulTypedName","src":"10101:4:26","type":""}],"src":"9980:332:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610355578063a217fddf14610373578063a9059cbb14610391578063d547741f146103c1578063dd62ed3e146103dd5761012c565b806342966c681461029f57806370a08231146102bb57806379cc6790146102eb57806382aefa241461030757806391d14854146103255761012c565b8063248a9ca3116100f4578063248a9ca3146101fd5780632f2ff15d1461022d578063313ce5671461024957806336568abe1461026757806340c10f19146102835761012c565b806301ffc9a71461013157806306fdde0314610161578063095ea7b31461017f57806318160ddd146101af57806323b872dd146101cd575b600080fd5b61014b60048036038101906101469190611298565b61040d565b60405161015891906112e0565b60405180910390f35b610169610487565b604051610176919061138b565b60405180910390f35b61019960048036038101906101949190611441565b610519565b6040516101a691906112e0565b60405180910390f35b6101b761053c565b6040516101c49190611490565b60405180910390f35b6101e760048036038101906101e291906114ab565b610546565b6040516101f491906112e0565b60405180910390f35b61021760048036038101906102129190611534565b610575565b6040516102249190611570565b60405180910390f35b6102476004803603810190610242919061158b565b610595565b005b6102516105b7565b60405161025e91906115e7565b60405180910390f35b610281600480360381019061027c919061158b565b6105c0565b005b61029d60048036038101906102989190611441565b61063b565b005b6102b960048036038101906102b49190611602565b610674565b005b6102d560048036038101906102d0919061162f565b610688565b6040516102e29190611490565b60405180910390f35b61030560048036038101906103009190611441565b6106d0565b005b61030f6106f0565b60405161031c9190611570565b60405180910390f35b61033f600480360381019061033a919061158b565b610714565b60405161034c91906112e0565b60405180910390f35b61035d61077f565b60405161036a919061138b565b60405180910390f35b61037b610811565b6040516103889190611570565b60405180910390f35b6103ab60048036038101906103a69190611441565b610818565b6040516103b891906112e0565b60405180910390f35b6103db60048036038101906103d6919061158b565b61083b565b005b6103f760048036038101906103f2919061165c565b61085d565b6040516104049190611490565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610480575061047f826108e4565b5b9050919050565b606060038054610496906116cb565b80601f01602080910402602001604051908101604052809291908181526020018280546104c2906116cb565b801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b5050505050905090565b60008061052461094e565b9050610531818585610956565b600191505092915050565b6000600254905090565b60008061055161094e565b905061055e858285610968565b6105698585856109fd565b60019150509392505050565b600060056000838152602001908152602001600020600101549050919050565b61059e82610575565b6105a781610af1565b6105b18383610b05565b50505050565b60006012905090565b6105c861094e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062c576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106368282610bf7565b505050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12261066581610af1565b61066f8383610cea565b505050565b61068561067f61094e565b82610d6c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106e2826106dc61094e565b83610968565b6106ec8282610d6c565b5050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12281565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606004805461078e906116cb565b80601f01602080910402602001604051908101604052809291908181526020018280546107ba906116cb565b80156108075780601f106107dc57610100808354040283529160200191610807565b820191906000526020600020905b8154815290600101906020018083116107ea57829003601f168201915b5050505050905090565b6000801b81565b60008061082361094e565b90506108308185856109fd565b600191505092915050565b61084482610575565b61084d81610af1565b6108578383610bf7565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6109638383836001610dee565b505050565b6000610974848461085d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109f757818110156109e7578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109de9392919061170b565b60405180910390fd5b6109f684848484036000610dee565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a6f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a669190611742565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae15760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ad89190611742565b60405180910390fd5b610aec838383610fc5565b505050565b610b0281610afd61094e565b6111ea565b50565b6000610b118383610714565b610bec5760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b8961094e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610bf1565b600090505b92915050565b6000610c038383610714565b15610cdf5760006005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c7c61094e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610ce4565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d539190611742565b60405180910390fd5b610d6860008383610fc5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dde5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dd59190611742565b60405180910390fd5b610dea82600083610fc5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e605760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e579190611742565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ec99190611742565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610fbf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fb69190611490565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361101757806002600082825461100b919061178c565b925050819055506110ea565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110a3578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161109a9392919061170b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111335780600260008282540392505081905550611180565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111dd9190611490565b60405180910390a3505050565b6111f48282610714565b6112375780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161122e9291906117c0565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61127581611240565b811461128057600080fd5b50565b6000813590506112928161126c565b92915050565b6000602082840312156112ae576112ad61123b565b5b60006112bc84828501611283565b91505092915050565b60008115159050919050565b6112da816112c5565b82525050565b60006020820190506112f560008301846112d1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561133557808201518184015260208101905061131a565b60008484015250505050565b6000601f19601f8301169050919050565b600061135d826112fb565b6113678185611306565b9350611377818560208601611317565b61138081611341565b840191505092915050565b600060208201905081810360008301526113a58184611352565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113d8826113ad565b9050919050565b6113e8816113cd565b81146113f357600080fd5b50565b600081359050611405816113df565b92915050565b6000819050919050565b61141e8161140b565b811461142957600080fd5b50565b60008135905061143b81611415565b92915050565b600080604083850312156114585761145761123b565b5b6000611466858286016113f6565b92505060206114778582860161142c565b9150509250929050565b61148a8161140b565b82525050565b60006020820190506114a56000830184611481565b92915050565b6000806000606084860312156114c4576114c361123b565b5b60006114d2868287016113f6565b93505060206114e3868287016113f6565b92505060406114f48682870161142c565b9150509250925092565b6000819050919050565b611511816114fe565b811461151c57600080fd5b50565b60008135905061152e81611508565b92915050565b60006020828403121561154a5761154961123b565b5b60006115588482850161151f565b91505092915050565b61156a816114fe565b82525050565b60006020820190506115856000830184611561565b92915050565b600080604083850312156115a2576115a161123b565b5b60006115b08582860161151f565b92505060206115c1858286016113f6565b9150509250929050565b600060ff82169050919050565b6115e1816115cb565b82525050565b60006020820190506115fc60008301846115d8565b92915050565b6000602082840312156116185761161761123b565b5b60006116268482850161142c565b91505092915050565b6000602082840312156116455761164461123b565b5b6000611653848285016113f6565b91505092915050565b600080604083850312156116735761167261123b565b5b6000611681858286016113f6565b9250506020611692858286016113f6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116e357607f821691505b6020821081036116f6576116f561169c565b5b50919050565b611705816113cd565b82525050565b600060608201905061172060008301866116fc565b61172d6020830185611481565b61173a6040830184611481565b949350505050565b600060208201905061175760008301846116fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117978261140b565b91506117a28361140b565b92508282019050808211156117ba576117b961175d565b5b92915050565b60006040820190506117d560008301856116fc565b6117e26020830184611561565b939250505056fea2646970667358221220ea4e43d7af00371bde455b037408b765afa287c133c80d8bcbcb15891eb847b864736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DD JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x82AEFA24 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x325 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x283 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x162F JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30F PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x480 JUMPI POP PUSH2 0x47F DUP3 PUSH2 0x8E4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C2 SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x524 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH2 0x531 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x551 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH2 0x55E DUP6 DUP3 DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x569 DUP6 DUP6 DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59E DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x5A7 DUP2 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x5B1 DUP4 DUP4 PUSH2 0xB05 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0x94E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 DUP3 DUP3 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 PUSH2 0x665 DUP2 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x66F DUP4 DUP4 PUSH2 0xCEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0x67F PUSH2 0x94E JUMP JUMPDEST DUP3 PUSH2 0xD6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E2 DUP3 PUSH2 0x6DC PUSH2 0x94E JUMP JUMPDEST DUP4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x6EC DUP3 DUP3 PUSH2 0xD6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x114E74F6EA3BD819998F78687BFCB11B140DA08E9B7D222FA9C1F1BA1F2AA122 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x78E SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7BA SWAP1 PUSH2 0x16CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x807 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x807 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x823 PUSH2 0x94E JUMP JUMPDEST SWAP1 POP PUSH2 0x830 DUP2 DUP6 DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x844 DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x84D DUP2 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x857 DUP4 DUP4 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x963 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x974 DUP5 DUP5 PUSH2 0x85D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xDEE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEC DUP4 DUP4 DUP4 PUSH2 0xFC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB02 DUP2 PUSH2 0xAFD PUSH2 0x94E JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB11 DUP4 DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0xBEC JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB89 PUSH2 0x94E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP4 DUP4 PUSH2 0x714 JUMP JUMPDEST ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC7C PUSH2 0x94E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD68 PUSH1 0x0 DUP4 DUP4 PUSH2 0xFC5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEA DUP3 PUSH1 0x0 DUP4 PUSH2 0xFC5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFBF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1017 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10A3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1133 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1180 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x11F4 DUP3 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1237 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP3 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1275 DUP2 PUSH2 0x1240 JUMP JUMPDEST DUP2 EQ PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1292 DUP2 PUSH2 0x126C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x12AD PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12BC DUP5 DUP3 DUP6 ADD PUSH2 0x1283 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0x12C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1335 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x131A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135D DUP3 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x1367 DUP2 DUP6 PUSH2 0x1306 JUMP JUMPDEST SWAP4 POP PUSH2 0x1377 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x1380 DUP2 PUSH2 0x1341 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13A5 DUP2 DUP5 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP3 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E8 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1405 DUP2 PUSH2 0x13DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x140B JUMP JUMPDEST DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x143B DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1466 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1477 DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x148A DUP2 PUSH2 0x140B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1481 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E3 DUP7 DUP3 DUP8 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F4 DUP7 DUP3 DUP8 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1511 DUP2 PUSH2 0x14FE JUMP JUMPDEST DUP2 EQ PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152E DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154A JUMPI PUSH2 0x1549 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1558 DUP5 DUP3 DUP6 ADD PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156A DUP2 PUSH2 0x14FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B0 DUP6 DUP3 DUP7 ADD PUSH2 0x151F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C1 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E1 DUP2 PUSH2 0x15CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1618 JUMPI PUSH2 0x1617 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1626 DUP5 DUP3 DUP6 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1653 DUP5 DUP3 DUP6 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x123B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1681 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1692 DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16F6 JUMPI PUSH2 0x16F5 PUSH2 0x169C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1705 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1720 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x172D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1481 JUMP JUMPDEST PUSH2 0x173A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1481 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1757 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1797 DUP3 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x17A2 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17BA JUMPI PUSH2 0x17B9 PUSH2 0x175D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x17E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1561 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x4E NUMBER 0xD7 0xAF STOP CALLDATACOPY SHL 0xDE GASLIMIT JUMPDEST SUB PUSH21 0x8B765AFA287C133C80D8BCBCB15891EB847B86473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"712:435:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1035:109:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;779:62:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:7:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2688:82:7:-;2737:5;2761:2;2754:9;;2688:82;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1035:109:25:-;817:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1119:17:25::1;1125:2;1129:6;1119:5;:17::i;:::-;1035:109:::0;;;:::o;618:87:9:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2933:116:7:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;1021:158:9:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;779:62:25:-;817:24;779:62;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:7:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3244:178:7:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3455:140:7:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;730:146:20:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;8630:128:7:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;7362:208:7:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;88:117:26:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:126::-;2899:7;2939:42;2932:5;2928:54;2917:65;;2862:126;;;:::o;2994:96::-;3031:7;3060:24;3078:5;3060:24;:::i;:::-;3049:35;;2994:96;;;:::o;3096:122::-;3169:24;3187:5;3169:24;:::i;:::-;3162:5;3159:35;3149:63;;3208:1;3205;3198:12;3149:63;3096:122;:::o;3224:139::-;3270:5;3308:6;3295:20;3286:29;;3324:33;3351:5;3324:33;:::i;:::-;3224:139;;;;:::o;3369:77::-;3406:7;3435:5;3424:16;;3369:77;;;:::o;3452:122::-;3525:24;3543:5;3525:24;:::i;:::-;3518:5;3515:35;3505:63;;3564:1;3561;3554:12;3505:63;3452:122;:::o;3580:139::-;3626:5;3664:6;3651:20;3642:29;;3680:33;3707:5;3680:33;:::i;:::-;3580:139;;;;:::o;3725:474::-;3793:6;3801;3850:2;3838:9;3829:7;3825:23;3821:32;3818:119;;;3856:79;;:::i;:::-;3818:119;3976:1;4001:53;4046:7;4037:6;4026:9;4022:22;4001:53;:::i;:::-;3991:63;;3947:117;4103:2;4129:53;4174:7;4165:6;4154:9;4150:22;4129:53;:::i;:::-;4119:63;;4074:118;3725:474;;;;;:::o;4205:118::-;4292:24;4310:5;4292:24;:::i;:::-;4287:3;4280:37;4205:118;;:::o;4329:222::-;4422:4;4460:2;4449:9;4445:18;4437:26;;4473:71;4541:1;4530:9;4526:17;4517:6;4473:71;:::i;:::-;4329:222;;;;:::o;4557:619::-;4634:6;4642;4650;4699:2;4687:9;4678:7;4674:23;4670:32;4667:119;;;4705:79;;:::i;:::-;4667:119;4825:1;4850:53;4895:7;4886:6;4875:9;4871:22;4850:53;:::i;:::-;4840:63;;4796:117;4952:2;4978:53;5023:7;5014:6;5003:9;4999:22;4978:53;:::i;:::-;4968:63;;4923:118;5080:2;5106:53;5151:7;5142:6;5131:9;5127:22;5106:53;:::i;:::-;5096:63;;5051:118;4557:619;;;;;:::o;5182:77::-;5219:7;5248:5;5237:16;;5182:77;;;:::o;5265:122::-;5338:24;5356:5;5338:24;:::i;:::-;5331:5;5328:35;5318:63;;5377:1;5374;5367:12;5318:63;5265:122;:::o;5393:139::-;5439:5;5477:6;5464:20;5455:29;;5493:33;5520:5;5493:33;:::i;:::-;5393:139;;;;:::o;5538:329::-;5597:6;5646:2;5634:9;5625:7;5621:23;5617:32;5614:119;;;5652:79;;:::i;:::-;5614:119;5772:1;5797:53;5842:7;5833:6;5822:9;5818:22;5797:53;:::i;:::-;5787:63;;5743:117;5538:329;;;;:::o;5873:118::-;5960:24;5978:5;5960:24;:::i;:::-;5955:3;5948:37;5873:118;;:::o;5997:222::-;6090:4;6128:2;6117:9;6113:18;6105:26;;6141:71;6209:1;6198:9;6194:17;6185:6;6141:71;:::i;:::-;5997:222;;;;:::o;6225:474::-;6293:6;6301;6350:2;6338:9;6329:7;6325:23;6321:32;6318:119;;;6356:79;;:::i;:::-;6318:119;6476:1;6501:53;6546:7;6537:6;6526:9;6522:22;6501:53;:::i;:::-;6491:63;;6447:117;6603:2;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6574:118;6225:474;;;;;:::o;6705:86::-;6740:7;6780:4;6773:5;6769:16;6758:27;;6705:86;;;:::o;6797:112::-;6880:22;6896:5;6880:22;:::i;:::-;6875:3;6868:35;6797:112;;:::o;6915:214::-;7004:4;7042:2;7031:9;7027:18;7019:26;;7055:67;7119:1;7108:9;7104:17;7095:6;7055:67;:::i;:::-;6915:214;;;;:::o;7135:329::-;7194:6;7243:2;7231:9;7222:7;7218:23;7214:32;7211:119;;;7249:79;;:::i;:::-;7211:119;7369:1;7394:53;7439:7;7430:6;7419:9;7415:22;7394:53;:::i;:::-;7384:63;;7340:117;7135:329;;;;:::o;7470:::-;7529:6;7578:2;7566:9;7557:7;7553:23;7549:32;7546:119;;;7584:79;;:::i;:::-;7546:119;7704:1;7729:53;7774:7;7765:6;7754:9;7750:22;7729:53;:::i;:::-;7719:63;;7675:117;7470:329;;;;:::o;7805:474::-;7873:6;7881;7930:2;7918:9;7909:7;7905:23;7901:32;7898:119;;;7936:79;;:::i;:::-;7898:119;8056:1;8081:53;8126:7;8117:6;8106:9;8102:22;8081:53;:::i;:::-;8071:63;;8027:117;8183:2;8209:53;8254:7;8245:6;8234:9;8230:22;8209:53;:::i;:::-;8199:63;;8154:118;7805:474;;;;;:::o;8285:180::-;8333:77;8330:1;8323:88;8430:4;8427:1;8420:15;8454:4;8451:1;8444:15;8471:320;8515:6;8552:1;8546:4;8542:12;8532:22;;8599:1;8593:4;8589:12;8620:18;8610:81;;8676:4;8668:6;8664:17;8654:27;;8610:81;8738:2;8730:6;8727:14;8707:18;8704:38;8701:84;;8757:18;;:::i;:::-;8701:84;8522:269;8471:320;;;:::o;8797:118::-;8884:24;8902:5;8884:24;:::i;:::-;8879:3;8872:37;8797:118;;:::o;8921:442::-;9070:4;9108:2;9097:9;9093:18;9085:26;;9121:71;9189:1;9178:9;9174:17;9165:6;9121:71;:::i;:::-;9202:72;9270:2;9259:9;9255:18;9246:6;9202:72;:::i;:::-;9284;9352:2;9341:9;9337:18;9328:6;9284:72;:::i;:::-;8921:442;;;;;;:::o;9369:222::-;9462:4;9500:2;9489:9;9485:18;9477:26;;9513:71;9581:1;9570:9;9566:17;9557:6;9513:71;:::i;:::-;9369:222;;;;:::o;9597:180::-;9645:77;9642:1;9635:88;9742:4;9739:1;9732:15;9766:4;9763:1;9756:15;9783:191;9823:3;9842:20;9860:1;9842:20;:::i;:::-;9837:25;;9876:20;9894:1;9876:20;:::i;:::-;9871:25;;9919:1;9916;9912:9;9905:16;;9940:3;9937:1;9934:10;9931:36;;;9947:18;;:::i;:::-;9931:36;9783:191;;;;:::o;9980:332::-;10101:4;10139:2;10128:9;10124:18;10116:26;;10152:71;10220:1;10209:9;10205:17;10196:6;10152:71;:::i;:::-;10233:72;10301:2;10290:9;10286:18;10277:6;10233:72;:::i;:::-;9980:332;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","ISSUER_ROLE()":"82aefa24","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ISSUER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlueCarbonRegistry.sol\":\"CarbonToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/BlueCarbonRegistry.sol\":{\"keccak256\":\"0x0c2b143df8c5eda22ddf1d133a6f722c10f5551731d7d6348b4d4fdb8bef8d51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8ff435b5d82ef104829c25c8457c39b0013e603b29be3c89bdaf2ecff0c5a09\",\"dweb:/ipfs/QmWBjYmNjFwGjfkphyQFxNtmjP1ezBeie16QZArRDmTSsv\"]}},\"version\":1}"}}}}}